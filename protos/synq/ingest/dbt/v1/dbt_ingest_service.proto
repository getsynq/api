syntax = "proto3";

package synq.ingest.dbt.v1;

import "synq/v1/scope_authorization.proto";

option go_package = "github.com/getsynq/api/ingest/dbt/v1";

//https://docs.getdbt.com/reference/artifacts/dbt-artifacts
message DbtArtifact {
  oneof artifact {
    bytes manifest_json = 1;
    bytes run_results_json = 2;
    bytes catalog_json = 3;
    bytes sources_json = 4;
    bytes semantic_manifest_json = 5;
  }
}

message IngestInvocationRequest {
  // Arguments passed to the dbt executable
  repeated string args = 1;
  // Exit code of the dbt command
  int32 exit_code = 2;
  // Standard output log of the dbt command
  bytes std_out = 3;
  // Standard error log of the dbt command
  bytes std_err = 4;
  // Environment variables collected during execution
  map<string, string> environment_vars = 5;
  // Artifacts generated by the dbt command
  repeated DbtArtifact artifacts = 6;
  // Version of the uploader tool
  string uploader_version = 7;
  // Build time of the uploader tool
  string uploader_build_time = 8;
}

message IngestInvocationResponse {}

service DbtService {
  rpc IngestInvocation(IngestInvocationRequest) returns (IngestInvocationResponse) {
    option (synq.v1.scope_authorization) = {
      scopes: [
        SCOPE_INGEST_DBT
      ]
    };
  }
}
