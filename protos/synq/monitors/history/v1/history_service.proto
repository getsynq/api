syntax = "proto3";
package synq.monitors.history.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "synq/monitors/history/v1/predictions.proto";
import "synq/v1/scope_authorization.proto";
// import "synq/entities/v1/identifier.proto";

option go_package = "github.com/getsynq/api/monitors/history/v1";

service HistoryService {
  rpc History(HistoryRequest) returns (HistoryResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (synq.v1.scope_authorization) = {
      scopes: [
        SCOPE_MONITORS_READ,
        SCOPE_SRE_AGENT
      ]
    };
    option (google.api.http) = {get: "/api/monitors/history/v1/{monitor_path}"};
  }
}

message HistoryRequest {
  // Experimental: Will be replaced with identifier
  string monitor_path = 1;

  int32 metrics_version = 3;
  repeated string segments = 4;
  google.protobuf.Timestamp from = 5;
  google.protobuf.Timestamp to = 6;
}

message HistoryResponse {
  repeated synq.monitors.history.v1.Prediction predictions = 1;
}
