syntax = "proto3";

package synq.agent.dwh.v1;

import "buf/validate/validate.proto";
import "synq/agent/dwh/v1/dwh_conf.proto";

option go_package = "github.com/getsynq/api/agent/dwh/v1";

// Config represents the main configuration for the DWH agent
message Config {
  // Agent contains metadata about this agent instance
  message Agent {
    // Name of the agent instance
    string name = 1;
    // Tags to categorize and organize the agent
    repeated string tags = 2;

    enum LogLevel {
      //Defaults to info
      LOG_LEVEL_UNSPECIFIED = 0;
      LOG_LEVEL_TRACE = 1;
      LOG_LEVEL_DEBUG = 2;
      LOG_LEVEL_INFO = 3;
      LOG_LEVEL_WARN = 4;
      LOG_LEVEL_ERROR = 5;
    }
    LogLevel log_level = 3;
    optional bool log_json = 4;
    optional bool log_report_caller = 5;
  }

  // SYNQ contains authentication and connection details for the SYNQ platform
  message SYNQ {
    // Client ID for OAuth authentication
    string client_id = 1 [(buf.validate.field) = {
      required: true
      string: {}
    }];

    // Client secret for OAuth authentication
    string client_secret = 2 [(buf.validate.field) = {
      required: true
      string: {}
    }];

    // SYNQ API agent endpoint (host:port)
    string endpoint = 3 [(buf.validate.field) = {
      required: true
      string: {host_and_port: true}
    }];
    // SYNQ API ingest endpoint (host:port)
    string ingest_endpoint = 4 [(buf.validate.field) = {
      required: true
      string: {host_and_port: true}
    }];

    // OAuth authentication URL
    string oauth_url = 5 [(buf.validate.field) = {
      required: true
      string: {uri: true}
    }];
  }

  // Connection represents a database connection configuration
  message Connection {
    // Name of the connection
    string name = 1 [(buf.validate.field) = {required: true}];

    bool disabled = 2;

    // How many queries to DWH can be executed in parallel, defaults to 2
    int32 parallelism = 3 [(buf.validate.field) = {
      int32: {
        gte: 1
        lte: 256
      }
    }];

    // Type of database connection
    oneof config {
      option (buf.validate.oneof).required = true;
      synq.agent.dwh.v1.BigQueryConf bigquery = 50;
      synq.agent.dwh.v1.ClickhouseConf clickhouse = 51;
      synq.agent.dwh.v1.DatabricksConf databricks = 52;
      synq.agent.dwh.v1.MySQLConf mysql = 53;
      synq.agent.dwh.v1.PostgresConf postgres = 54;
      synq.agent.dwh.v1.RedshiftConf redshift = 55;
      synq.agent.dwh.v1.SnowflakeConf snowflake = 56;
    }
  }

  // Agent configuration
  Agent agent = 1;

  // SYNQ platform configuration
  SYNQ synq = 2;

  // Map of connection configurations
  map<string, Connection> connections = 3 [(buf.validate.field) = {
    required: true
    map: {
      keys: {
        string: {pattern: '^[a-zA-Z][a-zA-Z0-9-_]*$'}
      }
      values: {required: true}
      min_pairs: 1
    }
  }];
}
