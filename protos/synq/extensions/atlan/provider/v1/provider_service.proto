syntax = "proto3";
package synq.extensions.atlan.provider.v1;

import "synq/extensions/atlan/provider/v1/structs.proto";
import "synq/v1/scope_authorization.proto";

option go_package = "github.com/getsynq/api/extensions/atlan/provider/v1";

service AtlanProviderService {
  rpc GetAtlanConnections(GetAtlanConnectionsRequest) returns (GetAtlanConnectionsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (synq.v1.scope_authorization) = {
      scopes: [SCOPE_EXTENSIONS_MANAGE]
    };
  }

  rpc GetAtlanDataProducts(GetAtlanDataProductsRequest) returns (GetAtlanDataProductsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (synq.v1.scope_authorization) = {
      scopes: [SCOPE_EXTENSIONS_MANAGE]
    };
  }

  rpc GetAtlanDomains(GetAtlanDomainsRequest) returns (GetAtlanDomainsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (synq.v1.scope_authorization) = {
      scopes: [SCOPE_EXTENSIONS_MANAGE]
    };
  }
}

message GetAtlanConnectionsRequest {}

message GetAtlanConnectionsResponse {
  repeated AtlanConnection connections = 1;
}

message GetAtlanDataProductsRequest {}

message GetAtlanDataProductsResponse {
  repeated AtlanDataProduct data_products = 1;
}

message GetAtlanDomainsRequest {}

message GetAtlanDomainsResponse {
  repeated AtlanDataDomain domains = 1;
}
