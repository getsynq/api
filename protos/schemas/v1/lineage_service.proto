syntax = "proto3";

package schemas.v1;

import "schemas/v1/lineage.proto";

option go_package = "github.com/getsynq/cloud/api/schemas/v1";

import "core/v1/entity.proto";

// LineageService allows you to fetch:
// * Entity level lineage from a starting point of one or more entities.
// * Column Level lineage from a starting point of multiple columns of a single entity.
service LineageService {
  rpc GetLineage(GetLineageRequest) returns (GetLineageResponse) {}
}

message GetLineageRequest {
  LineageDirection lineage_direction = 1;
  GetLineageStartPoint start_point = 2;
  optional int32 max_depth = 3;
}

message GetLineageResponse {
  Lineage lineage = 1;
}

// Direction of the lineage to query.
enum LineageDirection {
  LINEAGE_DIRECTION_UNSPECIFIED = 0;
  LINEAGE_DIRECTION_UPSTREAM = 1;
  LINEAGE_DIRECTION_DOWNSTREAM = 2;
  LINEAGE_DIRECTION_UPSTREAM_DOWNSTREAM = 3;
}

// Possible starting points to get lineage from.
message GetLineageStartPoint {
  oneof from {
    EntitiesStartPoint entities = 1;
    EntityColumnsStartPoint entity_columns = 2;
  }
}

message EntitiesStartPoint {
  repeated core.v1.EntityLookup entities = 1;
}

message EntityColumnsStartPoint {
  core.v1.EntityLookup entitiy = 1;
  repeated string column_ids = 2;
}
