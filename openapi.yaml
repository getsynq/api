openapi: 3.1.0
info:
    version: "1.0"
    title: "SYNQ"
security:
    - bearerAuth: []
servers:
    - url: https://developer.synq.io
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
    schemas:
        synq.entities.v1.EntityType:
            type: string
            title: EntityType
            enum:
                - ENTITY_TYPE_UNSPECIFIED
                - ENTITY_TYPE_BQ_TABLE
                - ENTITY_TYPE_BQ_VIEW
                - ENTITY_TYPE_LOOKER_LOOK
                - ENTITY_TYPE_LOOKER_EXPLORE
                - ENTITY_TYPE_LOOKER_VIEW
                - ENTITY_TYPE_LOOKER_DASHBOARD
                - ENTITY_TYPE_DBT_MODEL
                - ENTITY_TYPE_DBT_TEST
                - ENTITY_TYPE_DBT_SOURCE
                - ENTITY_TYPE_DBT_PROJECT
                - ENTITY_TYPE_DBT_METRIC
                - ENTITY_TYPE_DBT_SNAPSHOT
                - ENTITY_TYPE_DBT_SEED
                - ENTITY_TYPE_DBT_ANALYSIS
                - ENTITY_TYPE_DBT_EXPOSURE
                - ENTITY_TYPE_DBT_GROUP
                - ENTITY_TYPE_DBT_CLOUD_PROJECT
                - ENTITY_TYPE_DBT_CLOUD_JOB
                - ENTITY_TYPE_SNOWFLAKE_TABLE
                - ENTITY_TYPE_SNOWFLAKE_VIEW
                - ENTITY_TYPE_REDSHIFT_TABLE
                - ENTITY_TYPE_REDSHIFT_VIEW
                - ENTITY_TYPE_TABLEAU_EMBEDDED
                - ENTITY_TYPE_TABLEAU_PUBLISHED
                - ENTITY_TYPE_TABLEAU_CUSTOM_SQL
                - ENTITY_TYPE_TABLEAU_TABLE
                - ENTITY_TYPE_TABLEAU_SHEET
                - ENTITY_TYPE_TABLEAU_DASHBOARD
                - ENTITY_TYPE_AIRFLOW_DAG
                - ENTITY_TYPE_AIRFLOW_TASK
                - ENTITY_TYPE_CLICKHOUSE_TABLE
                - ENTITY_TYPE_CLICKHOUSE_VIEW
                - ENTITY_TYPE_ANOMALY_MONITOR
                - ENTITY_TYPE_ANOMALY_MONITOR_SEGMENT
                - ENTITY_TYPE_SQLTEST_TEST
                - ENTITY_TYPE_POSTGRES_TABLE
                - ENTITY_TYPE_POSTGRES_VIEW
                - ENTITY_TYPE_MYSQL_TABLE
                - ENTITY_TYPE_MYSQL_VIEW
                - ENTITY_TYPE_DATABRICKS_WAREHOUSE
                - ENTITY_TYPE_DATABRICKS_TABLE
                - ENTITY_TYPE_DATABRICKS_VIEW
                - ENTITY_TYPE_DATABRICKS_JOB
                - ENTITY_TYPE_DATABRICKS_NOTEBOOK
                - ENTITY_TYPE_DATABRICKS_QUERY
                - ENTITY_TYPE_DATABRICKS_DASHBOARD
                - ENTITY_TYPE_SQLMESH_PROJECT
                - ENTITY_TYPE_SQLMESH_SQL_MODEL
                - ENTITY_TYPE_SQLMESH_PYTHON_MODEL
                - ENTITY_TYPE_SQLMESH_EXTERNAL
                - ENTITY_TYPE_SQLMESH_SEED
                - ENTITY_TYPE_SQLMESH_AUDIT
                - ENTITY_TYPE_SQLMESH_UNIT_TEST
                - ENTITY_TYPE_SQLMESH_ENVIRONMENT
                - ENTITY_TYPE_SQLMESH_SNAPSHOT
                - ENTITY_TYPE_DUCKDB_TABLE
                - ENTITY_TYPE_DUCKDB_VIEW
                - ENTITY_TYPE_TRINO_TABLE
                - ENTITY_TYPE_TRINO_VIEW
                - ENTITY_TYPE_CUSTOM_ENTITY_GENERIC
                - ENTITY_TYPE_CUSTOM_ENTITY_CUSTOM_TYPE_MIN
                - ENTITY_TYPE_CUSTOM_ENTITY_CUSTOM_TYPE_MAX
        synq.monitors.automated_monitors.v1.MetricId:
            type: string
            title: MetricId
            enum:
                - METRIC_ID_UNSPECIFIED
                - METRIC_ID_ROW_COUNT
                - METRIC_ID_DELAY
                - METRIC_ID_VOLUME_CHANGE_DELAY
        synq.monitors.automated_monitors.v1.Sensitivity:
            type: string
            title: Sensitivity
            enum:
                - SENSITIVITY_UNSPECIFIED
                - SENSITIVITY_PRECISE
                - SENSITIVITY_BALANCED
                - SENSITIVITY_RELAXED
        synq.monitors.automated_monitors.v1.Severity:
            type: string
            title: Severity
            enum:
                - SEVERITY_UNSPECIFIED
                - SEVERITY_WARNING
                - SEVERITY_ERROR
        synq.queries.v1.QueryOperand:
            type: string
            title: QueryOperand
            enum:
                - QUERY_OPERAND_UNSPECIFIED
                - QUERY_OPERAND_AND
                - QUERY_OPERAND_OR
                - QUERY_OPERAND_EXCEPT
                - QUERY_OPERAND_UPSTREAM
                - QUERY_OPERAND_DOWNSTREAM
        synq.entities.v1.AirflowDagIdentifier:
            type: object
            properties:
                integrationId:
                    type: string
                    description: SYNQ integration_id that identifies the Airflow instance
                dagId:
                    type: string
                    description: Airflow dag_id that identifies the DAG
            title: AirflowDagIdentifier
            required:
                - integrationId
                - dagId
            additionalProperties: false
        synq.entities.v1.AirflowTaskIdentifier:
            type: object
            properties:
                integrationId:
                    type: string
                    description: SYNQ integration_id that identifies the Airflow instance
                dagId:
                    type: string
                    description: Airflow dag_id that identifies the DAG
                taskId:
                    type: string
                    description: Airflow task_id that identifies the task within the DAG
            title: AirflowTaskIdentifier
            required:
                - integrationId
                - dagId
                - taskId
            additionalProperties: false
        synq.entities.v1.BigqueryTableIdentifier:
            type: object
            properties:
                project:
                    type: string
                    description: BigQuery project
                dataset:
                    type: string
                    description: BigQuery dataset id
                table:
                    type: string
                    description: BigQuery table name
            title: BigqueryTableIdentifier
            required:
                - project
                - dataset
                - table
            additionalProperties: false
        synq.entities.v1.ClickhouseTableIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Clickhouse hostname without port
                schema:
                    type: string
                    description: Clickhouse database
                table:
                    type: string
                    description: Clickhouse table
            title: ClickhouseTableIdentifier
            required:
                - host
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.CustomIdentifier:
            type: object
            properties:
                id:
                    type: string
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
            title: CustomIdentifier
            required:
                - id
            additionalProperties: false
        synq.entities.v1.DatabricksTableIdentifier:
            type: object
            properties:
                workspace:
                    type: string
                    description: URL of Databricks workspace
                catalog:
                    type: string
                    description: Databricks catalog
                schema:
                    type: string
                    description: Databricks schema
                table:
                    type: string
                    description: Databricks table or view
            title: DatabricksTableIdentifier
            required:
                - workspace
                - catalog
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.DataproductIdentifier:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
            title: DataproductIdentifier
            required:
                - id
            additionalProperties: false
        synq.entities.v1.DbtCloudNodeIdentifier:
            type: object
            properties:
                projectId:
                    type: string
                    description: Your dbt Cloud project id
                accountId:
                    type: string
                    description: Your dbt Cloud account id
                nodeId:
                    type: string
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
            title: DbtCloudNodeIdentifier
            required:
                - projectId
                - nodeId
            additionalProperties: false
        synq.entities.v1.DbtCoreNodeIdentifier:
            type: object
            properties:
                integrationId:
                    type: string
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                nodeId:
                    type: string
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
            title: DbtCoreNodeIdentifier
            required:
                - integrationId
                - nodeId
            additionalProperties: false
        synq.entities.v1.Identifier:
            type: object
            oneOf:
                - properties:
                    airflowDag:
                        title: airflow_dag
                        description: Airflow DAG identifier
                        $ref: '#/components/schemas/synq.entities.v1.AirflowDagIdentifier'
                  title: airflow_dag
                  required:
                    - airflowDag
                - properties:
                    airflowTask:
                        title: airflow_task
                        description: Airflow task identifier within a given DAG
                        $ref: '#/components/schemas/synq.entities.v1.AirflowTaskIdentifier'
                  title: airflow_task
                  required:
                    - airflowTask
                - properties:
                    bigqueryTable:
                        title: bigquery_table
                        description: BigQuery table identifier
                        $ref: '#/components/schemas/synq.entities.v1.BigqueryTableIdentifier'
                  title: bigquery_table
                  required:
                    - bigqueryTable
                - properties:
                    clickhouseTable:
                        title: clickhouse_table
                        description: Clickhouse table identifier
                        $ref: '#/components/schemas/synq.entities.v1.ClickhouseTableIdentifier'
                  title: clickhouse_table
                  required:
                    - clickhouseTable
                - properties:
                    custom:
                        title: custom
                        description: Custom identifier to be used with all custom created entities
                        $ref: '#/components/schemas/synq.entities.v1.CustomIdentifier'
                  title: custom
                  required:
                    - custom
                - properties:
                    databricksTable:
                        title: databricks_table
                        description: Databricks table identifier
                        $ref: '#/components/schemas/synq.entities.v1.DatabricksTableIdentifier'
                  title: databricks_table
                  required:
                    - databricksTable
                - properties:
                    dataproduct:
                        title: dataproduct
                        description: Dataproduct identifier
                        $ref: '#/components/schemas/synq.entities.v1.DataproductIdentifier'
                  title: dataproduct
                  required:
                    - dataproduct
                - properties:
                    dbtCloudNode:
                        title: dbt_cloud_node
                        description: Dbt node that identifies one of dbt DAG nodes (model, test, etc) in dbt Cloud project
                        $ref: '#/components/schemas/synq.entities.v1.DbtCloudNodeIdentifier'
                  title: dbt_cloud_node
                  required:
                    - dbtCloudNode
                - properties:
                    dbtCoreNode:
                        title: dbt_core_node
                        description: Dbt node that identifies one of dbt DAG nodes (model, test, etc) in dbt Core project
                        $ref: '#/components/schemas/synq.entities.v1.DbtCoreNodeIdentifier'
                  title: dbt_core_node
                  required:
                    - dbtCoreNode
                - properties:
                    monitor:
                        title: monitor
                        description: Monitor identifier
                        $ref: '#/components/schemas/synq.entities.v1.MonitorIdentifier'
                  title: monitor
                  required:
                    - monitor
                - properties:
                    mysqlTable:
                        title: mysql_table
                        description: Mysql table identifier
                        $ref: '#/components/schemas/synq.entities.v1.MysqlTableIdentifier'
                  title: mysql_table
                  required:
                    - mysqlTable
                - properties:
                    postgresTable:
                        title: postgres_table
                        description: Postgres table identifier
                        $ref: '#/components/schemas/synq.entities.v1.PostgresTableIdentifier'
                  title: postgres_table
                  required:
                    - postgresTable
                - properties:
                    redshiftTable:
                        title: redshift_table
                        description: Redshift table identifier
                        $ref: '#/components/schemas/synq.entities.v1.RedshiftTableIdentifier'
                  title: redshift_table
                  required:
                    - redshiftTable
                - properties:
                    snowflakeTable:
                        title: snowflake_table
                        description: Snowflake table identifier
                        $ref: '#/components/schemas/synq.entities.v1.SnowflakeTableIdentifier'
                  title: snowflake_table
                  required:
                    - snowflakeTable
                - properties:
                    sqlMeshAudit:
                        title: sql_mesh_audit
                        description: SQLMesh Audit identifier
                        $ref: '#/components/schemas/synq.entities.v1.SqlMeshAuditIdentifier'
                  title: sql_mesh_audit
                  required:
                    - sqlMeshAudit
                - properties:
                    sqlMeshModel:
                        title: sql_mesh_model
                        description: SQLMesh Model identifier
                        $ref: '#/components/schemas/synq.entities.v1.SqlMeshModelIdentifier'
                  title: sql_mesh_model
                  required:
                    - sqlMeshModel
                - properties:
                    synqPath:
                        title: synq_path
                        description: SynqPath identifier
                        $ref: '#/components/schemas/synq.entities.v1.SynqPathIdentifier'
                  title: synq_path
                  required:
                    - synqPath
                - properties:
                    trinoTable:
                        title: trino_table
                        description: Trino table identifier
                        $ref: '#/components/schemas/synq.entities.v1.TrinoTableIdentifier'
                  title: trino_table
                  required:
                    - trinoTable
            additionalProperties: false
            description: |-
                Identifier is a unique reference to an entity in SYNQ system. Entity identifiers
                 are designed to closely mimic identifiers used by data platforms and tools. To construct
                 an identifier, you need to know the kind of the entity and the ids that you would normally
                 use to identify it in the data platform or tool. For example, to identify a table in BigQuery,
                 you would need to know the project, dataset, and table names.
        synq.entities.v1.MonitorIdentifier:
            type: object
            properties:
                monitoredId:
                    description: Identifier of the monitored entity
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                monitorId:
                    type: string
                    description: Identifier of the monitor
                segment:
                    type: string
                    description: Optional monitor segmentation identifier
                    nullable: true
                integrationId:
                    type: string
                    description: SYNQ integration_id of the monitored identifier
                    nullable: true
                    deprecated: true
            title: MonitorIdentifier
            required:
                - monitoredId
                - monitorId
            additionalProperties: false
        synq.entities.v1.MysqlTableIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Mysql hostname without port
                schema:
                    type: string
                    description: Mysql database
                table:
                    type: string
                    description: Mysql table
            title: MysqlTableIdentifier
            required:
                - host
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.PostgresTableIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Postgres hostname without port
                database:
                    type: string
                    description: Postgres database
                schema:
                    type: string
                    description: Postgres schema
                table:
                    type: string
                    description: Postgres table
            title: PostgresTableIdentifier
            required:
                - host
                - database
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.RedshiftTableIdentifier:
            type: object
            properties:
                cluster:
                    type: string
                    description: Redshift cluster
                database:
                    type: string
                    description: Redshift database
                schema:
                    type: string
                    description: Redshift schema
                table:
                    type: string
                    description: Redshift table
            title: RedshiftTableIdentifier
            required:
                - database
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.SnowflakeTableIdentifier:
            type: object
            properties:
                account:
                    type: string
                    description: Snowflake account
                database:
                    type: string
                    description: Snowflake database
                schema:
                    type: string
                    description: Snowflake schema
                table:
                    type: string
                    description: Snowflake table
            title: SnowflakeTableIdentifier
            required:
                - account
                - database
                - schema
                - table
            additionalProperties: false
        synq.entities.v1.SqlMeshAuditIdentifier:
            type: object
            properties:
                integrationId:
                    type: string
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                fqn:
                    type: string
                    description: SQLMesh model fully qualified name
                auditId:
                    type: string
                    description: Identifier of the audit
            title: SqlMeshAuditIdentifier
            required:
                - integrationId
                - fqn
                - auditId
            additionalProperties: false
        synq.entities.v1.SqlMeshModelIdentifier:
            type: object
            properties:
                integrationId:
                    type: string
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                fqn:
                    type: string
                    description: SQLMesh model fully qualified name
            title: SqlMeshModelIdentifier
            required:
                - integrationId
                - fqn
            additionalProperties: false
        synq.entities.v1.SynqPathIdentifier:
            type: object
            properties:
                path:
                    type: string
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
            title: SynqPathIdentifier
            required:
                - path
            additionalProperties: false
        synq.entities.v1.TrinoTableIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Hostname of the Trino instance
                catalog:
                    type: string
                    description: Trino catalog
                schema:
                    type: string
                    description: Trino schema
                table:
                    type: string
                    description: Trino table or view
            title: TrinoTableIdentifier
            required:
                - host
                - catalog
                - schema
                - table
            additionalProperties: false
        synq.monitors.automated_monitors.v1.AutomatedMonitorSettings:
            type: object
            properties:
                severity:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                sensitivity:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                metricIds:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
            title: AutomatedMonitorSettings
            additionalProperties: false
        synq.monitors.automated_monitors.v1.BatchGetDeploymentRulesRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
            title: BatchGetDeploymentRulesRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.BatchGetDeploymentRulesResponse:
            type: object
            properties:
                deploymentRules:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRuleView'
            title: BatchGetDeploymentRulesResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.BatchGetDeploymentRulesResponse.DeploymentRulesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRuleView'
            title: DeploymentRulesEntry
            additionalProperties: false
        synq.monitors.automated_monitors.v1.BatchUpdateDeploymentRuleTitleRequest:
            type: object
            properties:
                deploymentRules:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.UpdateDeploymentRuleTitleRequest'
            title: BatchUpdateDeploymentRuleTitleRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.BatchUpdateDeploymentRuleTitleResponse:
            type: object
            title: BatchUpdateDeploymentRuleTitleResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.DeleteDeploymentRuleRequest:
            type: object
            properties:
                id:
                    type: string
            title: DeleteDeploymentRuleRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.DeleteDeploymentRuleResponse:
            type: object
            title: DeleteDeploymentRuleResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.DeployDeploymentRuleRequest:
            type: object
            properties:
                deploymentRule:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRule'
            title: DeployDeploymentRuleRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.DeployDeploymentRuleResponse:
            type: object
            title: DeployDeploymentRuleResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.EntitySelectionQuery:
            type: object
            properties:
                parts:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.EntitySelectionQuery.QueryPart'
                operand:
                    $ref: '#/components/schemas/synq.queries.v1.QueryOperand'
            title: EntitySelectionQuery
            additionalProperties: false
        synq.monitors.automated_monitors.v1.EntitySelectionQuery.QueryPart:
            type: object
            oneOf:
                - properties:
                    identifierList:
                        title: identifier_list
                        $ref: '#/components/schemas/synq.queries.v1.IdentifierList'
                  title: identifier_list
                  required:
                    - identifierList
                - properties:
                    inFolder:
                        title: in_folder
                        description: synq.queries.v1.InDataPlatform in_data_platform = 5;
                        $ref: '#/components/schemas/synq.queries.v1.InFolder'
                  title: in_folder
                  required:
                    - inFolder
                - properties:
                    query:
                        title: query
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.EntitySelectionQuery'
                  title: query
                  required:
                    - query
                - properties:
                    unsupported:
                        title: unsupported
                        $ref: '#/components/schemas/synq.queries.v1.Unsupported'
                  title: unsupported
                  required:
                    - unsupported
                - properties:
                    withAnnotation:
                        title: with_annotation
                        $ref: '#/components/schemas/synq.queries.v1.WithAnnotation'
                  title: with_annotation
                  required:
                    - withAnnotation
                - properties:
                    withNameSearch:
                        title: with_name_search
                        $ref: '#/components/schemas/synq.queries.v1.WithNameSearch'
                  title: with_name_search
                  required:
                    - withNameSearch
                - properties:
                    withType:
                        title: with_type
                        $ref: '#/components/schemas/synq.queries.v1.WithType'
                  title: with_type
                  required:
                    - withType
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ExclusiveQueryConfig:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.EntitySelectionQuery'
            title: ExclusiveQueryConfig
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ExclusiveStaticConfig:
            type: object
            properties:
                path:
                    type: string
            title: ExclusiveStaticConfig
            additionalProperties: false
        synq.monitors.automated_monitors.v1.GetDeployDeleteOverviewRequest:
            type: object
            properties:
                id:
                    type: string
            title: GetDeployDeleteOverviewRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.GetDeployDeleteOverviewResponse:
            type: object
            properties:
                overview:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentOverview'
            title: GetDeployDeleteOverviewResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.GetDeployOverviewRequest:
            type: object
            properties:
                deploymentRule:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRule'
            title: GetDeployOverviewRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.GetDeployOverviewResponse:
            type: object
            properties:
                overview:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentOverview'
            title: GetDeployOverviewResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ListDeploymentRulesForAssetRequest:
            type: object
            properties:
                assetPath:
                    type: string
            title: ListDeploymentRulesForAssetRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ListDeploymentRulesForAssetResponse:
            type: object
            properties:
                deploymentRules:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRuleView'
            title: ListDeploymentRulesForAssetResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ListDeploymentRulesRequest:
            type: object
            title: ListDeploymentRulesRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ListDeploymentRulesResponse:
            type: object
            properties:
                deploymentRules:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRuleView'
            title: ListDeploymentRulesResponse
            additionalProperties: false
        synq.monitors.automated_monitors.v1.MonitorSettingsChange:
            type: object
            properties:
                monitoredAssetPath:
                    type: string
                originalSettings:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.AutomatedMonitorSettings'
                newSettings:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.AutomatedMonitorSettings'
            title: MonitorSettingsChange
            additionalProperties: false
        synq.monitors.automated_monitors.v1.MonitorsDeploymentOverview:
            type: object
            properties:
                monitorsToCreateFor:
                    type: array
                    items:
                        type: string
                monitorsToDeleteFor:
                    type: array
                    items:
                        type: string
                activeMonitorsFor:
                    type: array
                    items:
                        type: string
                monitorSettingsChanges:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorSettingsChange'
            title: MonitorsDeploymentOverview
            additionalProperties: false
        synq.monitors.automated_monitors.v1.MonitorsDeploymentRule:
            type: object
            oneOf:
                - properties:
                    exclusiveQueryConfig:
                        title: exclusive_query_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ExclusiveQueryConfig'
                  title: exclusive_query_config
                  required:
                    - exclusiveQueryConfig
                - properties:
                    exclusiveStaticConfig:
                        title: exclusive_static_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ExclusiveStaticConfig'
                  title: exclusive_static_config
                  required:
                    - exclusiveStaticConfig
                - properties:
                    productConfig:
                        title: product_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfig'
                  title: product_config
                  required:
                    - productConfig
                - properties:
                    queryConfig:
                        title: query_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.QueryConfig'
                  title: query_config
                  required:
                    - queryConfig
                - properties:
                    staticConfig:
                        title: static_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.StaticConfig'
                  title: static_config
                  required:
                    - staticConfig
            properties:
                id:
                    type: string
                    format: uuid
                title:
                    type: string
                    maxLength: 100
                    minLength: 1
            additionalProperties: false
        synq.monitors.automated_monitors.v1.MonitorsDeploymentRuleView:
            type: object
            oneOf:
                - properties:
                    exclusiveQueryConfig:
                        title: exclusive_query_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ExclusiveQueryConfig'
                  title: exclusive_query_config
                  required:
                    - exclusiveQueryConfig
                - properties:
                    exclusiveStaticConfig:
                        title: exclusive_static_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ExclusiveStaticConfig'
                  title: exclusive_static_config
                  required:
                    - exclusiveStaticConfig
                - properties:
                    productConfig:
                        title: product_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfig'
                  title: product_config
                  required:
                    - productConfig
                - properties:
                    queryConfig:
                        title: query_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.QueryConfig'
                  title: query_config
                  required:
                    - queryConfig
                - properties:
                    staticConfig:
                        title: static_config
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.StaticConfig'
                  title: static_config
                  required:
                    - staticConfig
            properties:
                id:
                    type: string
                title:
                    type: string
                monitorCount:
                    type: integer
                    format: int32
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfig:
            type: object
            properties:
                productId:
                    type: string
                severity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                sensitivity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                metricIds:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    minItems: 1
                    uniqueItems: true
                upstream:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategy'
                self:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigSelfStrategy'
                keepDeletedMonitors:
                    type: boolean
            title: ProductConfig
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigSelfStrategy:
            type: object
            oneOf:
                - properties:
                    all:
                        title: all
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigSelfStrategyAll'
                  title: all
                  required:
                    - all
                - properties:
                    selection:
                        title: selection
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigSelfStrategySelection'
                  title: selection
                  required:
                    - selection
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigSelfStrategyAll:
            type: object
            title: ProductConfigSelfStrategyAll
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigSelfStrategySelection:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.EntitySelectionQuery'
            title: ProductConfigSelfStrategySelection
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategy:
            type: object
            oneOf:
                - properties:
                    all:
                        title: all
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategyAll'
                  title: all
                  required:
                    - all
                - properties:
                    sources:
                        title: sources
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategySources'
                  title: sources
                  required:
                    - sources
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategyAll:
            type: object
            title: ProductConfigUpstreamStrategyAll
            additionalProperties: false
        synq.monitors.automated_monitors.v1.ProductConfigUpstreamStrategySources:
            type: object
            title: ProductConfigUpstreamStrategySources
            additionalProperties: false
        synq.monitors.automated_monitors.v1.QueryConfig:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.EntitySelectionQuery'
                severity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                sensitivity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                metricIds:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    minItems: 1
                    uniqueItems: true
                keepDeletedMonitors:
                    type: boolean
            title: QueryConfig
            additionalProperties: false
        synq.monitors.automated_monitors.v1.StaticConfig:
            type: object
            properties:
                path:
                    type: string
                severity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                sensitivity:
                    not:
                        enum:
                            - 0
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                metricIds:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    minItems: 1
                    uniqueItems: true
            title: StaticConfig
            additionalProperties: false
        synq.monitors.automated_monitors.v1.UpdateDeploymentRuleTitleRequest:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
            title: UpdateDeploymentRuleTitleRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.UpsertDeploymentRuleRequest:
            type: object
            properties:
                deploymentRule:
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MonitorsDeploymentRule'
            title: UpsertDeploymentRuleRequest
            additionalProperties: false
        synq.monitors.automated_monitors.v1.UpsertDeploymentRuleResponse:
            type: object
            title: UpsertDeploymentRuleResponse
            additionalProperties: false
        synq.queries.v1.IdentifierList:
            type: object
            properties:
                identifiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: IdentifierList
            additionalProperties: false
            description: Resolves to entities matching any of the given identifiers.
        synq.queries.v1.InFolder:
            type: object
            properties:
                path:
                    type: array
                    items:
                        type: string
            title: InFolder
            additionalProperties: false
            description: Resolves to all entities belonging to the given folder structure.
        synq.queries.v1.Unsupported:
            type: object
            properties:
                queryJson:
                    type: string
            title: Unsupported
            additionalProperties: false
            description: |-
                Collects all the parts of the query that are currently unsupported in translation.
                 These represent an internal structure that are not yet completely available on the API.
        synq.queries.v1.WithAnnotation:
            type: object
            properties:
                name:
                    type: string
                acceptedValue:
                    type: string
                    nullable: true
                    deprecated: true
                acceptedValues:
                    type: array
                    items:
                        type: string
            title: WithAnnotation
            additionalProperties: false
            description: |-
                Resolves to all entities that contain the annotation with at least one of the provided accepted values.
                 In case of no given accepted values, all entities that carry the given annotation are returned.
        synq.queries.v1.WithNameSearch:
            type: object
            properties:
                searchQuery:
                    type: string
            title: WithNameSearch
            additionalProperties: false
            description: Resolves to all entities matching the given name search.
        synq.queries.v1.WithType:
            type: object
            properties:
                type:
                    deprecated: true
                    $ref: '#/components/schemas/synq.queries.v1.WithType.Type'
                types:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.queries.v1.WithType.Type'
            title: WithType
            additionalProperties: false
            description: Resolves to all the entities that have the provided type.
        synq.queries.v1.WithType.Type:
            type: object
            oneOf:
                - properties:
                    custom:
                        type: integer
                        title: custom
                        format: int32
                        description: Custom types as defined through synq.entities.custom.v1.TypesService
                  title: custom
                  required:
                    - custom
                - properties:
                    default:
                        title: default
                        description: Default SYNQ types
                        $ref: '#/components/schemas/synq.entities.v1.EntityType'
                  title: default
                  required:
                    - default
            additionalProperties: false
        connect-protocol-version:
            type: number
            title: Connect-Protocol-Version
            enum:
                - 1
            description: Define the version of the Connect protocol
            const: 1
        connect-timeout-header:
            type: number
            title: Connect-Timeout-Ms
            description: Define the timeout, in ms
        connect.error:
            type: object
            properties:
                code:
                    type: string
                    examples:
                        - not_found
                    enum:
                        - canceled
                        - unknown
                        - invalid_argument
                        - deadline_exceeded
                        - not_found
                        - already_exists
                        - permission_denied
                        - resource_exhausted
                        - failed_precondition
                        - aborted
                        - out_of_range
                        - unimplemented
                        - internal
                        - unavailable
                        - data_loss
                        - unauthenticated
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                detail:
                    $ref: '#/components/schemas/google.protobuf.Any'
            title: Connect Error
            additionalProperties: true
            description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
        google.protobuf.Any:
            type: object
            properties:
                type:
                    type: string
                value:
                    type: string
                    format: binary
                debug:
                    type: object
                    additionalProperties: true
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        synq.entities.v1.SqlDialect:
            type: string
            title: SqlDialect
            enum:
                - SQL_DIALECT_UNSPECIFIED
                - SQL_DIALECT_BIGQUERY
                - SQL_DIALECT_CLICKHOUSE
                - SQL_DIALECT_DATABRICKS
                - SQL_DIALECT_MYSQL
                - SQL_DIALECT_POSTGRESQL
                - SQL_DIALECT_REDSHIFT
                - SQL_DIALECT_SNOWFLAKE
                - SQL_DIALECT_DUCKDB
                - SQL_DIALECT_TRINO
        google.protobuf.Duration:
            type: string
            format: duration
            description: |-
                A Duration represents a signed, fixed-length span of time represented
                 as a count of seconds and fractions of seconds at nanosecond
                 resolution. It is independent of any calendar and concepts like "day"
                 or "month". It is related to Timestamp in that the difference between
                 two Timestamp values is a Duration and it can be added or subtracted
                 from a Timestamp. Range is approximately +-10,000 years.

                 # Examples

                 Example 1: Compute Duration from two Timestamps in pseudo code.

                     Timestamp start = ...;
                     Timestamp end = ...;
                     Duration duration = ...;

                     duration.seconds = end.seconds - start.seconds;
                     duration.nanos = end.nanos - start.nanos;

                     if (duration.seconds < 0 && duration.nanos > 0) {
                       duration.seconds += 1;
                       duration.nanos -= 1000000000;
                     } else if (duration.seconds > 0 && duration.nanos < 0) {
                       duration.seconds -= 1;
                       duration.nanos += 1000000000;
                     }

                 Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.

                     Timestamp start = ...;
                     Duration duration = ...;
                     Timestamp end = ...;

                     end.seconds = start.seconds + duration.seconds;
                     end.nanos = start.nanos + duration.nanos;

                     if (end.nanos < 0) {
                       end.seconds -= 1;
                       end.nanos += 1000000000;
                     } else if (end.nanos >= 1000000000) {
                       end.seconds += 1;
                       end.nanos -= 1000000000;
                     }

                 Example 3: Compute Duration from datetime.timedelta in Python.

                     td = datetime.timedelta(days=3, minutes=10)
                     duration = Duration()
                     duration.FromTimedelta(td)

                 # JSON Mapping

                 In JSON format, the Duration type is encoded as a string rather than an
                 object, where the string ends in the suffix "s" (indicating seconds) and
                 is preceded by the number of seconds, with nanoseconds expressed as
                 fractional seconds. For example, 3 seconds with 0 nanoseconds should be
                 encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should
                 be expressed in JSON format as "3.000000001s", and 3 seconds and 1
                 microsecond should be expressed in JSON format as "3.000001s".
        synq.monitors.info.v1.Condition:
            type: object
            properties:
                expression:
                    type: string
            title: Condition
            additionalProperties: false
        synq.monitors.info.v1.CountRows:
            type: object
            title: CountRows
            additionalProperties: false
        synq.monitors.info.v1.DatabaseFqn:
            type: object
            properties:
                instance:
                    type: string
                    description: Usually it is the hostname of the server
                    nullable: true
                databaseName:
                    type: string
                    description: Database name for databases with multi-db support
                    nullable: true
                schemaName:
                    type: string
                    description: One level
                objectName:
                    type: string
                    description: Name of the table or view
            title: DatabaseFqn
            additionalProperties: false
        synq.monitors.info.v1.MetadataSource:
            type: object
            title: MetadataSource
            additionalProperties: false
        synq.monitors.info.v1.Metric:
            type: object
            oneOf:
                - properties:
                    freshness:
                        title: freshness
                        $ref: '#/components/schemas/synq.monitors.info.v1.MonitorFreshness'
                  title: freshness
                  required:
                    - freshness
                - properties:
                    value:
                        title: value
                        $ref: '#/components/schemas/synq.monitors.info.v1.MonitorValue'
                  title: value
                  required:
                    - value
                - properties:
                    volume:
                        title: volume
                        $ref: '#/components/schemas/synq.monitors.info.v1.MonitorVolume'
                  title: volume
                  required:
                    - volume
            properties:
                metricId:
                    type: string
            additionalProperties: false
        synq.monitors.info.v1.MonitorFreshness:
            type: object
            oneOf:
                - properties:
                    expression:
                        type: string
                        title: expression
                  title: expression
                  required:
                    - expression
                - properties:
                    tableMetadata:
                        title: table_metadata
                        $ref: '#/components/schemas/synq.monitors.info.v1.MetadataSource'
                  title: table_metadata
                  required:
                    - tableMetadata
            additionalProperties: false
        synq.monitors.info.v1.MonitorInfo:
            type: object
            properties:
                id:
                    description: Identifier of the monitor
                    $ref: '#/components/schemas/synq.entities.v1.MonitorIdentifier'
                name:
                    type: string
                    description: Name of the monitor
                segmentation:
                    description: Information how this monitor segments the data
                    nullable: true
                    $ref: '#/components/schemas/synq.monitors.info.v1.Segmentation'
                partitioning:
                    description: Information how this monitor partitions the data
                    nullable: true
                    $ref: '#/components/schemas/synq.monitors.info.v1.Partitioning'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.info.v1.Condition'
                    description: Optional conditions which are applied to the monitor metrics retrieval
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.info.v1.Metric'
                    description: Metrics which this monitor monitors
                monitored:
                    description: Entity which is monitored
                    nullable: true
                    $ref: '#/components/schemas/synq.monitors.info.v1.Monitored'
            title: MonitorInfo
            additionalProperties: false
        synq.monitors.info.v1.MonitorInfoRequest:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: MonitorInfoRequest
            additionalProperties: false
        synq.monitors.info.v1.MonitorInfoResponse:
            type: object
            properties:
                monitorInfo:
                    nullable: true
                    $ref: '#/components/schemas/synq.monitors.info.v1.MonitorInfo'
            title: MonitorInfoResponse
            additionalProperties: false
        synq.monitors.info.v1.MonitorValue:
            type: object
            properties:
                expression:
                    type: string
            title: MonitorValue
            additionalProperties: false
        synq.monitors.info.v1.MonitorVolume:
            type: object
            oneOf:
                - properties:
                    countRows:
                        title: count_rows
                        $ref: '#/components/schemas/synq.monitors.info.v1.CountRows'
                  title: count_rows
                  required:
                    - countRows
                - properties:
                    expression:
                        type: string
                        title: expression
                  title: expression
                  required:
                    - expression
                - properties:
                    tableMetadata:
                        title: table_metadata
                        $ref: '#/components/schemas/synq.monitors.info.v1.MetadataSource'
                  title: table_metadata
                  required:
                    - tableMetadata
            additionalProperties: false
        synq.monitors.info.v1.Monitored:
            type: object
            properties:
                id:
                    description: Identifier of the monitored entity.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                name:
                    type: string
                    description: Name of the monitored entity
                description:
                    type: string
                    description: Description of the monitored entity
                    nullable: true
                integrationId:
                    type: string
                    description: Id of the integration which provided information about monitored entity.
                    nullable: true
                objectFqn:
                    description: Coordinates to the physical table/view which is monitored (when applicable)
                    nullable: true
                    $ref: '#/components/schemas/synq.monitors.info.v1.DatabaseFqn'
                sqlDialect:
                    description: SQL dialect used for monitoring
                    $ref: '#/components/schemas/synq.entities.v1.SqlDialect'
            title: Monitored
            additionalProperties: false
        synq.monitors.info.v1.Partitioning:
            type: object
            properties:
                column:
                    type: string
                period:
                    $ref: '#/components/schemas/google.protobuf.Duration'
            title: Partitioning
            additionalProperties: false
        synq.monitors.info.v1.Segmentation:
            type: object
            properties:
                column:
                    type: string
            title: Segmentation
            additionalProperties: false
        google.protobuf.DoubleValue:
            oneOf:
                - type: string
                - type: number
            description: |-
                Wrapper message for `double`.

                 The JSON representation for `DoubleValue` is JSON number.
        google.protobuf.Timestamp:
            type: string
            examples:
                - 1s
                - 1.000340012s
            format: date-time
            description: |-
                A Timestamp represents a point in time independent of any time zone or local
                 calendar, encoded as a count of seconds and fractions of seconds at
                 nanosecond resolution. The count is relative to an epoch at UTC midnight on
                 January 1, 1970, in the proleptic Gregorian calendar which extends the
                 Gregorian calendar backwards to year one.

                 All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
                 second table is needed for interpretation, using a [24-hour linear
                 smear](https://developers.google.com/time/smear).

                 The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
                 restricting to that range, we ensure that we can convert to and from [RFC
                 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

                 # Examples

                 Example 1: Compute Timestamp from POSIX `time()`.

                     Timestamp timestamp;
                     timestamp.set_seconds(time(NULL));
                     timestamp.set_nanos(0);

                 Example 2: Compute Timestamp from POSIX `gettimeofday()`.

                     struct timeval tv;
                     gettimeofday(&tv, NULL);

                     Timestamp timestamp;
                     timestamp.set_seconds(tv.tv_sec);
                     timestamp.set_nanos(tv.tv_usec * 1000);

                 Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

                     FILETIME ft;
                     GetSystemTimeAsFileTime(&ft);
                     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

                     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
                     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
                     Timestamp timestamp;
                     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
                     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

                 Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

                     long millis = System.currentTimeMillis();

                     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                         .setNanos((int) ((millis % 1000) * 1000000)).build();

                 Example 5: Compute Timestamp from Java `Instant.now()`.

                     Instant now = Instant.now();

                     Timestamp timestamp =
                         Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                             .setNanos(now.getNano()).build();

                 Example 6: Compute Timestamp from current time in Python.

                     timestamp = Timestamp()
                     timestamp.GetCurrentTime()

                 # JSON Mapping

                 In JSON format, the Timestamp type is encoded as a string in the
                 [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
                 format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
                 where {year} is always expressed using four digits while {month}, {day},
                 {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
                 seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
                 are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
                 is required. A proto3 JSON serializer should always use UTC (as indicated by
                 "Z") when printing the Timestamp type and a proto3 JSON parser should be
                 able to accept both UTC and other timezones (as indicated by an offset).

                 For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
                 01:30 UTC on January 15, 2017.

                 In JavaScript, one can convert a Date object to this format using the
                 standard
                 [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
                 method. In Python, a standard `datetime.datetime` object can be converted
                 to this format using
                 [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
                 the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
                 the Joda Time's [`ISODateTimeFormat.dateTime()`](
                 http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
                 ) to obtain a formatter capable of generating timestamps in this format.
        synq.monitors.history.v1.HistoryRequest:
            type: object
            properties:
                monitorPath:
                    type: string
                    description: 'Experimental: Will be replaced with identifier'
                metricsVersion:
                    type: integer
                    format: int32
                segments:
                    type: array
                    items:
                        type: string
                from:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                to:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: HistoryRequest
            additionalProperties: false
        synq.monitors.history.v1.HistoryResponse:
            type: object
            properties:
                predictions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.history.v1.Prediction'
            title: HistoryResponse
            additionalProperties: false
        synq.monitors.history.v1.Prediction:
            type: object
            properties:
                f:
                    type: string
                    description: Field
                s:
                    type: string
                    description: Segment
                m:
                    type: string
                    description: Metric
                v:
                    type: number
                    format: double
                    description: Value
                vu:
                    description: Upper bound
                    $ref: '#/components/schemas/google.protobuf.DoubleValue'
                vl:
                    description: Lower bound
                    $ref: '#/components/schemas/google.protobuf.DoubleValue'
                p:
                    type: string
                    description: Pattern
                e:
                    type: number
                    format: double
                    description: Expected value
                st:
                    type: number
                    format: double
                    description: Standard deviation
                t:
                    description: Timestamp
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: Prediction
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchDeleteSqlTestsRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                    description: IDs of the SqlTests to delete.
            title: BatchDeleteSqlTestsRequest
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchDeleteSqlTestsResponse:
            type: object
            title: BatchDeleteSqlTestsResponse
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchGetSqlTestsRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                    description: IDs of the SqlTests to fetch.
            title: BatchGetSqlTestsRequest
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchGetSqlTestsResponse:
            type: object
            properties:
                sqlTests:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.datachecks.sqltests.v1.SqlTest'
            title: BatchGetSqlTestsResponse
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchGetSqlTestsResponse.SqlTestsEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.datachecks.sqltests.v1.SqlTest'
            title: SqlTestsEntry
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchUpsertSqlTestsRequest:
            type: object
            properties:
                sqlTests:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.datachecks.sqltests.v1.SqlTest'
                    description: |-
                        List of SqlTests to upsert.
                         The upsert is performed based on the unique path provided for each SqlTest.
            title: BatchUpsertSqlTestsRequest
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchUpsertSqlTestsResponse:
            type: object
            properties:
                createdIds:
                    type: array
                    items:
                        type: string
                    description: IDs for which SqlTests were created without error.
                updatedIds:
                    type: array
                    items:
                        type: string
                    description: IDs for which SqlTests were updated without error.
                errors:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchUpsertSqlTestsResponse.UpsertError'
                    description: Errors raised while upsert. This list will be empty if there were no errors.
            title: BatchUpsertSqlTestsResponse
            additionalProperties: false
        synq.datachecks.sqltests.v1.BatchUpsertSqlTestsResponse.UpsertError:
            type: object
            properties:
                id:
                    type: string
                reason:
                    type: string
            title: UpsertError
            additionalProperties: false
            description: Details of errors encountered during the upsert operation.
        synq.datachecks.sqltests.v1.GetSqlTestAuditRequest:
            type: object
            title: GetSqlTestAuditRequest
            additionalProperties: false
        synq.datachecks.sqltests.v1.GetSqlTestAuditResponse:
            type: object
            properties:
                audit:
                    $ref: '#/components/schemas/synq.datachecks.sqltests.v1.SqlTestAudit'
            title: GetSqlTestAuditResponse
            additionalProperties: false
        synq.datachecks.sqltests.v1.ListSqlTestsRequest:
            type: object
            properties:
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
                    description: Optional annotations to fetch SqlTests for.
            title: ListSqlTestsRequest
            additionalProperties: false
        synq.datachecks.sqltests.v1.ListSqlTestsResponse:
            type: object
            properties:
                sqlTests:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.datachecks.sqltests.v1.SqlTest'
            title: ListSqlTestsResponse
            additionalProperties: false
        synq.datachecks.sqltests.v1.SqlTest:
            type: object
            properties:
                platform:
                    description: Identifier for the data platform which the SqlTest would be executed on.
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformIdentifier'
                id:
                    type: string
                    description: |-
                        Unique resource identifier for the SqlTest. This is externally maintained and can
                         be used to fetch/update/delete this test.
                name:
                    type: string
                    description: Human friendly name.
                sqlExpression:
                    type: string
                    description: A valid SQL expression which is the test.
                recurrenceRule:
                    type: string
                    description: '[Recurrence rule](https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html) for the execution schedule of the SqlTest.'
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
                    description: |-
                        Annotations for the given SqlTest.These help filter the SqlTests for later
                         operations like listing by API, selection in UI, analytics, etc.
                saveFailures:
                    type: boolean
                    description: Boolean flag to to toggle saving of failure runs.
            title: SqlTest
            required:
                - platform
                - id
                - name
                - sqlExpression
            additionalProperties: false
            description: The SqlTest is a SQL test that is executed on a synq entity.
        synq.datachecks.sqltests.v1.SqlTestAudit:
            type: object
            properties:
                executionId:
                    type: string
                rowsCount:
                    type: integer
                    format: int32
                result:
                    type: string
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: SqlTestAudit
            additionalProperties: false
        synq.entities.v1.Annotation:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 100
                    minLength: 1
                    description: String key for the annotation.
                values:
                    type: array
                    items:
                        type: string
                        maxLength: 100
                        minLength: 1
                        maxItems: 20
                    maxItems: 20
                    description: Optional list of values that the annotation can carry.
            title: Annotation
            required:
                - name
            additionalProperties: false
            description: |-
                Annotations can be used to annotate any entity with a key:value pair.
                 These annotations can be used for filtering and searching entities.
        synq.platforms.v1.BigqueryIdentifier:
            type: object
            properties:
                project:
                    type: string
                    description: BigQuery project
            title: BigqueryIdentifier
            required:
                - project
            additionalProperties: false
        synq.platforms.v1.ClickhouseIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Clickhouse host inclusive of port
                schema:
                    type: string
                    description: Clickhouse database
            title: ClickhouseIdentifier
            required:
                - host
                - schema
            additionalProperties: false
        synq.platforms.v1.DataPlatformIdentifier:
            type: object
            oneOf:
                - properties:
                    bigquery:
                        title: bigquery
                        $ref: '#/components/schemas/synq.platforms.v1.BigqueryIdentifier'
                  title: bigquery
                  required:
                    - bigquery
                - properties:
                    clickhouse:
                        title: clickhouse
                        $ref: '#/components/schemas/synq.platforms.v1.ClickhouseIdentifier'
                  title: clickhouse
                  required:
                    - clickhouse
                - properties:
                    databricks:
                        title: databricks
                        $ref: '#/components/schemas/synq.platforms.v1.DatabricksIdentifier'
                  title: databricks
                  required:
                    - databricks
                - properties:
                    dbtCloud:
                        title: dbt_cloud
                        $ref: '#/components/schemas/synq.platforms.v1.DbtCloudIdentifier'
                  title: dbt_cloud
                  required:
                    - dbtCloud
                - properties:
                    duckdb:
                        title: duckdb
                        $ref: '#/components/schemas/synq.platforms.v1.DuckDbIdentifier'
                  title: duckdb
                  required:
                    - duckdb
                - properties:
                    mysql:
                        title: mysql
                        $ref: '#/components/schemas/synq.platforms.v1.MysqlIdentifier'
                  title: mysql
                  required:
                    - mysql
                - properties:
                    postgres:
                        title: postgres
                        $ref: '#/components/schemas/synq.platforms.v1.PostgresIdentifier'
                  title: postgres
                  required:
                    - postgres
                - properties:
                    redshift:
                        title: redshift
                        $ref: '#/components/schemas/synq.platforms.v1.RedshiftIdentifier'
                  title: redshift
                  required:
                    - redshift
                - properties:
                    snowflake:
                        title: snowflake
                        $ref: '#/components/schemas/synq.platforms.v1.SnowflakeIdentifier'
                  title: snowflake
                  required:
                    - snowflake
                - properties:
                    sqlMesh:
                        title: sql_mesh
                        $ref: '#/components/schemas/synq.platforms.v1.SqlMeshIdentifier'
                  title: sql_mesh
                  required:
                    - sqlMesh
                - properties:
                    synqIntegrationId:
                        type: string
                        title: synq_integration_id
                        description: SYNQ integration ID maps to the created integration on the SYNQ platform.
                  title: synq_integration_id
                  required:
                    - synqIntegrationId
                - properties:
                    trino:
                        title: trino
                        $ref: '#/components/schemas/synq.platforms.v1.TrinoIdentifier'
                  title: trino
                  required:
                    - trino
                - properties:
                    unknown:
                        title: unknown
                        $ref: '#/components/schemas/synq.platforms.v1.UnknownDataPlatform'
                  title: unknown
                  required:
                    - unknown
            additionalProperties: false
            description: DataPlatformIdentifier is a unique reference to a data platform integrated with Synq.
        synq.platforms.v1.DatabricksIdentifier:
            type: object
            properties:
                workspace:
                    type: string
                    description: URL of the databricks workspace
            title: DatabricksIdentifier
            required:
                - workspace
            additionalProperties: false
        synq.platforms.v1.DbtCloudIdentifier:
            type: object
            properties:
                apiEndpoint:
                    type: string
                    description: API endpoint for Dbt Cloud
                accountId:
                    type: string
                    description: Account ID
                projectId:
                    type: string
                    description: Project ID
            title: DbtCloudIdentifier
            required:
                - apiEndpoint
                - accountId
                - projectId
            additionalProperties: false
        synq.platforms.v1.DuckDbIdentifier:
            type: object
            properties:
                motherduckAccount:
                    type: string
            title: DuckDbIdentifier
            additionalProperties: false
        synq.platforms.v1.MysqlIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Mysql host inclusive of port
            title: MysqlIdentifier
            required:
                - host
            additionalProperties: false
        synq.platforms.v1.PostgresIdentifier:
            type: object
            properties:
                host:
                    type: string
                    description: Postgres host inclusive of port
                database:
                    type: string
                    description: Postgres database
            title: PostgresIdentifier
            required:
                - host
                - database
            additionalProperties: false
        synq.platforms.v1.RedshiftIdentifier:
            type: object
            properties:
                cluster:
                    type: string
                    description: Redshift cluster
                database:
                    type: string
                    description: Redshift database
            title: RedshiftIdentifier
            required:
                - cluster
                - database
            additionalProperties: false
        synq.platforms.v1.SnowflakeIdentifier:
            type: object
            properties:
                account:
                    type: string
                    description: Snowflake account
                database:
                    type: string
                    description: Snowflake database
            title: SnowflakeIdentifier
            required:
                - account
                - database
            additionalProperties: false
        synq.platforms.v1.SqlMeshIdentifier:
            type: object
            properties:
                defaultDatabaseInstance:
                    type: string
                    description: Default database instance for SQL Mesh
            title: SqlMeshIdentifier
            required:
                - defaultDatabaseInstance
            additionalProperties: false
        synq.platforms.v1.TrinoIdentifier:
            type: object
            properties:
                coordinator:
                    type: string
            title: TrinoIdentifier
            additionalProperties: false
        synq.platforms.v1.UnknownDataPlatform:
            type: object
            title: UnknownDataPlatform
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.AcceptedValuesTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the column to validate
                acceptedValues:
                    type: array
                    items:
                        type: string
                        minItems: 1
                        uniqueItems: true
                    minItems: 1
                    uniqueItems: true
                    description: List of allowed values for the column
            title: AcceptedValuesTest
            required:
                - columnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchAcceptTestSuggestionsRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                recurrenceRule:
                    type: string
                    description: '[Recurrence rule](https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html) for the execution schedule of the SqlTest.'
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
                    description: |-
                        Annotations for the given test.These help filter the tests for later
                         operations like listing by API, selection in UI, analytics, etc.
                saveFailures:
                    type: boolean
                    description: Boolean flag to to toggle saving of failure runs.
            title: BatchAcceptTestSuggestionsRequest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchAcceptTestSuggestionsResponse:
            type: object
            properties:
                identifiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Identifiers of created tests.
            title: BatchAcceptTestSuggestionsResponse
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchCreateTestSuggestionsRequest:
            type: object
            properties:
                suggestions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.TestSuggestion'
            title: BatchCreateTestSuggestionsRequest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchCreateTestSuggestionsResponse:
            type: object
            title: BatchCreateTestSuggestionsResponse
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchGetTestSuggestionsForEntitiesRequest:
            type: object
            properties:
                identifiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: BatchGetTestSuggestionsForEntitiesRequest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchGetTestSuggestionsForEntitiesResponse:
            type: object
            properties:
                suggestions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.TestSuggestion'
            title: BatchGetTestSuggestionsForEntitiesResponse
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchRejectTestSuggestionsRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                reason:
                    type: string
                    nullable: true
            title: BatchRejectTestSuggestionsRequest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BatchRejectTestSuggestionsResponse:
            type: object
            title: BatchRejectTestSuggestionsResponse
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.BusinessRuleTest:
            type: object
            properties:
                sqlExpression:
                    type: string
                    description: SQL expression that should evaluate to TRUE for valid records
            title: BusinessRuleTest
            required:
                - sqlExpression
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.EmptyTest:
            type: object
            properties:
                columnNames:
                    type: array
                    items:
                        type: string
                        minItems: 1
                        uniqueItems: true
                    minItems: 1
                    uniqueItems: true
                    description: List of column names to check for empty values
            title: EmptyTest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.FreshnessTest:
            type: object
            properties:
                timePartitionColumnName:
                    type: string
                    description: Name of the timestamp column used for freshness check
                timeWindowSeconds:
                    type:
                        - integer
                        - string
                    format: int64
                    description: Time window for freshness check (in seconds)
            title: FreshnessTest
            required:
                - timePartitionColumnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.MaxValueTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the numeric column to validate
                maxValue:
                    type: number
                    format: double
                    description: Maximum allowed value (inclusive)
            title: MaxValueTest
            required:
                - columnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.MinMaxTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the numeric column to validate
                minValue:
                    type: number
                    format: double
                    description: Minimum allowed value (inclusive)
                maxValue:
                    type: number
                    format: double
                    description: Maximum allowed value (inclusive)
            title: MinMaxTest
            required:
                - columnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.MinValueTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the numeric column to validate
                minValue:
                    type: number
                    format: double
                    description: Minimum allowed value (inclusive)
            title: MinValueTest
            required:
                - columnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.NotNullTest:
            type: object
            properties:
                columnNames:
                    type: array
                    items:
                        type: string
                        minItems: 1
                        uniqueItems: true
                    minItems: 1
                    uniqueItems: true
                    description: List of column names to check for NULL values
            title: NotNullTest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.RejectedValuesTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the column to validate
                rejectedValues:
                    type: array
                    items:
                        type: string
                        minItems: 1
                        uniqueItems: true
                    minItems: 1
                    uniqueItems: true
                    description: List of disallowed values for the column
            title: RejectedValuesTest
            required:
                - columnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.RelativeTimeTest:
            type: object
            properties:
                columnName:
                    type: string
                    description: Name of the first time column to compare
                relativeColumnName:
                    type: string
                    description: Name of the second time column that should be later than the first
            title: RelativeTimeTest
            required:
                - columnName
                - relativeColumnName
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.RowCountTest:
            type: object
            title: RowCountTest
            additionalProperties: false
        synq.datachecks.testsuggestions.v1.TestSuggestion:
            type: object
            oneOf:
                - properties:
                    acceptedValuesTest:
                        title: accepted_values_test
                        description: Validates that column values are within an allowed set (e.g., status in ['active', 'inactive', 'pending'])
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.AcceptedValuesTest'
                  title: accepted_values_test
                  required:
                    - acceptedValuesTest
                - properties:
                    businessRuleTest:
                        title: business_rule_test
                        description: Custom SQL-based business logic validation (e.g., total_amount = subtotal + tax)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BusinessRuleTest'
                  title: business_rule_test
                  required:
                    - businessRuleTest
                - properties:
                    emptyTest:
                        title: empty_test
                        description: Checks if specified columns contain empty values (e.g., description field can be empty)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.EmptyTest'
                  title: empty_test
                  required:
                    - emptyTest
                - properties:
                    freshnessTest:
                        title: freshness_test
                        description: Checks if data is up-to-date based on a time column (e.g., latest event_timestamp within 24h)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.FreshnessTest'
                  title: freshness_test
                  required:
                    - freshnessTest
                - properties:
                    maxValueTest:
                        title: max_value_test
                        description: Validates numeric values are less than or equal to a maximum value (e.g., price <= 1000)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.MaxValueTest'
                  title: max_value_test
                  required:
                    - maxValueTest
                - properties:
                    minMaxTest:
                        title: min_max_test
                        description: Validates numeric values are within specified range (e.g., price between 0 and 1000)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.MinMaxTest'
                  title: min_max_test
                  required:
                    - minMaxTest
                - properties:
                    minValueTest:
                        title: min_value_test
                        description: Validates numeric values are greater than or equal to a minimum value (e.g., price >= 0)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.MinValueTest'
                  title: min_value_test
                  required:
                    - minValueTest
                - properties:
                    notNullTest:
                        title: not_null_test
                        description: Checks if specified columns contain no NULL values (e.g., user_id should never be null)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.NotNullTest'
                  title: not_null_test
                  required:
                    - notNullTest
                - properties:
                    rejectedValuesTest:
                        title: rejected_values_test
                        description: Validates that column values are not in a forbidden set (e.g., country not in ['UNKNOWN', 'TEST'])
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.RejectedValuesTest'
                  title: rejected_values_test
                  required:
                    - rejectedValuesTest
                - properties:
                    relativeTimeTest:
                        title: relative_time_test
                        description: Compares time-based columns for logical order (e.g., start_date before end_date)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.RelativeTimeTest'
                  title: relative_time_test
                  required:
                    - relativeTimeTest
                - properties:
                    rowCountTest:
                        title: row_count_test
                        description: Validates the total number of rows in a table (e.g., orders table should have records)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.RowCountTest'
                  title: row_count_test
                  required:
                    - rowCountTest
                - properties:
                    uniqueTest:
                        title: unique_test
                        description: Ensures specified columns form a unique key combination (e.g., order_id is unique)
                        $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.UniqueTest'
                  title: unique_test
                  required:
                    - uniqueTest
            properties:
                identifier:
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                explanation:
                    type: string
                entitySynqPath:
                    type: string
                    description: Read-only path of matched entity. This is a unique path that can be used to access the entity in the Synq's UI.
                    nullable: true
                id:
                    type: string
                    description: Read-only Synq ID of matched entity. This is a unique ID that can be used to access the entity in the Synq's UI.
                    nullable: true
            required:
                - identifier
                - explanation
            additionalProperties: false
            description: Test types that can be suggested
        synq.datachecks.testsuggestions.v1.UniqueTest:
            type: object
            properties:
                columnNames:
                    type: array
                    items:
                        type: string
                        minItems: 1
                        uniqueItems: true
                    minItems: 1
                    uniqueItems: true
                    description: List of columns that should form a unique combination
                timePartitionColumnName:
                    type: string
                    description: |-
                        If provided, the check will be applied to the time window of the time partition column
                         If not provided, the check will be applied to all rows
                timeWindowSeconds:
                    type:
                        - integer
                        - string
                    format: int64
                    description: Time window for uniqueness check (in seconds)
            title: UniqueTest
            additionalProperties: false
        synq.platforms.v1.OAuthAuthentication:
            type: object
            properties:
                clientId:
                    type: string
                clientSecret:
                    type: string
            title: OAuthAuthentication
            required:
                - clientId
                - clientSecret
            additionalProperties: false
            description: Authentication using OAuth credentials
        synq.platforms.v1.PasswordAuthentication:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            title: PasswordAuthentication
            required:
                - username
                - password
            additionalProperties: false
            description: Authentication using a username and password
        synq.platforms.v1.PlatformAuthentication:
            type: object
            oneOf:
                - properties:
                    oauth:
                        title: oauth
                        $ref: '#/components/schemas/synq.platforms.v1.OAuthAuthentication'
                  title: oauth
                  required:
                    - oauth
                - properties:
                    password:
                        title: password
                        $ref: '#/components/schemas/synq.platforms.v1.PasswordAuthentication'
                  title: password
                  required:
                    - password
                - properties:
                    synqManagedKeyPair:
                        title: synq_managed_key_pair
                        $ref: '#/components/schemas/synq.platforms.v1.SynqManagedKeyPairAuthentication'
                  title: synq_managed_key_pair
                  required:
                    - synqManagedKeyPair
                - properties:
                    token:
                        title: token
                        $ref: '#/components/schemas/synq.platforms.v1.TokenAuthentication'
                  title: token
                  required:
                    - token
                - properties:
                    userManagedKeyPair:
                        title: user_managed_key_pair
                        $ref: '#/components/schemas/synq.platforms.v1.UserManagedKeyPairAuthentication'
                  title: user_managed_key_pair
                  required:
                    - userManagedKeyPair
            additionalProperties: false
        synq.platforms.v1.SetPlatformAuthenticationRequest:
            type: object
            properties:
                platform:
                    description: Platform identifier
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformIdentifier'
                authentication:
                    description: Authentication details
                    $ref: '#/components/schemas/synq.platforms.v1.PlatformAuthentication'
            title: SetPlatformAuthenticationRequest
            required:
                - platform
                - authentication
            additionalProperties: false
        synq.platforms.v1.SetPlatformAuthenticationResponse:
            type: object
            properties:
                success:
                    type: boolean
                authentication:
                    description: The authentication is returned in case there is a server side set information to be passed to the client.
                    nullable: true
                    $ref: '#/components/schemas/synq.platforms.v1.PlatformAuthentication'
            title: SetPlatformAuthenticationResponse
            required:
                - success
            additionalProperties: false
        synq.platforms.v1.SynqManagedKeyPairAuthentication:
            type: object
            properties:
                publicKey:
                    type: string
                    nullable: true
            title: SynqManagedKeyPairAuthentication
            additionalProperties: false
            description: |-
                Authentication using a managed key pair.
                 The public key will be set and returned by the server after the authentication is created.
        synq.platforms.v1.TokenAuthentication:
            type: object
            properties:
                token:
                    type: string
            title: TokenAuthentication
            required:
                - token
            additionalProperties: false
            description: Authentication using a token (API key, PAT, etc)
        synq.platforms.v1.UserManagedKeyPairAuthentication:
            type: object
            properties:
                privateKey:
                    type: string
            title: UserManagedKeyPairAuthentication
            required:
                - privateKey
            additionalProperties: false
            description: |-
                Authentication using a user-managed key pair.
                 The private key is stored safely as a secret. The response does not include the private key for security.
        synq.agent.dwh.v1.AgentTaskData:
            type: object
            oneOf:
                - properties:
                    fetchMetricsResult:
                        title: fetch_metrics_result
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchMetricsResult'
                  title: fetch_metrics_result
                  required:
                    - fetchMetricsResult
                - properties:
                    fetchSegmentsResult:
                        title: fetch_segments_result
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchSegmentsResult'
                  title: fetch_segments_result
                  required:
                    - fetchSegmentsResult
            additionalProperties: false
        synq.agent.dwh.v1.FetchMetricsResult:
            type: object
            properties:
                queryRows:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchMetricsResult.QueryRows'
                commandContext:
                    type: string
                    description: Matches command_context of FetchMetricsCommand
                    nullable: true
            title: FetchMetricsResult
            additionalProperties: false
        synq.agent.dwh.v1.FetchMetricsResult.ColumnValue:
            type: object
            oneOf:
                - properties:
                    doubleValue:
                        type: number
                        title: double_value
                        format: double
                  title: double_value
                  required:
                    - doubleValue
                - properties:
                    intValue:
                        type:
                            - integer
                            - string
                        title: int_value
                        format: int64
                  title: int_value
                  required:
                    - intValue
                - properties:
                    timeValue:
                        title: time_value
                        $ref: '#/components/schemas/google.protobuf.Timestamp'
                  title: time_value
                  required:
                    - timeValue
            properties:
                name:
                    type: string
                isNull:
                    type: boolean
            additionalProperties: false
        synq.agent.dwh.v1.FetchMetricsResult.MetricsRow:
            type: object
            properties:
                segment:
                    type: string
                    nullable: true
                columnValues:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchMetricsResult.ColumnValue'
            title: MetricsRow
            additionalProperties: false
        synq.agent.dwh.v1.FetchMetricsResult.QueryRows:
            type: object
            properties:
                rows:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchMetricsResult.MetricsRow'
                queryId:
                    type: string
                    nullable: true
            title: QueryRows
            additionalProperties: false
        synq.agent.dwh.v1.FetchSegmentsResult:
            type: object
            properties:
                rows:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.dwh.v1.FetchSegmentsResult.SegmentRow'
            title: FetchSegmentsResult
            additionalProperties: false
        synq.agent.dwh.v1.FetchSegmentsResult.SegmentRow:
            type: object
            properties:
                segment:
                    type: string
                count:
                    type:
                        - integer
                        - string
                    format: int64
                    nullable: true
            title: SegmentRow
            additionalProperties: false
        synq.ingest.dwh.v1.Fqn:
            type: object
            properties:
                instanceName:
                    type: string
                databaseName:
                    type: string
                schemaName:
                    type: string
                objectName:
                    type: string
            title: Fqn
            required:
                - objectName
            additionalProperties: false
        synq.ingest.dwh.v1.IngestObjectInformationRequest:
            type: object
            properties:
                connectionId:
                    type: string
                uploadId:
                    type: string
                    format: uuid
                stateAt:
                    description: Time at which state was collected
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                objects:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.ObjectInformation'
            title: IngestObjectInformationRequest
            required:
                - connectionId
                - uploadId
                - stateAt
            additionalProperties: false
        synq.ingest.dwh.v1.IngestObjectInformationResponse:
            type: object
            title: IngestObjectInformationResponse
            additionalProperties: false
        synq.ingest.dwh.v1.IngestObjectMetricsRequest:
            type: object
            properties:
                connectionId:
                    type: string
                uploadId:
                    type: string
                    format: uuid
                stateAt:
                    description: Time at which state was collected
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.ObjectMetrics'
            title: IngestObjectMetricsRequest
            required:
                - connectionId
                - uploadId
                - stateAt
            additionalProperties: false
        synq.ingest.dwh.v1.IngestObjectMetricsResponse:
            type: object
            title: IngestObjectMetricsResponse
            additionalProperties: false
        synq.ingest.dwh.v1.IngestSchemasRequest:
            type: object
            properties:
                connectionId:
                    type: string
                uploadId:
                    type: string
                    format: uuid
                stateAt:
                    description: Time at which state was collected
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                schemas:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.Schema'
            title: IngestSchemasRequest
            required:
                - connectionId
                - uploadId
                - stateAt
            additionalProperties: false
        synq.ingest.dwh.v1.IngestSchemasResponse:
            type: object
            title: IngestSchemasResponse
            additionalProperties: false
        synq.ingest.dwh.v1.IngestSqlDefinitionsRequest:
            type: object
            properties:
                connectionId:
                    type: string
                uploadId:
                    type: string
                    format: uuid
                stateAt:
                    description: Time at which state was collected
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                sqlDefinitions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.SqlDefinition'
            title: IngestSqlDefinitionsRequest
            required:
                - connectionId
                - uploadId
                - stateAt
            additionalProperties: false
        synq.ingest.dwh.v1.IngestSqlDefinitionsResponse:
            type: object
            title: IngestSqlDefinitionsResponse
            additionalProperties: false
        synq.ingest.dwh.v1.IngestTaskResultsRequest:
            type: object
            properties:
                connectionId:
                    type: string
                taskId:
                    type: string
                    format: uuid
                stateAt:
                    description: Time at which state was collected
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                taskData:
                    $ref: '#/components/schemas/synq.agent.dwh.v1.AgentTaskData'
            title: IngestTaskResultsRequest
            required:
                - connectionId
                - taskId
                - stateAt
                - taskData
            additionalProperties: false
        synq.ingest.dwh.v1.IngestTaskResultsResponse:
            type: object
            title: IngestTaskResultsResponse
            additionalProperties: false
        synq.ingest.dwh.v1.ObjectInformation:
            type: object
            properties:
                fqn:
                    $ref: '#/components/schemas/synq.ingest.dwh.v1.Fqn'
                objectNativeType:
                    type: string
                isView:
                    type: boolean
                isTable:
                    type: boolean
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.Tag'
                description:
                    type: string
                    nullable: true
            title: ObjectInformation
            additionalProperties: false
        synq.ingest.dwh.v1.ObjectMetrics:
            type: object
            properties:
                fqn:
                    $ref: '#/components/schemas/synq.ingest.dwh.v1.Fqn'
                rowCount:
                    type:
                        - integer
                        - string
                    format: int64
                    nullable: true
                updatedAt:
                    nullable: true
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                sizeBytes:
                    type:
                        - integer
                        - string
                    format: int64
                    nullable: true
            title: ObjectMetrics
            additionalProperties: false
        synq.ingest.dwh.v1.Schema:
            type: object
            properties:
                fqn:
                    $ref: '#/components/schemas/synq.ingest.dwh.v1.Fqn'
                columns:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.SchemaColumn'
            title: Schema
            additionalProperties: false
        synq.ingest.dwh.v1.SchemaColumn:
            type: object
            properties:
                name:
                    type: string
                nativeType:
                    type: string
                ordinalPosition:
                    type: integer
                    format: int32
                description:
                    type: string
                    nullable: true
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.Tag'
                isStruct:
                    type: boolean
                isRepeated:
                    type: boolean
                fields:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.SchemaColumnField'
            title: SchemaColumn
            additionalProperties: false
        synq.ingest.dwh.v1.SchemaColumnField:
            type: object
            properties:
                name:
                    type: string
                nativeType:
                    type: string
                description:
                    type: string
                    nullable: true
                ordinalPosition:
                    type: integer
                    format: int32
                isStruct:
                    type: boolean
                isRepeated:
                    type: boolean
                fields:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.dwh.v1.SchemaColumnField'
            title: SchemaColumnField
            additionalProperties: false
        synq.ingest.dwh.v1.SqlDefinition:
            type: object
            properties:
                fqn:
                    $ref: '#/components/schemas/synq.ingest.dwh.v1.Fqn'
                sql:
                    type: string
            title: SqlDefinition
            additionalProperties: false
        synq.ingest.dwh.v1.Tag:
            type: object
            properties:
                tagName:
                    type: string
                tagValue:
                    type: string
            title: Tag
            additionalProperties: false
        synq.ingest.cloudwatch.v1.CloudwatchLogsLogEvent:
            type: object
            properties:
                id:
                    type: string
                timestamp:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                message:
                    type: string
            title: CloudwatchLogsLogEvent
            additionalProperties: false
        synq.ingest.cloudwatch.v1.IngestCloudwatchLogsDataRequest:
            type: object
            properties:
                owner:
                    type: string
                logGroup:
                    type: string
                logStream:
                    type: string
                subscriptionFilters:
                    type: array
                    items:
                        type: string
                messageType:
                    type: string
                logEvents:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.ingest.cloudwatch.v1.CloudwatchLogsLogEvent'
            title: IngestCloudwatchLogsDataRequest
            additionalProperties: false
        synq.ingest.cloudwatch.v1.IngestCloudwatchLogsDataResponse:
            type: object
            title: IngestCloudwatchLogsDataResponse
            additionalProperties: false
        google.protobuf.NullValue:
            type: string
            title: NullValue
            enum:
                - NULL_VALUE
            description: |-
                `NullValue` is a singleton enumeration to represent the null value for the
                 `Value` type union.

                 The JSON representation for `NullValue` is JSON `null`.
        google.protobuf.ListValue:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Value'
                    description: Repeated field of dynamically typed values.
            title: ListValue
            additionalProperties: false
            description: |-
                `ListValue` is a wrapper around a repeated field of values.

                 The JSON representation for `ListValue` is JSON array.
        google.protobuf.Struct:
            type: object
            additionalProperties:
                $ref: '#/components/schemas/google.protobuf.Value'
            description: |-
                `Struct` represents a structured data value, consisting of fields
                 which map to dynamically typed values. In some languages, `Struct`
                 might be supported by a native representation. For example, in
                 scripting languages like JS a struct is represented as an
                 object. The details of that representation are described together
                 with the proto support for the language.

                 The JSON representation for `Struct` is JSON object.
        google.protobuf.Struct.FieldsEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/google.protobuf.Value'
            title: FieldsEntry
            additionalProperties: false
        google.protobuf.Value:
            oneOf:
                - type: "null"
                - type: number
                - type: string
                - type: boolean
                - type: array
                - type: object
                  additionalProperties: true
            description: |-
                `Value` represents a dynamically typed value which can be either
                 null, a number, a string, a boolean, a recursive struct value, or a
                 list of values. A producer of value is expected to set one of these
                 variants. Absence of any variant indicates an error.

                 The JSON representation for `Value` is JSON value.
        synq.ingest.airflow.v1.IngestDatahubAspectsRequest:
            type: object
            properties:
                aspects:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Struct'
            title: IngestDatahubAspectsRequest
            additionalProperties: false
        synq.ingest.airflow.v1.IngestDatahubAspectsResponse:
            type: object
            title: IngestDatahubAspectsResponse
            additionalProperties: false
        synq.ingest.airflow.v1.IngestLogRequest:
            type: object
            properties:
                dagId:
                    type: string
                taskId:
                    type: string
                runId:
                    type: string
                attempt:
                    type: integer
                    format: int32
                log:
                    type: string
                logTime:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: IngestLogRequest
            required:
                - dagId
                - taskId
                - runId
                - attempt
                - logTime
            additionalProperties: false
        synq.ingest.airflow.v1.IngestLogResponse:
            type: object
            title: IngestLogResponse
            additionalProperties: false
        synq.agent.sre.v1.IssueTriageStatus:
            type: string
            title: IssueTriageStatus
            enum:
                - ISSUE_TRIAGE_STATUS_UNSPECIFIED
                - ISSUE_TRIAGE_STATUS_SCHEDULED
                - ISSUE_TRIAGE_STATUS_IN_PROGRESS
                - ISSUE_TRIAGE_STATUS_CANCELLED
                - ISSUE_TRIAGE_STATUS_FAILED
                - ISSUE_TRIAGE_STATUS_TRIAGED
                - ISSUE_TRIAGE_STATUS_ACCEPTED
                - ISSUE_TRIAGE_STATUS_IGNORED
                - ISSUE_TRIAGE_STATUS_CLOSED
            description: |-
                IssueTriageStatus represents the current stage of an issue in the SRE agent's investigation workflow.
                 The status progresses as the agent collects evidence and reaches conclusions about the issue.
        synq.agent.sre.v1.AcceptFeedback:
            type: object
            title: AcceptFeedback
            additionalProperties: false
        synq.agent.sre.v1.AddToIncidentConclusion:
            type: object
            properties:
                incidentId:
                    type: string
                    description: ID of the existing incident that this issue should be added to.
            title: AddToIncidentConclusion
            required:
                - incidentId
            additionalProperties: false
            description: |-
                AddToIncidentConclusion indicates that the issue should be added to an existing incident.
                 This conclusion should be supported by evidence showing the connection to the existing incident.
        synq.agent.sre.v1.AnalysisEvidence:
            type: object
            properties:
                analysis:
                    type: string
                    description: |-
                        Detailed analysis of the issue, including observations, patterns, and potential implications.
                         This should provide clear reasoning for the conclusions drawn.
                sqlQueries:
                    type: array
                    items:
                        type: string
                    description: SQL queries which were executed to investigate the issue and collect the evidence.
            title: AnalysisEvidence
            required:
                - analysis
            additionalProperties: false
            description: |-
                AnalysisEvidence contains detailed analysis of the issue based on collected data.
                 This should only be used as a last resort when no other more specialized evidence types
                 (history, root cause, related issues, or changes) could be collected.
                 It provides a comprehensive understanding of the problem and its implications.
        synq.agent.sre.v1.BatchLatestConclusionsRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                    description: List of issue IDs for which latest conclusion should be returned.
            title: BatchLatestConclusionsRequest
            additionalProperties: false
        synq.agent.sre.v1.BatchLatestConclusionsResponse:
            type: object
            properties:
                conclusions:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.IssueConclusionWithEvidence'
            title: BatchLatestConclusionsResponse
            additionalProperties: false
        synq.agent.sre.v1.BatchTriageStateRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                    description: List of issue IDs for which triage status should be returned.
            title: BatchTriageStateRequest
            additionalProperties: false
        synq.agent.sre.v1.BatchTriageStateResponse:
            type: object
            properties:
                states:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageState'
            title: BatchTriageStateResponse
            additionalProperties: false
        synq.agent.sre.v1.BatchTriageStateResponse.StatesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageState'
            title: StatesEntry
            additionalProperties: false
        synq.agent.sre.v1.ChangeEvidence:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: |-
                        List of entities (e.g., services, configurations) that have recently changed
                         and may be related to the current issue.
                entitiesSynqPaths:
                    type: array
                    items:
                        type: string
                    description: Read-only list of paths matching entities. This is a unique path that can be used to access the entity in the Synq's UI.
                changeDescription:
                    type: string
                    description: |-
                        Detailed description of the changes that were detected and their potential
                         impact on the current issue.
                changeIds:
                    type: array
                    items:
                        type: string
                    description: When available identifiers of specific change IDs
            title: ChangeEvidence
            additionalProperties: false
            description: |-
                ChangeEvidence documents recent changes that may have contributed to the issue.
                 This helps in understanding if the issue is related to recent modifications.
        synq.agent.sre.v1.CodeChange:
            type: object
            properties:
                filePath:
                    type: string
                    description: Path to the file that was changed.
                startLine:
                    type: integer
                    format: int32
                    description: Starting line number of the change (inclusive).
                endLine:
                    type: integer
                    format: int32
                    description: Ending line number of the change (inclusive).
                changeDescription:
                    type: string
                    description: Description of what was changed in this section.
            title: CodeChange
            required:
                - filePath
            additionalProperties: false
            description: CodeChange represents a specific change in a file within a commit.
        synq.agent.sre.v1.CommitEvidence:
            type: object
            properties:
                changeId:
                    type: string
                    description: ID of the change that introduced the code modifications.
                relevantCodeChanges:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.CodeChange'
                    minItems: 1
                    description: List of relevant code changes in the commit.
            title: CommitEvidence
            required:
                - changeId
            additionalProperties: false
            description: |-
                CommitEvidence documents code changes that may have contributed to the issue.
                 This helps in understanding if the issue is related to recent code modifications.
        synq.agent.sre.v1.ConcludeRequest:
            type: object
            properties:
                sessionId:
                    type: string
                    description: Unique identifier of the triaging session, used to group related operations.
                conclusion:
                    description: |-
                        IssueConclusion represents the final determination made by the LLM agent about an issue.
                         Each conclusion type must be supported by appropriate evidence collected during investigation.
                    $ref: '#/components/schemas/synq.agent.sre.v1.IssueConclusion'
                evidence:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.EvidenceItem'
                    description: Collection of evidence items supporting the conclusion. Evidences previously recorded should not be added here.
            title: ConcludeRequest
            required:
                - sessionId
                - conclusion
            additionalProperties: false
            description: Request to conclude the triage investigation for one or more issues.
        synq.agent.sre.v1.ConcludeResponse:
            type: object
            title: ConcludeResponse
            additionalProperties: false
            description: Response for the Conclude operation. Empty as the operation is fire-and-forget.
        synq.agent.sre.v1.ConclusionFeedback:
            type: object
            oneOf:
                - properties:
                    accept:
                        title: accept
                        $ref: '#/components/schemas/synq.agent.sre.v1.AcceptFeedback'
                  title: accept
                  required:
                    - accept
                - properties:
                    dismiss:
                        title: dismiss
                        $ref: '#/components/schemas/synq.agent.sre.v1.DismissFeedback'
                  title: dismiss
                  required:
                    - dismiss
                - properties:
                    retriage:
                        title: retriage
                        $ref: '#/components/schemas/synq.agent.sre.v1.ReTriageFeedback'
                  title: retriage
                  required:
                    - retriage
            properties:
                user:
                    type: string
                feedbackAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            additionalProperties: false
        synq.agent.sre.v1.DataQueryEvidenceItem:
            type: object
            properties:
                queryId:
                    type: string
                    description: |-
                        Unique identifier for the query. This ID can be used to retrieve the actual SQL query
                         from the session store.
                dataAnalysis:
                    type: string
                    description: |-
                        Analysis specific to this query's results and their implications.
                         This is the analysis of the results from executing the query identified by query_id.
            title: DataQueryEvidenceItem
            required:
                - queryId
                - dataAnalysis
            additionalProperties: false
            description: DataQueryEvidenceItem represents a single SQL query and its analysis.
        synq.agent.sre.v1.DataQueryEvidenceV2:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.DataQueryEvidenceItem'
                    minItems: 1
                    description: List of data query evidence items, each containing a query ID and its analysis.
            title: DataQueryEvidenceV2
            additionalProperties: false
            description: |-
                DataQueryEvidenceV2 contains SQL queries and their analysis results with query IDs.
                 This helps in understanding the issue through data analysis with query tracking.
        synq.agent.sre.v1.DeclareIncidentConclusion:
            type: object
            properties:
                title:
                    type: string
                    description: |-
                        Suggested title for the incident that will be created.
                         Should be clear and concise to quickly communicate the situation.
                description:
                    type: string
                    description: |-
                        Detailed description of the incident situation, including:
                         - What is happening
                         - Potential impact
                         - Affected systems or services
                         - Any immediate actions needed
            title: DeclareIncidentConclusion
            additionalProperties: false
            description: |-
                DeclareIncidentConclusion indicates that the issue requires immediate attention as an incident.
                 This conclusion should be supported by evidence showing significant impact or risk.
        synq.agent.sre.v1.DismissFeedback:
            type: object
            properties:
                comment:
                    type: string
                    nullable: true
            title: DismissFeedback
            additionalProperties: false
        synq.agent.sre.v1.EvidenceItem:
            type: object
            oneOf:
                - properties:
                    analysis:
                        title: analysis
                        description: |-
                            Evidence containing detailed analysis of the issue.
                             DEPRECATED: This type will be gradually retired in favor of more specific evidence types
                             like DataQueryEvidenceV2 and OtherEvidence. Please use those types for new evidence.
                        deprecated: true
                        $ref: '#/components/schemas/synq.agent.sre.v1.AnalysisEvidence'
                  title: analysis
                  required:
                    - analysis
                - properties:
                    change:
                        title: change
                        description: Evidence of recent changes that may have contributed to the issue.
                        $ref: '#/components/schemas/synq.agent.sre.v1.ChangeEvidence'
                  title: change
                  required:
                    - change
                - properties:
                    commit:
                        title: commit
                        description: Evidence containing code changes and commit information.
                        $ref: '#/components/schemas/synq.agent.sre.v1.CommitEvidence'
                  title: commit
                  required:
                    - commit
                - properties:
                    dataQueryV2:
                        title: data_query_v2
                        description: Evidence containing SQL queries and data analysis results with query IDs.
                        $ref: '#/components/schemas/synq.agent.sre.v1.DataQueryEvidenceV2'
                  title: data_query_v2
                  required:
                    - dataQueryV2
                - properties:
                    impactedDataproduct:
                        title: impacted_dataproduct
                        description: Evidence of impact on important dataproduct
                        $ref: '#/components/schemas/synq.agent.sre.v1.ImpactedDataproductEvidence'
                  title: impacted_dataproduct
                  required:
                    - impactedDataproduct
                - properties:
                    impactedOwner:
                        title: impacted_owner
                        description: Evidence of serious impact on business owner
                        $ref: '#/components/schemas/synq.agent.sre.v1.ImpactedOwnerEvidence'
                  title: impacted_owner
                  required:
                    - impactedOwner
                - properties:
                    issueHistory:
                        title: issue_history
                        description: Historical evidence showing similar past issues that may help understand the current situation.
                        $ref: '#/components/schemas/synq.agent.sre.v1.HistoryEvidence'
                  title: issue_history
                  required:
                    - issueHistory
                - properties:
                    other:
                        title: other
                        description: Evidence containing general analysis that doesn't fit into other specialized types.
                        $ref: '#/components/schemas/synq.agent.sre.v1.OtherEvidence'
                  title: other
                  required:
                    - other
                - properties:
                    relatedIssue:
                        title: related_issue
                        description: Evidence showing related issues that may be connected to the current investigation.
                        $ref: '#/components/schemas/synq.agent.sre.v1.RelatedIssueEvidence'
                  title: related_issue
                  required:
                    - relatedIssue
                - properties:
                    rootCause:
                        title: root_cause
                        description: Evidence pointing to the likely root cause of the issue.
                        $ref: '#/components/schemas/synq.agent.sre.v1.RootCauseEvidence'
                  title: root_cause
                  required:
                    - rootCause
            properties:
                evidenceId:
                    type: string
                    format: uuid
                    description: Unique identifier of the evidence item.
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                    description: |-
                        List of issue IDs that should be annotated with the provided evidence.
                         Each ID must be a valid UUID.
                title:
                    type: string
                    description: |-
                        Brief, descriptive title summarizing the type of evidence collected.
                         This helps in quickly understanding the nature of the evidence.
            required:
                - issueIds
                - title
            additionalProperties: false
            description: |-
                EvidenceItem represents a single piece of evidence collected during the triage investigation.
                 Each evidence item must have a title and one of the specific evidence types.
        synq.agent.sre.v1.HistoryEvidence:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: |-
                        List of issue IDs that are similar to the currently triaged issue.
                         These historical issues can provide insights into resolution patterns.
            title: HistoryEvidence
            additionalProperties: false
            description: |-
                HistoryEvidence represents historical context from similar past issues.
                 This helps in understanding if the current issue is recurring or has known patterns.
        synq.agent.sre.v1.ImpactedDataproductEvidence:
            type: object
            properties:
                impactReason:
                    type: string
                    description: |-
                        Detailed explanation of how and why the dataproduct is impacted by the issue.
                         This should provide clear reasoning for the impact assessment.
                dataproductIds:
                    type: array
                    items:
                        type: string
                    description: |-
                        List of dataproduct IDs that are affected by the issue.
                         These IDs should reference existing dataproducts in the system.
            title: ImpactedDataproductEvidence
            required:
                - dataproductIds
            additionalProperties: false
            description: |-
                ImpactedDataproduct documents Data Products that are significantly affected by the issue.
                 This helps in understanding the business impact and prioritizing resolution efforts.
        synq.agent.sre.v1.ImpactedOwnerEvidence:
            type: object
            properties:
                impactReason:
                    type: string
                    description: |-
                        Detailed explanation of how and why the owner is impacted by the issue.
                         This should provide clear reasoning for the impact assessment.
                ownerIds:
                    type: array
                    items:
                        type: string
                    description: |-
                        List of owner IDs that are affected by the issue.
                         These IDs should reference existing owners or teams in the system.
            title: ImpactedOwnerEvidence
            required:
                - ownerIds
            additionalProperties: false
            description: |-
                ImpactedOwner documents business owners or teams that are seriously affected by the issue.
                 This helps in understanding stakeholder impact and communication requirements.
        synq.agent.sre.v1.IssueConclusion:
            type: object
            oneOf:
                - properties:
                    addToIncident:
                        title: add_to_incident
                        description: Conclusion that the issue should be added to an existing incident.
                        $ref: '#/components/schemas/synq.agent.sre.v1.AddToIncidentConclusion'
                  title: add_to_incident
                  required:
                    - addToIncident
                - properties:
                    declareIncident:
                        title: declare_incident
                        description: Conclusion that the issue requires incident declaration.
                        $ref: '#/components/schemas/synq.agent.sre.v1.DeclareIncidentConclusion'
                  title: declare_incident
                  required:
                    - declareIncident
                - properties:
                    requestForHumanReview:
                        title: request_for_human_review
                        description: Conclusion that human review is needed for further investigation.
                        $ref: '#/components/schemas/synq.agent.sre.v1.RequestForHumanReviewConclusion'
                  title: request_for_human_review
                  required:
                    - requestForHumanReview
                - properties:
                    setExpected:
                        title: set_expected
                        description: Conclusion that the issue is expected behavior.
                        $ref: '#/components/schemas/synq.agent.sre.v1.SetExpectedConclusion'
                  title: set_expected
                  required:
                    - setExpected
                - properties:
                    setFixed:
                        title: set_fixed
                        description: Conclusion that the issue has been fixed and can be closed.
                        $ref: '#/components/schemas/synq.agent.sre.v1.SetFixedConclusion'
                  title: set_fixed
                  required:
                    - setFixed
                - properties:
                    setNoActionNeeded:
                        title: set_no_action_needed
                        description: Conclusion that no action is needed as the issue will resolve itself.
                        $ref: '#/components/schemas/synq.agent.sre.v1.SetNoActionNeededConclusion'
                  title: set_no_action_needed
                  required:
                    - setNoActionNeeded
                - properties:
                    unexplained:
                        title: unexplained
                        description: Conclusion that the issue cannot be explained and needs urgent human attention.
                        $ref: '#/components/schemas/synq.agent.sre.v1.UnexplainedConclusion'
                  title: unexplained
                  required:
                    - unexplained
            properties:
                conclusionId:
                    type: string
                    format: uuid
                    description: Unique identifier of the conclusion.
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                    description: List of issue IDs that should be concluded with the specified conclusion.
                title:
                    type: string
                    description: Brief, single-line description summarizing the triage conclusion. Max 5 words.
                summary:
                    type: string
                    description: |-
                        Detailed markdown-formatted description explaining the conclusion and the reasoning
                         based on all collected evidence.
                concludedAt:
                    description: Timestamp when the conclusion was made.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                isFinalConclusion:
                    type: boolean
                    description: Indicates that this is final conclusion and SRE agent won't change it unless new evidence is provided to change it.
            required:
                - issueIds
                - title
            additionalProperties: false
            description: |-
                IssueConclusion represents the final determination made by the LLM agent about an issue.
                 Each conclusion type must be supported by appropriate evidence collected during investigation.
        synq.agent.sre.v1.IssueConclusionWithEvidence:
            type: object
            properties:
                conclusion:
                    description: IssueConclusion represents the final determination made by the LLM agent about an issue.
                    $ref: '#/components/schemas/synq.agent.sre.v1.IssueConclusion'
                originalIssueIds:
                    type: array
                    items:
                        type: string
                    description: List of issues for which original conclusion was created.
                evidence:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.EvidenceItem'
                    description: Collection of structured evidence items collected during the investigation.
                userFeedback:
                    description: Optional feedback given by the user on the SRE generated conclusion.
                    nullable: true
                    $ref: '#/components/schemas/synq.agent.sre.v1.ConclusionFeedback'
            title: IssueConclusionWithEvidence
            required:
                - conclusion
            additionalProperties: false
        synq.agent.sre.v1.IssueTriageState:
            type: object
            properties:
                issueId:
                    type: string
                    description: Unique identifier of the issue being investigated by the SRE agent
                status:
                    description: Current status of the issue in the triage workflow, indicating the stage of investigation
                    $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageStatus'
                lastUpdatedAt:
                    description: Timestamp indicating when the issue triage state was last updated
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: IssueTriageState
            additionalProperties: false
            description: |-
                IssueTriageState represents the current state of an issue in the SRE agent's investigation workflow.
                 This state is used to track the progress of automated triage and coordinate between different parts of the system.
        synq.agent.sre.v1.ListTriageStateRequest:
            type: object
            properties:
                statuses:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageStatus'
                    minItems: 1
            title: ListTriageStateRequest
            additionalProperties: false
        synq.agent.sre.v1.ListTriageStateResponse:
            type: object
            properties:
                states:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageState'
            title: ListTriageStateResponse
            additionalProperties: false
        synq.agent.sre.v1.MarkAsInProgressRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                    description: List of issue IDs for which work has started.
            title: MarkAsInProgressRequest
            additionalProperties: false
        synq.agent.sre.v1.MarkAsInProgressResponse:
            type: object
            properties:
                markedIssueIds:
                    type: array
                    items:
                        type: string
            title: MarkAsInProgressResponse
            additionalProperties: false
        synq.agent.sre.v1.MarkFailedRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                    description: List of issue IDs for which work has failed.
                errorMessage:
                    type: string
            title: MarkFailedRequest
            additionalProperties: false
        synq.agent.sre.v1.MarkFailedResponse:
            type: object
            properties:
                markedIssueIds:
                    type: array
                    items:
                        type: string
            title: MarkFailedResponse
            additionalProperties: false
        synq.agent.sre.v1.OtherEvidence:
            type: object
            properties:
                analysis:
                    type: string
                    description: |-
                        Detailed analysis of the issue, including observations, patterns, and potential implications.
                         This should provide clear reasoning for the conclusions drawn.
            title: OtherEvidence
            required:
                - analysis
            additionalProperties: false
            description: |-
                OtherEvidence contains general analysis that doesn't fit into other specialized evidence types.
                 This should be used when the analysis doesn't involve SQL queries, code changes, or other
                 specialized evidence types.
        synq.agent.sre.v1.ReTriageFeedback:
            type: object
            properties:
                instruction:
                    type: string
            title: ReTriageFeedback
            additionalProperties: false
        synq.agent.sre.v1.RecordEvidenceRequest:
            type: object
            properties:
                sessionId:
                    type: string
                    description: Unique identifier of the triaging session, used to group related operations.
                evidence:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.EvidenceItem'
                    minItems: 1
                    description: |-
                        Collection of structured evidence items collected during the investigation.
                         Must contain at least one evidence item.
            title: RecordEvidenceRequest
            required:
                - sessionId
            additionalProperties: false
            description: Request to record evidence collected during the triage investigation.
        synq.agent.sre.v1.RecordEvidenceResponse:
            type: object
            title: RecordEvidenceResponse
            additionalProperties: false
            description: Response for the RecordEvidence operation. Empty as the operation is fire-and-forget.
        synq.agent.sre.v1.RelatedIssueEvidence:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: |-
                        List of issue IDs that are related to the current investigation.
                         These issues may be symptoms of the same underlying problem or have dependencies.
            title: RelatedIssueEvidence
            additionalProperties: false
            description: |-
                RelatedIssueEvidence identifies other issues that may be connected to the current investigation.
                 This helps in understanding broader context and potential dependencies.
        synq.agent.sre.v1.RequestForHumanReviewConclusion:
            type: object
            title: RequestForHumanReviewConclusion
            additionalProperties: false
            description: |-
                RequestForHumanReviewConclusion indicates that the issue needs human review.
                 This conclusion should be used when:
                 - The agent has collected some evidence but cannot make a definitive conclusion
                 - The issue requires human judgment or expertise
                 - The impact is unclear or needs human assessment
        synq.agent.sre.v1.RootCauseEvidence:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue that is believed to be the root cause of the current issue.
            title: RootCauseEvidence
            required:
                - issueId
            additionalProperties: false
            description: |-
                RootCauseEvidence identifies the likely root cause of the issue being investigated.
                 This helps in understanding the fundamental reason behind the problem.
        synq.agent.sre.v1.SetExpectedConclusion:
            type: object
            title: SetExpectedConclusion
            additionalProperties: false
            description: |-
                SetExpectedConclusion indicates that the issue is expected behavior and no action is needed.
                 This conclusion should be supported by evidence showing this is normal operation.
        synq.agent.sre.v1.SetFixedConclusion:
            type: object
            title: SetFixedConclusion
            additionalProperties: false
            description: |-
                SetFixedConclusion indicates that the issue has already been resolved and can be closed.
                 This conclusion should be supported by evidence showing the fix has been applied and verified.
        synq.agent.sre.v1.SetNoActionNeededConclusion:
            type: object
            title: SetNoActionNeededConclusion
            additionalProperties: false
            description: |-
                SetNoActionNeededConclusion indicates that the issue will resolve itself without intervention.
                 This conclusion should be supported by evidence showing the issue is temporary or self-healing.
        synq.agent.sre.v1.UnexplainedConclusion:
            type: object
            title: UnexplainedConclusion
            additionalProperties: false
            description: |-
                UnexplainedConclusion indicates that the agent was unable to collect sufficient evidence
                 to understand or explain the issue. This conclusion requires high-priority human review
                 as it may indicate a serious or complex problem that needs immediate attention.
        synq.extensions.atlan.provider.v1.AtlanConnection:
            type: object
            properties:
                name:
                    type: string
                qualifiedName:
                    type: string
            title: AtlanConnection
            additionalProperties: false
        synq.extensions.atlan.provider.v1.AtlanDataDomain:
            type: object
            properties:
                name:
                    type: string
                qualifiedName:
                    type: string
                parent:
                    nullable: true
                    $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataDomain'
            title: AtlanDataDomain
            additionalProperties: false
        synq.extensions.atlan.provider.v1.AtlanDataProduct:
            type: object
            properties:
                name:
                    type: string
                qualifiedName:
                    type: string
                domain:
                    nullable: true
                    $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataDomain'
                ownerUsers:
                    description: emails for the owner users
                    $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataProduct.Emails'
                ownerGroups:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataProduct.Emails'
                    description: emails for the owner groups mapped against group ID
            title: AtlanDataProduct
            additionalProperties: false
        synq.extensions.atlan.provider.v1.AtlanDataProduct.Emails:
            type: object
            properties:
                emails:
                    type: array
                    items:
                        type: string
            title: Emails
            additionalProperties: false
        synq.extensions.atlan.provider.v1.AtlanDataProduct.OwnerGroupsEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataProduct.Emails'
            title: OwnerGroupsEntry
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanConnectionsRequest:
            type: object
            title: GetAtlanConnectionsRequest
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanConnectionsResponse:
            type: object
            properties:
                connections:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanConnection'
            title: GetAtlanConnectionsResponse
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanDataProductsRequest:
            type: object
            title: GetAtlanDataProductsRequest
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanDataProductsResponse:
            type: object
            properties:
                dataProducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataProduct'
            title: GetAtlanDataProductsResponse
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanDomainsRequest:
            type: object
            title: GetAtlanDomainsRequest
            additionalProperties: false
        synq.extensions.atlan.provider.v1.GetAtlanDomainsResponse:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.AtlanDataDomain'
            title: GetAtlanDomainsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.Status:
            type: string
            title: Status
            enum:
                - STATUS_UNSPECIFIED
                - STATUS_OK
                - STATUS_FAILED
        synq.extensions.atlan.workflows.v1.CommandResult:
            type: object
            properties:
                command:
                    type: string
                status:
                    $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.Status'
                logs:
                    type: array
                    items:
                        type: string
                error:
                    type: string
                    nullable: true
            title: CommandResult
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.ConnectionMapping:
            type: object
            properties:
                atlanConnectionQualifiedName:
                    type: string
                synqDataPlatformIdentifier:
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformIdentifier'
            title: ConnectionMapping
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.DomainMapping:
            type: object
            properties:
                atlanDomainQualifiedName:
                    type: string
                synqDomainId:
                    type: string
                    format: uuid
            title: DomainMapping
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.DomainMappingToggle:
            type: object
            properties:
                atlanDomainQualifiedName:
                    type: string
            title: DomainMappingToggle
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.FetchRunsRequest:
            type: object
            properties:
                from:
                    type: integer
                    format: int32
                limit:
                    exclusiveMinimum: 0
                    type: integer
                    maximum: 100
                    format: int32
            title: FetchRunsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.FetchRunsResponse:
            type: object
            properties:
                workflowRuns:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.WorkflowRun'
            title: FetchRunsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetConnectionMappingsRequest:
            type: object
            title: GetConnectionMappingsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetConnectionMappingsResponse:
            type: object
            properties:
                mappings:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.ConnectionMapping'
            title: GetConnectionMappingsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetDomainMappingsRequest:
            type: object
            title: GetDomainMappingsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetDomainMappingsResponse:
            type: object
            properties:
                mappings:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.DomainMapping'
            title: GetDomainMappingsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetMappingTogglesRequest:
            type: object
            title: GetMappingTogglesRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetMappingTogglesResponse:
            type: object
            properties:
                toggles:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.MappingToggle'
            title: GetMappingTogglesResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetProductMappingsRequest:
            type: object
            title: GetProductMappingsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.GetProductMappingsResponse:
            type: object
            properties:
                mappings:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.ProductMapping'
            title: GetProductMappingsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.Log:
            type: object
            properties:
                message:
                    type: string
                timestamp:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                status:
                    $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.Status'
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                        title: value
            title: Log
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.Log.MetadataEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
            title: MetadataEntry
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.MappingToggle:
            type: object
            oneOf:
                - properties:
                    domainMapping:
                        title: domain_mapping
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.DomainMappingToggle'
                  title: domain_mapping
                  required:
                    - domainMapping
                - properties:
                    productMapping:
                        title: product_mapping
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.ProductMappingToggle'
                  title: product_mapping
                  required:
                    - productMapping
                - properties:
                    productOwnerMapping:
                        title: product_owner_mapping
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.ProductOwnerMappingToggle'
                  title: product_owner_mapping
                  required:
                    - productOwnerMapping
            properties:
                enabled:
                    type: boolean
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.ProductMapping:
            type: object
            properties:
                atlanDataproductQualifiedName:
                    type: string
                synqDataproductIdentifier:
                    $ref: '#/components/schemas/synq.entities.v1.DataproductIdentifier'
            title: ProductMapping
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.ProductMappingToggle:
            type: object
            properties:
                atlanProductQualifiedName:
                    type: string
            title: ProductMappingToggle
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.ProductOwnerMappingToggle:
            type: object
            properties:
                atlanProductQualifiedName:
                    type: string
            title: ProductOwnerMappingToggle
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.RemoveConnectionMappingsRequest:
            type: object
            properties:
                atlanConnectionQualifiedNames:
                    type: array
                    items:
                        type: string
            title: RemoveConnectionMappingsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.RemoveConnectionMappingsResponse:
            type: object
            title: RemoveConnectionMappingsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SetConnectionMappingsRequest:
            type: object
            properties:
                mappings:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.ConnectionMapping'
            title: SetConnectionMappingsRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SetConnectionMappingsResponse:
            type: object
            title: SetConnectionMappingsResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SetMappingTogglesRequest:
            type: object
            properties:
                toggles:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.MappingToggle'
            title: SetMappingTogglesRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SetMappingTogglesResponse:
            type: object
            title: SetMappingTogglesResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SynchronizeRequest:
            type: object
            title: SynchronizeRequest
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.SynchronizeResponse:
            type: object
            properties:
                workflowRun:
                    $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.WorkflowRun'
                hasErrors:
                    type: boolean
            title: SynchronizeResponse
            additionalProperties: false
        synq.extensions.atlan.workflows.v1.WorkflowRun:
            type: object
            properties:
                workspace:
                    type: string
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.CommandResult'
                    description: 'Deprecated: Use Log instead.'
                    deprecated: true
                status:
                    $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.Status'
                startedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                endedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                logs:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.Log'
            title: WorkflowRun
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.ActivateRequest:
            type: object
            properties:
                activate:
                    type: boolean
            title: ActivateRequest
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.ActivateResponse:
            type: object
            title: ActivateResponse
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.GetRequest:
            type: object
            title: GetRequest
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.GetResponse:
            type: object
            properties:
                integration:
                    $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.Integration'
            title: GetResponse
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.Integration:
            type: object
            properties:
                workspace:
                    type: string
                id:
                    type: string
                    description: ID for the integration. Unique for a workspace.
                atlanTenantUrl:
                    type: string
                atlanApiToken:
                    type: string
                isValid:
                    type: boolean
                    description: Whether the integration is valid or not. Set on `upsert` as a result of connection to atlan api.
                isActive:
                    type: boolean
                    description: Whether the integration is active or not. Only valid integrations can be activated.
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                deletedAt:
                    nullable: true
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: Integration
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.RemoveRequest:
            type: object
            title: RemoveRequest
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.RemoveResponse:
            type: object
            title: RemoveResponse
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.UpsertRequest:
            type: object
            properties:
                atlanTenantUrl:
                    type: string
                atlanApiToken:
                    type: string
            title: UpsertRequest
            additionalProperties: false
        synq.extensions.atlan.integrations.v1.UpsertResponse:
            type: object
            properties:
                integration:
                    $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.Integration'
            title: UpsertResponse
            additionalProperties: false
        synq.issues.issues.v1.LifecycleState:
            type: string
            title: LifecycleState
            enum:
                - LIFECYCLE_STATE_UNSPECIFIED
                - LIFECYCLE_STATE_UNTRIAGED
                - LIFECYCLE_STATE_CLOSED
                - LIFECYCLE_STATE_ONGOING_RESOLVED
                - LIFECYCLE_STATE_ONGOING_DECLARED
                - LIFECYCLE_STATE_AUTOTRIAGE_QUEUED
                - LIFECYCLE_STATE_AUTOTRIAGE_ACTION_SUGGESTED
            description: |-
                Issue LifecycleState represents the current state of the issue in its life-cycle.
                 The state is exclusively determined as per the priority which is in the order of the fields below.
        synq.issues.issues.v1.Severity:
            type: string
            title: Severity
            enum:
                - SEVERITY_UNSPECIFIED
                - SEVERITY_INFO
                - SEVERITY_WARN
                - SEVERITY_ERROR
                - SEVERITY_FATAL
        synq.issues.issues.v1.State:
            type: string
            title: State
            enum:
                - STATE_UNSPECIFIED
                - STATE_OPEN
                - STATE_CLOSED
            description: Whether the issue is open / close.
        synq.issues.issues.v1.Status:
            type: string
            title: Status
            enum:
                - STATUS_UNSPECIFIED
                - STATUS_INVESTIGATING
                - STATUS_EXPECTED
                - STATUS_FIXED
                - STATUS_NO_ACTION_NEEDED
            description: Progress status of the issue.
        synq.issues.v2.ListIssuesRequest.Field:
            type: string
            title: Field
            enum:
                - FIELD_UPDATED_AT
                - FIELD_STARTED_AT
        synq.issues.v2.ListIssuesRequest.Sort.Order:
            type: string
            title: Order
            enum:
                - ORDER_ASC
                - ORDER_DESC
        synq.platforms.v1.DataPlatformType:
            type: string
            title: DataPlatformType
            enum:
                - DATA_PLATFORM_TYPE_UNSPECIFIED
                - DATA_PLATFORM_TYPE_BIGQUERY
                - DATA_PLATFORM_TYPE_LOOKER
                - DATA_PLATFORM_TYPE_DBT
                - DATA_PLATFORM_TYPE_DBT_CLOUD
                - DATA_PLATFORM_TYPE_DBT_SELF_HOSTED
                - DATA_PLATFORM_TYPE_SNOWFLAKE
                - DATA_PLATFORM_TYPE_GCP
                - DATA_PLATFORM_TYPE_GIT
                - DATA_PLATFORM_TYPE_REDSHIFT
                - DATA_PLATFORM_TYPE_TABLEAU
                - DATA_PLATFORM_TYPE_AIRFLOW
                - DATA_PLATFORM_TYPE_CLICKHOUSE
                - DATA_PLATFORM_TYPE_POSTGRES
                - DATA_PLATFORM_TYPE_MYSQL
                - DATA_PLATFORM_TYPE_DATABRICKS
                - DATA_PLATFORM_TYPE_SQLMESH
                - DATA_PLATFORM_TYPE_DUCKDB
                - DATA_PLATFORM_TYPE_TRINO
                - DATA_PLATFORM_TYPE_SYNQ
        synq.issues.actor.v1.Actor:
            type: object
            oneOf:
                - properties:
                    email:
                        title: email
                        $ref: '#/components/schemas/synq.issues.actor.v1.EmailUser'
                  title: email
                  required:
                    - email
                - properties:
                    pagerduty:
                        title: pagerduty
                        $ref: '#/components/schemas/synq.issues.actor.v1.PagerdutyUser'
                  title: pagerduty
                  required:
                    - pagerduty
                - properties:
                    slack:
                        title: slack
                        $ref: '#/components/schemas/synq.issues.actor.v1.SlackUser'
                  title: slack
                  required:
                    - slack
            properties:
                name:
                    type: string
                    minLength: 1
            required:
                - name
            additionalProperties: false
        synq.issues.actor.v1.EmailUser:
            type: object
            properties:
                userEmail:
                    type: string
                    minLength: 1
                    format: email
            title: EmailUser
            required:
                - userEmail
            additionalProperties: false
        synq.issues.actor.v1.PagerdutyUser:
            type: object
            properties:
                userId:
                    type: string
                    minLength: 1
            title: PagerdutyUser
            required:
                - userId
            additionalProperties: false
        synq.issues.actor.v1.SlackUser:
            type: object
            properties:
                userId:
                    type: string
                    minLength: 1
            title: SlackUser
            required:
                - userId
            additionalProperties: false
        synq.issues.issues.v1.Issue:
            type: object
            oneOf:
                - properties:
                    monitor:
                        title: monitor
                        $ref: '#/components/schemas/synq.issues.issues.v1.MonitorTriggerDetails'
                  title: monitor
                  required:
                    - monitor
            properties:
                id:
                    type: string
                    description: ID of the issue.
                name:
                    type: string
                    description: Name of the issue.
                message:
                    type: string
                    description: Original message of the issue.
                currentMessage:
                    type: string
                    description: Current message on the issue.
                lastErrorMessage:
                    type: string
                    description: Last error message on the issue.
                severity:
                    description: Severity of the issue.
                    $ref: '#/components/schemas/synq.issues.issues.v1.Severity'
                triggerEntity:
                    description: Entity that triggered this issue.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                affectedEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Entities affected by this issue.
                state:
                    description: State of the issue.
                    $ref: '#/components/schemas/synq.issues.issues.v1.State'
                startedAt:
                    description: Started at timestamp.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                updatedAt:
                    description: Updated at timestamp.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                endedAt:
                    description: Ended at timestamp.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                latestStatus:
                    description: Latest status of the issue.
                    $ref: '#/components/schemas/synq.issues.issues.v1.Status'
                latestStatusActor:
                    description: Actor that last updated the status of the issue.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.issues.issues.v1.IssueComment'
                    description: List of comments posted on the issue.
                lifecycleState:
                    description: Lifecycle state of the issue.
                    $ref: '#/components/schemas/synq.issues.issues.v1.LifecycleState'
            additionalProperties: false
        synq.issues.issues.v1.IssueComment:
            type: object
            properties:
                id:
                    type: string
                message:
                    type: string
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                actor:
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
            title: IssueComment
            additionalProperties: false
        synq.issues.issues.v1.MonitorTriggerDetails:
            type: object
            properties:
                monitor:
                    $ref: '#/components/schemas/synq.entities.v1.MonitorIdentifier'
                metricId:
                    type: string
                metricVersion:
                    type: integer
                    format: int32
                segmentValue:
                    type: string
                    nullable: true
            title: MonitorTriggerDetails
            additionalProperties: false
        synq.issues.v2.BatchGetIssuesRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                    description: IDs of the issues to get.
            title: BatchGetIssuesRequest
            additionalProperties: false
        synq.issues.v2.BatchGetIssuesResponse:
            type: object
            properties:
                issues:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.issues.issues.v1.Issue'
                    description: Issues.
            title: BatchGetIssuesResponse
            additionalProperties: false
        synq.issues.v2.BatchGetIssuesResponse.IssuesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.issues.issues.v1.Issue'
            title: IssuesEntry
            additionalProperties: false
        synq.issues.v2.ListIssuesRequest:
            type: object
            properties:
                entitiesQuery:
                    description: Filter by entities.
                    nullable: true
                    $ref: '#/components/schemas/synq.queries.v1.Query'
                time:
                    description: Time range filter
                    nullable: true
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Time'
                sort:
                    description: Sort options
                    nullable: true
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Sort'
                pagination:
                    description: Pagination
                    nullable: true
                    $ref: '#/components/schemas/synq.v1.Pagination'
                lifecycleState:
                    description: Filter by issue lifecycle state
                    nullable: true
                    $ref: '#/components/schemas/synq.issues.issues.v1.LifecycleState'
            title: ListIssuesRequest
            additionalProperties: false
        synq.issues.v2.ListIssuesRequest.Sort:
            type: object
            properties:
                sortBy:
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Field'
                order:
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Sort.Order'
            title: Sort
            additionalProperties: false
        synq.issues.v2.ListIssuesRequest.Time:
            type: object
            properties:
                field:
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Field'
                from:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                to:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: Time
            additionalProperties: false
        synq.issues.v2.ListIssuesResponse:
            type: object
            properties:
                pageInfo:
                    description: Paging information.
                    $ref: '#/components/schemas/synq.v1.PageInfo'
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
            title: ListIssuesResponse
            required:
                - pageInfo
            additionalProperties: false
        synq.issues.v2.MarkExpectedRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as expected.
                actor:
                    description: Actor marking the issue as expected.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as expected. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkExpectedRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.v2.MarkExpectedResponse:
            type: object
            title: MarkExpectedResponse
            additionalProperties: false
        synq.issues.v2.MarkFixedRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as fixed.
                actor:
                    description: Actor marking the issue as fixed.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as fixed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkFixedRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.v2.MarkFixedResponse:
            type: object
            title: MarkFixedResponse
            additionalProperties: false
        synq.issues.v2.MarkInvestigatingRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as investigating.
                actor:
                    description: Actor marking the issue as investigating.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as investigating. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkInvestigatingRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.v2.MarkInvestigatingResponse:
            type: object
            title: MarkInvestigatingResponse
            additionalProperties: false
        synq.issues.v2.MarkNoActionNeededRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as no action needed.
                actor:
                    description: Actor marking the issue as no action needed.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as no action needed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkNoActionNeededRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.v2.MarkNoActionNeededResponse:
            type: object
            title: MarkNoActionNeededResponse
            additionalProperties: false
        synq.issues.v2.PostCommentRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to post a comment on.
                actor:
                    description: Actor posting the comment.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                comment:
                    type: string
                    description: Comment to post.
                time:
                    description: Time at which the comment was posted. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: PostCommentRequest
            required:
                - issueId
                - actor
                - comment
                - time
            additionalProperties: false
        synq.issues.v2.PostCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
                    format: uuid
            title: PostCommentResponse
            required:
                - commentId
            additionalProperties: false
        synq.queries.v1.InDataPlatform:
            type: object
            properties:
                identifier:
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformIdentifier'
            title: InDataPlatform
            additionalProperties: false
            description: Resolves to all entities that belong to the given data platform.
        synq.queries.v1.InDataproduct:
            type: object
            properties:
                identifier:
                    $ref: '#/components/schemas/synq.entities.v1.DataproductIdentifier'
            title: InDataproduct
            additionalProperties: false
            description: Resolves to all the assets that belong to the given data product.
        synq.queries.v1.InDomain:
            type: object
            properties:
                domainId:
                    type: string
                    format: uuid
            title: InDomain
            additionalProperties: false
            description: Resolves to all entities in the given data domain.
        synq.queries.v1.Query:
            type: object
            properties:
                parts:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.queries.v1.Query.QueryPart'
                operand:
                    description: Defaults to AND if not specified.
                    $ref: '#/components/schemas/synq.queries.v1.QueryOperand'
            title: Query
            additionalProperties: false
            description: |-
                Query is a structured query that can be used to find entities in the system.
                 It consists of multiple parts, each representing a different aspect of the query.
                 The parts can be combined using the operand to form a complete query.
        synq.queries.v1.Query.QueryPart:
            type: object
            oneOf:
                - properties:
                    identifierList:
                        title: identifier_list
                        $ref: '#/components/schemas/synq.queries.v1.IdentifierList'
                  title: identifier_list
                  required:
                    - identifierList
                - properties:
                    inDataPlatform:
                        title: in_data_platform
                        $ref: '#/components/schemas/synq.queries.v1.InDataPlatform'
                  title: in_data_platform
                  required:
                    - inDataPlatform
                - properties:
                    inDataproduct:
                        title: in_dataproduct
                        $ref: '#/components/schemas/synq.queries.v1.InDataproduct'
                  title: in_dataproduct
                  required:
                    - inDataproduct
                - properties:
                    inDomain:
                        title: in_domain
                        $ref: '#/components/schemas/synq.queries.v1.InDomain'
                  title: in_domain
                  required:
                    - inDomain
                - properties:
                    inFolder:
                        title: in_folder
                        $ref: '#/components/schemas/synq.queries.v1.InFolder'
                  title: in_folder
                  required:
                    - inFolder
                - properties:
                    query:
                        title: query
                        $ref: '#/components/schemas/synq.queries.v1.Query'
                  title: query
                  required:
                    - query
                - properties:
                    unsupported:
                        title: unsupported
                        $ref: '#/components/schemas/synq.queries.v1.Unsupported'
                  title: unsupported
                  required:
                    - unsupported
                - properties:
                    withAnnotation:
                        title: with_annotation
                        $ref: '#/components/schemas/synq.queries.v1.WithAnnotation'
                  title: with_annotation
                  required:
                    - withAnnotation
                - properties:
                    withDataPlatformType:
                        title: with_data_platform_type
                        $ref: '#/components/schemas/synq.queries.v1.WithDataPlatformType'
                  title: with_data_platform_type
                  required:
                    - withDataPlatformType
                - properties:
                    withNameSearch:
                        title: with_name_search
                        $ref: '#/components/schemas/synq.queries.v1.WithNameSearch'
                  title: with_name_search
                  required:
                    - withNameSearch
                - properties:
                    withType:
                        title: with_type
                        $ref: '#/components/schemas/synq.queries.v1.WithType'
                  title: with_type
                  required:
                    - withType
            additionalProperties: false
        synq.queries.v1.WithDataPlatformType:
            type: object
            properties:
                types:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.platforms.v1.DataPlatformType'
            title: WithDataPlatformType
            additionalProperties: false
        synq.v1.PageInfo:
            type: object
            properties:
                totalCount:
                    type: integer
                    format: int32
                    description: Total number of items matching the request.
                count:
                    type: integer
                    format: int32
                    description: Number of items returned in this response.
                lastId:
                    type: string
                    description: ID of the last item in the response. Used for pagination.
            title: PageInfo
            additionalProperties: false
        synq.v1.Pagination:
            type: object
            properties:
                cursor:
                    type: string
                    description: Cursor for the next page of results. If not provided, returns the first page.
                    nullable: true
                pageSize:
                    type: integer
                    format: int32
                    description: Maximum number of items to return in a single page. If not provided, defaults vary per API.
                    nullable: true
            title: Pagination
            additionalProperties: false
        synq.issues.issues.v1.BatchGetIssuesRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                    description: IDs of the issues to get.
            title: BatchGetIssuesRequest
            additionalProperties: false
        synq.issues.issues.v1.BatchGetIssuesResponse:
            type: object
            properties:
                issues:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.issues.issues.v1.Issue'
                    description: Issues.
            title: BatchGetIssuesResponse
            additionalProperties: false
        synq.issues.issues.v1.BatchGetIssuesResponse.IssuesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.issues.issues.v1.Issue'
            title: IssuesEntry
            additionalProperties: false
        synq.issues.issues.v1.Limit:
            type: object
            properties:
                max:
                    type: integer
                    format: int32
                afterId:
                    type: string
            title: Limit
            additionalProperties: false
        synq.issues.issues.v1.ListIssuesRequest:
            type: object
            properties:
                from:
                    description: Filter by time range.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                to:
                    description: Filter by time range.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                limit:
                    $ref: '#/components/schemas/synq.issues.issues.v1.Limit'
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Filter by entities.
            title: ListIssuesRequest
            required:
                - from
                - to
            additionalProperties: false
        synq.issues.issues.v1.ListIssuesResponse:
            type: object
            properties:
                issues:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.issues.issues.v1.Issue'
                    description: Issues.
            title: ListIssuesResponse
            additionalProperties: false
        synq.issues.issues.v1.MarkExpectedRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as expected.
                actor:
                    description: Actor marking the issue as expected.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as expected. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkExpectedRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.issues.v1.MarkExpectedResponse:
            type: object
            title: MarkExpectedResponse
            additionalProperties: false
        synq.issues.issues.v1.MarkFixedRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as fixed.
                actor:
                    description: Actor marking the issue as fixed.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as fixed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkFixedRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.issues.v1.MarkFixedResponse:
            type: object
            title: MarkFixedResponse
            additionalProperties: false
        synq.issues.issues.v1.MarkInvestigatingRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as investigating.
                actor:
                    description: Actor marking the issue as investigating.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as investigating. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkInvestigatingRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.issues.v1.MarkInvestigatingResponse:
            type: object
            title: MarkInvestigatingResponse
            additionalProperties: false
        synq.issues.issues.v1.MarkNoActionNeededRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to mark as no action needed.
                actor:
                    description: Actor marking the issue as no action needed.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                time:
                    description: Time at which the issue was marked as no action needed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                requireNoExistingStatus:
                    type: boolean
                    description: Ignore status change if the issue already has a status.
            title: MarkNoActionNeededRequest
            required:
                - issueId
                - actor
                - time
            additionalProperties: false
        synq.issues.issues.v1.MarkNoActionNeededResponse:
            type: object
            title: MarkNoActionNeededResponse
            additionalProperties: false
        synq.issues.issues.v1.PostCommentRequest:
            type: object
            properties:
                issueId:
                    type: string
                    format: uuid
                    description: ID of the issue to post a comment on.
                actor:
                    description: Actor posting the comment.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                comment:
                    type: string
                    description: Comment to post.
                time:
                    description: Time at which the comment was posted. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: PostCommentRequest
            required:
                - issueId
                - actor
                - comment
                - time
            additionalProperties: false
        synq.issues.issues.v1.PostCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
                    format: uuid
            title: PostCommentResponse
            required:
                - commentId
            additionalProperties: false
        synq.git.commits.v1.CommitDiff:
            type: object
            properties:
                commitSha:
                    type: string
                fileDiffs:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.git.commits.v1.FileDiff'
            title: CommitDiff
            additionalProperties: false
        synq.git.commits.v1.FileDiff:
            type: object
            properties:
                filePath:
                    type: string
                diff:
                    type: string
            title: FileDiff
            additionalProperties: false
        synq.git.commits.v1.GetDiffByChangeIdRequest:
            type: object
            properties:
                changeId:
                    type: string
                limitToFiles:
                    type: array
                    items:
                        type: string
            title: GetDiffByChangeIdRequest
            required:
                - changeId
            additionalProperties: false
        synq.git.commits.v1.GetDiffByChangeIdResponse:
            type: object
            properties:
                commitDiff:
                    nullable: true
                    $ref: '#/components/schemas/synq.git.commits.v1.CommitDiff'
            title: GetDiffByChangeIdResponse
            additionalProperties: false
        synq.git.commits.v1.GetDiffByCommitRequest:
            type: object
            properties:
                commitSha:
                    type: string
                    maxLength: 40
                    minLength: 40
                limitToFiles:
                    type: array
                    items:
                        type: string
            title: GetDiffByCommitRequest
            required:
                - commitSha
            additionalProperties: false
        synq.git.commits.v1.GetDiffByCommitResponse:
            type: object
            properties:
                commitDiff:
                    nullable: true
                    $ref: '#/components/schemas/synq.git.commits.v1.CommitDiff'
            title: GetDiffByCommitResponse
            additionalProperties: false
        synq.incidents.v1.Incident.State:
            type: string
            title: State
            enum:
                - STATE_UNSPECIFIED
                - STATE_OPEN
                - STATE_CLOSED
                - STATE_CANCELLED
        synq.incidents.v1.ListIncidentsRequest.Field:
            type: string
            title: Field
            enum:
                - FIELD_UNSPECIFIED
                - FIELD_CREATED_AT
                - FIELD_UPDATED_AT
        synq.incidents.v1.ListIncidentsRequest.Sort.Order:
            type: string
            title: Order
            enum:
                - ORDER_UNSPECIFIED
                - ORDER_ASC
                - ORDER_DESC
        synq.incidents.v1.AddIssuesToIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to add issues to
                actor:
                    description: Actor adding the issues
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the issues were added. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of issues to add to the incident
            title: AddIssuesToIncidentRequest
            required:
                - incidentId
                - actor
                - at
                - issueIds
            additionalProperties: false
        synq.incidents.v1.AddIssuesToIncidentResponse:
            type: object
            title: AddIssuesToIncidentResponse
            additionalProperties: false
        synq.incidents.v1.BatchGetIncidentsRequest:
            type: object
            properties:
                incidentIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of the incidents to get
            title: BatchGetIncidentsRequest
            required:
                - incidentIds
            additionalProperties: false
        synq.incidents.v1.BatchGetIncidentsResponse:
            type: object
            properties:
                incidents:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.incidents.v1.Incident'
                    description: Incidents keyed by their IDs
            title: BatchGetIncidentsResponse
            additionalProperties: false
        synq.incidents.v1.BatchGetIncidentsResponse.IncidentsEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.incidents.v1.Incident'
            title: IncidentsEntry
            additionalProperties: false
        synq.incidents.v1.CancelIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to cancel
                actor:
                    description: Actor cancelling the incident
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incident was cancelled. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: CancelIncidentRequest
            required:
                - incidentId
                - actor
                - at
            additionalProperties: false
        synq.incidents.v1.CancelIncidentResponse:
            type: object
            title: CancelIncidentResponse
            additionalProperties: false
        synq.incidents.v1.CloseIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to close
                actor:
                    description: Actor closing the incident
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incident was closed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: CloseIncidentRequest
            required:
                - incidentId
                - actor
                - at
            additionalProperties: false
        synq.incidents.v1.CloseIncidentResponse:
            type: object
            title: CloseIncidentResponse
            additionalProperties: false
        synq.incidents.v1.CreateIncidentRequest:
            type: object
            properties:
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of issues to add to the incident
                name:
                    type: string
                    description: Name of the incident
                actor:
                    description: Actor creating the incident
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incident was created. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                groupIds:
                    type: array
                    items:
                        type: string
                    description: Optional group IDs associated with the incident
            title: CreateIncidentRequest
            required:
                - name
                - actor
                - at
            additionalProperties: false
        synq.incidents.v1.CreateIncidentResponse:
            type: object
            properties:
                incident:
                    $ref: '#/components/schemas/synq.incidents.v1.Incident'
            title: CreateIncidentResponse
            additionalProperties: false
        synq.incidents.v1.Incident:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the incident.
                index:
                    type: integer
                    format: int32
                    description: Index of the incident (for human-readable references).
                name:
                    type: string
                    description: Name of the incident.
                issueIds:
                    type: array
                    items:
                        type: string
                    description: IDs of issues associated with this incident.
                createdBy:
                    description: Actor who created the incident.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                createdAt:
                    description: Time at which the incident was created.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                updatedBy:
                    description: Actor who last updated the incident.
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                updatedAt:
                    description: Time at which the incident was last updated.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                state:
                    description: State of the incident.
                    $ref: '#/components/schemas/synq.incidents.v1.Incident.State'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.incidents.v1.IncidentComment'
                    description: List of comments posted on the incident.
            title: Incident
            additionalProperties: false
        synq.incidents.v1.IncidentComment:
            type: object
            properties:
                id:
                    type: string
                message:
                    type: string
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                actor:
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
            title: IncidentComment
            additionalProperties: false
        synq.incidents.v1.ListIncidentsRequest:
            type: object
            properties:
                time:
                    description: Time range filter
                    nullable: true
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Time'
                sort:
                    description: Sort options
                    nullable: true
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Sort'
                pagination:
                    description: Pagination
                    nullable: true
                    $ref: '#/components/schemas/synq.v1.Pagination'
                states:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.incidents.v1.Incident.State'
                    description: Filter by states
                affectedEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Filter by affected entities
            title: ListIncidentsRequest
            additionalProperties: false
        synq.incidents.v1.ListIncidentsRequest.Sort:
            type: object
            properties:
                sortBy:
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Field'
                order:
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Sort.Order'
            title: Sort
            additionalProperties: false
        synq.incidents.v1.ListIncidentsRequest.Time:
            type: object
            properties:
                field:
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Field'
                from:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                to:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: Time
            additionalProperties: false
        synq.incidents.v1.ListIncidentsResponse:
            type: object
            properties:
                incidents:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.incidents.v1.Incident'
            title: ListIncidentsResponse
            additionalProperties: false
        synq.incidents.v1.MergeIncidentsRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the primary incident to merge into
                actor:
                    description: Actor performing the merge
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incidents were merged. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                otherIncidentIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of other incidents to merge into the primary incident
            title: MergeIncidentsRequest
            required:
                - incidentId
                - actor
                - at
                - otherIncidentIds
            additionalProperties: false
        synq.incidents.v1.MergeIncidentsResponse:
            type: object
            title: MergeIncidentsResponse
            additionalProperties: false
        synq.incidents.v1.RemoveIssuesFromIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to remove issues from
                actor:
                    description: Actor removing the issues
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the issues were removed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                issueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of issues to remove from the incident
            title: RemoveIssuesFromIncidentRequest
            required:
                - incidentId
                - actor
                - at
                - issueIds
            additionalProperties: false
        synq.incidents.v1.RemoveIssuesFromIncidentResponse:
            type: object
            title: RemoveIssuesFromIncidentResponse
            additionalProperties: false
        synq.incidents.v1.RenameIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to rename
                actor:
                    description: Actor renaming the incident
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incident was renamed. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                name:
                    type: string
                    description: New name for the incident
            title: RenameIncidentRequest
            required:
                - incidentId
                - actor
                - at
                - name
            additionalProperties: false
        synq.incidents.v1.RenameIncidentResponse:
            type: object
            title: RenameIncidentResponse
            additionalProperties: false
        synq.incidents.v1.SplitIncidentRequest:
            type: object
            properties:
                incidentId:
                    type: string
                    format: uuid
                    description: ID of the incident to split
                actor:
                    description: Actor performing the split
                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                at:
                    description: Time at which the incident was split. Defaults to the current time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                splitIssueIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    minItems: 1
                    description: IDs of issues to move to the new incident
                splitIncidentName:
                    type: string
                    description: Name for the new incident
            title: SplitIncidentRequest
            required:
                - incidentId
                - actor
                - at
                - splitIssueIds
                - splitIncidentName
            additionalProperties: false
        synq.incidents.v1.SplitIncidentResponse:
            type: object
            properties:
                incident:
                    $ref: '#/components/schemas/synq.incidents.v1.Incident'
                splitIncident:
                    $ref: '#/components/schemas/synq.incidents.v1.Incident'
            title: SplitIncidentResponse
            additionalProperties: false
        synq.entities.coordinates.v1.BatchDatabaseCoordinatesRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Identifiers of the entities to get.
            title: BatchDatabaseCoordinatesRequest
            additionalProperties: false
            description: BatchGetEntitiesRequest is the request message for the BatchGetEntities method.
        synq.entities.coordinates.v1.BatchDatabaseCoordinatesResponse:
            type: object
            properties:
                coordinates:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.coordinates.v1.DatabaseCoordinates'
                    description: The entities that were retrieved.
            title: BatchDatabaseCoordinatesResponse
            additionalProperties: false
            description: BatchGetEntitiesResponse is the response message for the BatchGetEntities method.
        synq.entities.coordinates.v1.DatabaseCoordinates:
            type: object
            properties:
                identifiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                synqPaths:
                    type: array
                    items:
                        type: string
                dialectName:
                    type: string
                dialect:
                    $ref: '#/components/schemas/synq.entities.v1.SqlDialect'
                dataPlatform:
                    nullable: true
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformIdentifier'
                dataPlatformType:
                    $ref: '#/components/schemas/synq.platforms.v1.DataPlatformType'
                connectionId:
                    type: string
                    nullable: true
                instanceName:
                    type: string
                databaseName:
                    type: string
                schemaName:
                    type: string
                objectName:
                    type: string
                sqlFqn:
                    type: string
            title: DatabaseCoordinates
            required:
                - identifiers
            additionalProperties: false
        synq.entities.v1.EntityChangeType:
            type: string
            title: EntityChangeType
            enum:
                - ENTITY_CHANGE_TYPE_UNSPECIFIED
                - ENTITY_CHANGE_TYPE_GIT_COMMIT
                - ENTITY_CHANGE_TYPE_SQL_DEFINITION_CHANGE
                - ENTITY_CHANGE_TYPE_SCHEMA_CHANGE
        synq.entities.changes.v1.BatchChangeRequest:
            type: object
            properties:
                changeIds:
                    type: array
                    items:
                        type: string
                    description: List of change IDs to retrieve. Each ID uniquely identifies a specific change in the system.
            title: BatchChangeRequest
            additionalProperties: false
            description: BatchChangeRequest contains the parameters needed to retrieve multiple changes by their IDs.
        synq.entities.changes.v1.BatchChangeResponse:
            type: object
            properties:
                changes:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.entities.v1.EntityChange'
                    description: |-
                        Map of change ID to EntityChange. Only includes changes that were found and accessible.
                         Missing changes are omitted from the response.
            title: BatchChangeResponse
            additionalProperties: false
            description: BatchChangeResponse contains the requested changes mapped by their IDs.
        synq.entities.changes.v1.BatchChangeResponse.ChangesEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.entities.v1.EntityChange'
            title: ChangesEntry
            additionalProperties: false
        synq.entities.changes.v1.ListRequest:
            type: object
            properties:
                id:
                    description: |-
                        Identifier of the entity to get changes for.
                         This can be a path identifier that uniquely identifies the entity in the system.
                    deprecated: true
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: |-
                        Identifiers of entities for which to get changes.
                         Change is returned when it affects id.
                changeBefore:
                    description: Return changes older than or on `before`. Defaults to `now()`.
                    nullable: true
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                changeAfter:
                    description: Return changes newer than until. Defaults to before - 7days,
                    nullable: true
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                limitToChangeTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.EntityChangeType'
                    description: Return only changes of specific types.
            title: ListRequest
            additionalProperties: false
            description: ListRequest contains the parameters needed to retrieve changes for a specific entity.
        synq.entities.changes.v1.ListResponse:
            type: object
            properties:
                changes:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.EntityChange'
                    description: |-
                        List of recent changes to the state of entity. Changes are returned from newest to oldest.
                         Each change includes:
                         - The type of change (git commit, schema change, SQL definition change)
                         - When the change occurred
                         - Details specific to the type of change
                         - Metadata about who made the change
            title: ListResponse
            additionalProperties: false
            description: ListResponse contains the list of changes made to the requested entity.
        synq.entities.v1.EntityChange:
            type: object
            oneOf:
                - properties:
                    gitCommit:
                        title: git_commit
                        $ref: '#/components/schemas/synq.entities.v1.GitCommitChange'
                  title: git_commit
                  required:
                    - gitCommit
                - properties:
                    schema:
                        title: schema
                        $ref: '#/components/schemas/synq.entities.v1.SchemaChange'
                  title: schema
                  required:
                    - schema
                - properties:
                    sqlDefinition:
                        title: sql_definition
                        $ref: '#/components/schemas/synq.entities.v1.SqlDefinitionChange'
                  title: sql_definition
                  required:
                    - sqlDefinition
            properties:
                entityId:
                    description: Identifier of the entity on which the change was detected when available.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                entitySynqPath:
                    type: string
                    description: SYNQ path representing entity on which the change was detected when available,
                    nullable: true
                affectedEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Identifiers of entities directly affected by this change.
                affectedEntitiesSynqPaths:
                    type: array
                    items:
                        type: string
                    description: SYNQ paths of entities directly affected by this change.
                changeId:
                    type: string
                    description: Internal identifier of the change event.
                changeDetectedAt:
                    description: Timestamp when the change was detected by SYNQ.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            required:
                - entityId
                - changeId
                - changeDetectedAt
            additionalProperties: false
            description: |-
                EntityChange represents a change detected in an entity within the system.
                 It tracks modifications to entities like Git commits, SQL definitions, and database schemas.
        synq.entities.v1.GitCommitChange:
            type: object
            properties:
                hash:
                    type: string
                    description: Hash of the Git commit.
                author:
                    description: Author information of the Git commit.
                    $ref: '#/components/schemas/synq.entities.v1.GitCommitChange.Signature'
                committer:
                    description: Committer information of the Git commit.
                    $ref: '#/components/schemas/synq.entities.v1.GitCommitChange.Signature'
                message:
                    type: string
                    description: Commit message describing the changes.
                shortMessage:
                    type: string
                    description: First non-empty line of the message
                fileChangeStats:
                    type: object
                    additionalProperties:
                        title: value
                        $ref: '#/components/schemas/synq.entities.v1.GitCommitChange.ChangeStats'
                    description: Statistics about changes made to each modified file.
                changedFilePaths:
                    type: array
                    items:
                        type: string
                    description: All changed file paths in the Commit
                relatedChangedFilePaths:
                    type: array
                    items:
                        type: string
                    description: |-
                        File paths which are related with the entities for which changes are requested.
                         When no paths are present it means that is impossible to determine most relevant file changes.
                         This field will be empty when retrieving change by id.
                branchName:
                    type: string
                    description: Name of the branch associated with the commit, if any.
                    nullable: true
                cloneUrl:
                    type: string
                    description: URL of the Git repository where the commit was made.
                webCommitUrl:
                    type: string
                    description: URL to e.g. Github which opens the Commit
                    nullable: true
            title: GitCommitChange
            additionalProperties: false
            description: GitCommitChange represents a change detected in a Git repository.
        synq.entities.v1.GitCommitChange.ChangeStats:
            type: object
            properties:
                additions:
                    type: integer
                    format: int32
                    description: Number of lines added to the file.
                deletions:
                    type: integer
                    format: int32
                    description: Number of lines removed from the file.
            title: ChangeStats
            additionalProperties: false
            description: ChangeStats contains statistics about changes made to a single file.
        synq.entities.v1.GitCommitChange.FileChangeStatsEntry:
            type: object
            properties:
                key:
                    type: string
                value:
                    $ref: '#/components/schemas/synq.entities.v1.GitCommitChange.ChangeStats'
            title: FileChangeStatsEntry
            additionalProperties: false
        synq.entities.v1.GitCommitChange.Signature:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the Git user.
                email:
                    type: string
                    description: Email address of the Git user.
                createdAt:
                    description: Timestamp when the signature was created.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
            title: Signature
            additionalProperties: false
            description: Signature contains information about the Git user who made the changes.
        synq.entities.v1.SchemaChange:
            type: object
            properties:
                columnChanges:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnChange'
                    description: List of changes made to individual columns in the schema.
            title: SchemaChange
            additionalProperties: false
            description: SchemaChange represents a change detected in a database schema.
        synq.entities.v1.SchemaColumnChange:
            type: object
            oneOf:
                - properties:
                    columnAddition:
                        title: column_addition
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnChange.ColumnAdditionChangeType'
                  title: column_addition
                  required:
                    - columnAddition
                - properties:
                    columnNativeType:
                        title: column_native_type
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnChange.ColumnNativeTypeChangeType'
                  title: column_native_type
                  required:
                    - columnNativeType
                - properties:
                    columnRemoval:
                        title: column_removal
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnChange.ColumnRemovalChangeType'
                  title: column_removal
                  required:
                    - columnRemoval
            additionalProperties: false
            description: SchemaColumnChange represents a specific change to a column in the schema.
        synq.entities.v1.SchemaColumnChange.ColumnAdditionChangeType:
            type: object
            properties:
                columnId:
                    type: string
                    description: Identifier of the new column.
                nativeType:
                    type: string
                    description: Data type of the new column.
                ordinalPosition:
                    type: integer
                    format: int32
                    description: Position where the column was added in the schema.
            title: ColumnAdditionChangeType
            additionalProperties: false
            description: ColumnAdditionChangeType represents the addition of a new column to the schema.
        synq.entities.v1.SchemaColumnChange.ColumnNativeTypeChangeType:
            type: object
            properties:
                columnId:
                    type: string
                    description: Identifier of the modified column.
                previousNativeType:
                    type: string
                    description: Previous data type of the column.
                currentNativeType:
                    type: string
                    description: New data type of the column.
            title: ColumnNativeTypeChangeType
            additionalProperties: false
            description: ColumnNativeTypeChangeType represents a change in a column's data type.
        synq.entities.v1.SchemaColumnChange.ColumnRemovalChangeType:
            type: object
            properties:
                columnId:
                    type: string
                    description: Identifier of the removed column.
                nativeType:
                    type: string
                    description: Native data type of the removed column.
                ordinalPosition:
                    type: integer
                    format: int32
                    description: Original position of the column in the schema.
            title: ColumnRemovalChangeType
            additionalProperties: false
            description: ColumnRemovalChangeType represents the removal of a column from the schema.
        synq.entities.v1.SqlDefinitionChange:
            type: object
            properties:
                previousSql:
                    type: string
                    description: Previous version of the SQL definition.
                previousSqlStateAt:
                    description: Timestamp when the previous SQL state was valid.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                currentSql:
                    type: string
                    description: Current version of the SQL definition.
                currentSqlStateAt:
                    description: Timestamp when the current SQL state became valid.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                sqlDiff:
                    type: string
                    description: Diff showing the changes between previous and current SQL.
            title: SqlDefinitionChange
            additionalProperties: false
            description: SqlDefinitionChange represents a change detected in a SQL definition.
        synq.entities.v1.CodeType:
            type: string
            title: CodeType
            enum:
                - CODE_TYPE_UNSPECIFIED
                - CODE_TYPE_SQL
                - CODE_TYPE_PYTHON
                - CODE_TYPE_JSON
                - CODE_TYPE_YAML
                - CODE_TYPE_DBT
                - CODE_TYPE_SQLMESH
                - CODE_TYPE_LOOKML
            description: CodeType enum represents different types of code that can be processed in the Synq platform
        synq.entities.code.v1.ListCodeRequest:
            type: object
            properties:
                id:
                    description: |-
                        Identifier of the entity to retrieve code for.
                         This can be any entity type that contains code artifacts.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: ListCodeRequest
            required:
                - id
            additionalProperties: false
            description: ListCodeRequest is the request message for the ListCode method.
        synq.entities.code.v1.ListCodeResponse:
            type: object
            properties:
                codes:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Code'
                    description: |-
                        List of code artifacts associated with the requested entity.
                         Each code artifact includes its content, type, and metadata about when it was captured.
            title: ListCodeResponse
            additionalProperties: false
            description: ListCodeResponse is the response message for the ListCode method.
        synq.entities.v1.Code:
            type: object
            properties:
                definerIdentifier:
                    description: |-
                        Identifier of the entity that defines or owns this code piece. This could be a dbt model,
                         SQLMesh model, or any other entity type that contains code.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                definerSynqPath:
                    type: string
                    description: Synq Path to the entity. This is a unique path that can be used to access the entity in the Synq's UI.
                stateAt:
                    description: |-
                        Timestamp indicating when this specific version of the code was captured or last modified.
                         This helps track the evolution of code over time.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                codeType:
                    description: |-
                        Type of code being stored, which determines how SYNQ will process and analyze it.
                         This can be SQL, Python, dbt, SQLMesh, or other supported code types.
                    $ref: '#/components/schemas/synq.entities.v1.CodeType'
                sqlDialect:
                    description: |-
                        SQL dialect used in the code, if the code_type is SQL. This helps SYNQ understand
                         the specific SQL syntax and features being used.
                    nullable: true
                    $ref: '#/components/schemas/synq.entities.v1.SqlDialect'
                content:
                    type: string
                    maxLength: 1000000
                    description: |-
                        The actual content of the code. This can be SQL queries, Python scripts,
                         dbt models, or any other supported code format.
                codeName:
                    type: string
                    description: Optional human-readable name for the code piece that can be used for display purposes. Might also indicate name of the file.
                    nullable: true
                filePath:
                    type: string
                    description: Optional path in e.g. git or project directory which is source of the code
                    nullable: true
            title: Code
            required:
                - definerIdentifier
                - stateAt
            additionalProperties: false
            description: |-
                Code represents a piece of code or configuration that can be processed by SYNQ.
                 This message is used to store and manage various types of code artifacts, such as SQL queries,
                 Python scripts, dbt models, and other code configurations. Each code piece is associated with
                 a specific entity that defines or owns it, and includes metadata about its type and state.
        synq.entities.status.v1.BatchGetIncidentsRequest:
            type: object
            properties:
                requests:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.GetIncidentsRequest'
            title: BatchGetIncidentsRequest
            required:
                - requests
            additionalProperties: false
            description: BatchGetIncidentsRequest is the request message for the BatchGetIssues method.
        synq.entities.status.v1.BatchGetIncidentsResponse:
            type: object
            properties:
                responses:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.GetIncidentsResponse'
            title: BatchGetIncidentsResponse
            required:
                - responses
            additionalProperties: false
            description: BatchGetIncidentsResponse is the response message for the BatchGetIssues method.
        synq.entities.status.v1.EntityIncident:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the incident.
                url:
                    type: string
                    description: URL of the incident.
                name:
                    type: string
                    description: Name of the incident give by the user.
                createdBy:
                    type: string
                    description: Information about author of the incident.
                createdAt:
                    description: Time when the incident was created.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                updatedBy:
                    type: string
                    description: Information about the user who last updated the incident.
                updatedAt:
                    description: Time when the incident was last updated.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                isResolved:
                    type: boolean
                    description: Indicates if all issues inside the incident are resolved.
                    deprecated: true
            title: EntityIncident
            additionalProperties: false
        synq.entities.status.v1.GetIncidentsRequest:
            type: object
            properties:
                id:
                    description: Identifier of the entity to get incidents for.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                fetchUpstreamIncidents:
                    type: boolean
                    description: Retrieve incidents of upstream entities.
            title: GetIncidentsRequest
            required:
                - id
            additionalProperties: false
            description: GetIncidentsRequest is the request message for the GetEntity method.
        synq.entities.status.v1.GetIncidentsResponse:
            type: object
            properties:
                id:
                    description: Identifier of the entity.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                entityOpenIncidents:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.EntityIncident'
                    description: Open incident associated with the entity requested.
                upstreamOpenIncidents:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.EntityIncident'
                    description: Open incidents associated with the upstream entities if requested.
            title: GetIncidentsResponse
            required:
                - id
            additionalProperties: false
            description: GetIncidentsResponse is the response message for the GetEntity method.
        synq.entities.status.v1.IssueStatus:
            type: string
            title: IssueStatus
            enum:
                - ISSUE_STATUS_UNSPECIFIED
                - ISSUE_STATUS_OK
                - ISSUE_STATUS_WARN
                - ISSUE_STATUS_ERROR
                - ISSUE_STATUS_CRITICAL
        synq.entities.status.v1.BatchGetIssuesStatusRequest:
            type: object
            properties:
                requests:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.GetIssuesStatusRequest'
            title: BatchGetIssuesStatusRequest
            required:
                - requests
            additionalProperties: false
            description: BatchGetIssuesStatusRequest is the request message for the BatchGetIssues method.
        synq.entities.status.v1.BatchGetIssuesStatusResponse:
            type: object
            properties:
                responses:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.status.v1.GetIssuesStatusResponse'
            title: BatchGetIssuesStatusResponse
            required:
                - responses
            additionalProperties: false
            description: BatchGetIssuesStatusResponse is the response message for the BatchGetIssues method.
        synq.entities.status.v1.GetIssuesStatusRequest:
            type: object
            properties:
                id:
                    description: Identifier of the entity to get status for.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                fetchUpstreamStatus:
                    type: boolean
                    description: Retrieve status of upstream entities.
            title: GetIssuesStatusRequest
            required:
                - id
            additionalProperties: false
            description: GetIssuesStatusRequest is the request message for the GetEntity method.
        synq.entities.status.v1.GetIssuesStatusResponse:
            type: object
            properties:
                id:
                    description: Identifier of the entity.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                entityIssuesStatus:
                    description: Status of the entity requested.
                    $ref: '#/components/schemas/synq.entities.status.v1.IssueStatus'
                entityIssuesSummary:
                    $ref: '#/components/schemas/synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary'
                upstreamIssuesStatus:
                    description: Optionally, the status of all upstream entities.
                    $ref: '#/components/schemas/synq.entities.status.v1.IssueStatus'
                upstreamIssuesSummary:
                    $ref: '#/components/schemas/synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary'
            title: GetIssuesStatusResponse
            required:
                - id
            additionalProperties: false
            description: GetIssuesStatusResponse is the response message for the GetEntity method.
        synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary:
            type: object
            properties:
                totalCount:
                    type: integer
                    format: int32
                    description: Number of issues for the entity.
                warnCount:
                    type: integer
                    format: int32
                    description: Number of issues for the entity with status 'warn'.
                errorCount:
                    type: integer
                    format: int32
                    description: Number of issues for the entity with status 'error'.
                criticalCount:
                    type: integer
                    format: int32
                    description: Number of issues for the entity with status 'critical'.
            title: IssuesSummary
            additionalProperties: false
        synq.entities.schemas.v1.GetSchemaRequest:
            type: object
            properties:
                id:
                    description: Identifier of the entity to get.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: GetSchemaRequest
            required:
                - id
            additionalProperties: false
            description: GetEntityRequest is the request message for the GetEntity method.
        synq.entities.schemas.v1.GetSchemaResponse:
            type: object
            properties:
                schema:
                    description: Schema of the entity, might be empty
                    nullable: true
                    $ref: '#/components/schemas/synq.entities.v1.Schema'
            title: GetSchemaResponse
            additionalProperties: false
            description: GetEntityResponse is the response message for the GetEntity method.
        synq.entities.v1.Schema:
            type: object
            properties:
                workspace:
                    type: string
                    description: Immutable workspace identifier that this entity belongs to.
                id:
                    description: Unique identifier for this entity.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                stateAt:
                    description: Time when the schema was defined.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                description:
                    type: string
                    description: Optional description of the schema, might differ from the entity itself
                    nullable: true
                columns:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumn'
                    maxItems: 1000
                    description: Columns of the schema
            title: Schema
            required:
                - id
            additionalProperties: false
            description: Schema represents a schema of a table like entity
        synq.entities.v1.SchemaColumn:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    description: Human readable name of the column as present in dbt or data warehouse.
                nativeType:
                    type: string
                    maxLength: 255
                    description: Native data type of the column as present in data warehouse.
                description:
                    type: string
                    maxLength: 1000
                    description: Description of the column
                ordinalPosition:
                    type: integer
                    maximum: 1001
                    format: int32
                    description: Ordinal position of the column in the table, starting from 1
                isStruct:
                    type: boolean
                    description: Indicates that the column type could be used as a struct/json in a data warehouse
                isRepeated:
                    type: boolean
                    description: Indicates that the column is a repeated field in a data warehouse (e.g. array)
                fields:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnField'
                    maxItems: 100
                    description: Fields inside of the struct/record like column
            title: SchemaColumn
            required:
                - name
            additionalProperties: false
        synq.entities.v1.SchemaColumnField:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    description: Human readable name of the column as present in dbt or data warehouse.
                nativeType:
                    type: string
                    maxLength: 255
                    description: Native data type of the column as present in data warehouse.
                description:
                    type: string
                    maxLength: 1000
                    description: Description of the column
                ordinalPosition:
                    type: integer
                    maximum: 1001
                    format: int32
                    description: Ordinal position of the column in the struct, starting from 1
                isStruct:
                    type: boolean
                    description: Indicates that the field type could be used as a struct/json in a data warehouse
                isRepeated:
                    type: boolean
                    description: Indicates that the field is a repeated field in a data warehouse (e.g. array)
                fields:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.SchemaColumnField'
                    maxItems: 100
                    description: Fields inside of the struct/record like field
            title: SchemaColumnField
            required:
                - name
            additionalProperties: false
        synq.entities.lineage.v1.CllState:
            type: string
            title: CllState
            enum:
                - CLL_STATE_UNSPECIFIED
                - CLL_STATE_PARSE_FAILED
                - CLL_STATE_EXTRACTION_FAILED
                - CLL_STATE_RESOLUTION_FAILED
                - CLL_STATE_OK
        synq.entities.lineage.v1.LineageDirection:
            type: string
            title: LineageDirection
            enum:
                - LINEAGE_DIRECTION_UNSPECIFIED
                - LINEAGE_DIRECTION_UPSTREAM
                - LINEAGE_DIRECTION_DOWNSTREAM
                - LINEAGE_DIRECTION_UPSTREAM_DOWNSTREAM
            description: Direction of the lineage to query.
        synq.entities.lineage.v1.NodePosition:
            type: string
            title: NodePosition
            enum:
                - NODE_POSITION_UNSPECIFIED
                - NODE_POSITION_START_NODE
                - NODE_POSITION_UPSTREAM
                - NODE_POSITION_DOWNSTREAM
        synq.entities.lineage.v1.CllDetails:
            type: object
            properties:
                columns:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.lineage.v1.Column'
                    description: Column details for CLL.
                cllState:
                    description: State of the CLL parse. UNSPECIFIED if CLL was not requested.
                    $ref: '#/components/schemas/synq.entities.lineage.v1.CllState'
                cllMessages:
                    type: array
                    items:
                        type: string
                    description: |-
                        Messages related to CLL.
                         e.g. Description of parse errors, etc.
            title: CllDetails
            additionalProperties: false
        synq.entities.lineage.v1.Column:
            type: object
            properties:
                columnId:
                    type: string
                    description: ID string for the column. This is the parsed column name.
                name:
                    type: string
                    description: Original column name as fetched from the table.
                    nullable: true
                nativeType:
                    type: string
                    description: Column type as fetched from the table.
                    nullable: true
            title: Column
            additionalProperties: false
            description: Column in a table-like asset (used in CLL mode).
        synq.entities.lineage.v1.ColumnDependency:
            type: object
            properties:
                sourceNodeIdx:
                    type: integer
                    description: Index of source node in the lineage nodes list.
                sourceNodeColumnId:
                    type: string
                targetNodeIdx:
                    type: integer
                    description: Index of target node in the lineage nodes list.
                targetNodeColumnId:
                    type: string
            title: ColumnDependency
            additionalProperties: false
            description: |-
                Indicates data flow between columns.
                 Source columns are used to compute value of target columns.
        synq.entities.lineage.v1.EntitiesStartPoint:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: EntitiesStartPoint
            additionalProperties: false
        synq.entities.lineage.v1.EntityColumnsStartPoint:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                columnNames:
                    type: array
                    items:
                        type: string
            title: EntityColumnsStartPoint
            additionalProperties: false
        synq.entities.lineage.v1.GetLineageRequest:
            type: object
            properties:
                lineageDirection:
                    $ref: '#/components/schemas/synq.entities.lineage.v1.LineageDirection'
                startPoint:
                    $ref: '#/components/schemas/synq.entities.lineage.v1.GetLineageStartPoint'
                maxDepth:
                    type: integer
                    format: int32
                    nullable: true
            title: GetLineageRequest
            additionalProperties: false
        synq.entities.lineage.v1.GetLineageResponse:
            type: object
            properties:
                lineage:
                    $ref: '#/components/schemas/synq.entities.lineage.v1.Lineage'
            title: GetLineageResponse
            additionalProperties: false
        synq.entities.lineage.v1.GetLineageStartPoint:
            type: object
            oneOf:
                - properties:
                    entities:
                        title: entities
                        $ref: '#/components/schemas/synq.entities.lineage.v1.EntitiesStartPoint'
                  title: entities
                  required:
                    - entities
                - properties:
                    entityColumns:
                        title: entity_columns
                        $ref: '#/components/schemas/synq.entities.lineage.v1.EntityColumnsStartPoint'
                  title: entity_columns
                  required:
                    - entityColumns
            additionalProperties: false
            description: Possible starting points to get lineage from.
        synq.entities.lineage.v1.Lineage:
            type: object
            properties:
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.lineage.v1.LineageNode'
                    description: Nodes in the lineage with their identities and columns.
                nodeDependencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.lineage.v1.NodeDependency'
                    description: |-
                        All edges in the lineage between nodes.
                         This can be parsed to create a graph of all the nodes.
                isCll:
                    type: boolean
                    description: Indicates whether the lineage was filtered for column level lineage (CLL).
                columnDependencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.lineage.v1.ColumnDependency'
                    description: Dependencies between columns. Populated only for CLL.
            title: Lineage
            additionalProperties: false
            description: Lineage defines the lineage of table-like entities.
        synq.entities.lineage.v1.LineageNode:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: |-
                        All entities which have the same identity as this node. Must be at least one item.
                         These are sorted by closeness to the type of the start point entities.
                         e.g. if requesting lineage of a DBT source, first entity should be from DBT, similarly when viewing table it will be other tables.
                position:
                    description: Position of the node in the lineage.
                    $ref: '#/components/schemas/synq.entities.lineage.v1.NodePosition'
                cllDetails:
                    description: Populated only for Column Level Lineage (CLL).
                    nullable: true
                    $ref: '#/components/schemas/synq.entities.lineage.v1.CllDetails'
            title: LineageNode
            additionalProperties: false
            description: Node in a lineage graph representing one or more entities (e.g. database table).
        synq.entities.lineage.v1.NodeDependency:
            type: object
            properties:
                sourceNodeIdx:
                    type: integer
                    description: Index of source node in the lineage nodes list.
                targetNodeIdx:
                    type: integer
                    description: Index of target node in the lineage nodes list.
            title: NodeDependency
            additionalProperties: false
            description: |-
                Indicates data flow between nodes.
                 Source nodes are used to compute value of target nodes.
        synq.entities.executions.v1.ExecutionStatus:
            type: string
            title: ExecutionStatus
            enum:
                - EXECUTION_STATUS_UNSPECIFIED
                - EXECUTION_STATUS_OK
                - EXECUTION_STATUS_WARN
                - EXECUTION_STATUS_ERROR
                - EXECUTION_STATUS_CRITICAL
        synq.entities.executions.v1.Execution:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                status:
                    $ref: '#/components/schemas/synq.entities.executions.v1.ExecutionStatus'
                message:
                    type: string
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                startedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                finishedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
                extras:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.executions.v1.ExecutionExtra'
            title: Execution
            required:
                - id
                - status
                - createdAt
            additionalProperties: false
        synq.entities.executions.v1.ExecutionExtra:
            type: object
            oneOf:
                - properties:
                    executedSql:
                        type: string
                        title: executed_sql
                  title: executed_sql
                  required:
                    - executedSql
            additionalProperties: false
        synq.entities.executions.v1.LogEntry:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                message:
                    type: string
                createdAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                startedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                finishedAt:
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
            title: LogEntry
            required:
                - id
                - createdAt
            additionalProperties: false
        synq.entities.executions.v1.UpsertExecutionRequest:
            type: object
            properties:
                execution:
                    $ref: '#/components/schemas/synq.entities.executions.v1.Execution'
            title: UpsertExecutionRequest
            required:
                - execution
            additionalProperties: false
        synq.entities.executions.v1.UpsertExecutionResponse:
            type: object
            title: UpsertExecutionResponse
            additionalProperties: false
        synq.entities.executions.v1.UpsertLogEntryRequest:
            type: object
            properties:
                logEntry:
                    $ref: '#/components/schemas/synq.entities.executions.v1.LogEntry'
            title: UpsertLogEntryRequest
            required:
                - logEntry
            additionalProperties: false
        synq.entities.executions.v1.UpsertLogEntryResponse:
            type: object
            title: UpsertLogEntryResponse
            additionalProperties: false
        synq.entities.custom.v1.DeleteEntityRequest:
            type: object
            properties:
                id:
                    description: Identifier of the entity to delete.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: DeleteEntityRequest
            required:
                - id
            additionalProperties: false
            description: DeleteEntityRequest is the request message for the DeleteEntity method.
        synq.entities.custom.v1.DeleteEntityResponse:
            type: object
            title: DeleteEntityResponse
            additionalProperties: false
            description: DeleteEntityResponse is the response message for the DeleteEntity method.
        synq.entities.custom.v1.ListEntitiesRequest:
            type: object
            title: ListEntitiesRequest
            additionalProperties: false
        synq.entities.custom.v1.ListEntitiesResponse:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Entity'
            title: ListEntitiesResponse
            additionalProperties: false
        synq.entities.custom.v1.UpsertEntityRequest:
            type: object
            properties:
                entity:
                    description: The entity to create or update.
                    $ref: '#/components/schemas/synq.entities.v1.Entity'
            title: UpsertEntityRequest
            required:
                - entity
            additionalProperties: false
            description: UpsertEntityRequest is the request message for the UpsertEntity method.
        synq.entities.custom.v1.UpsertEntityResponse:
            type: object
            title: UpsertEntityResponse
            additionalProperties: false
            description: UpsertEntityResponse is the response message for the UpsertEntity method.
        synq.entities.v1.Entity:
            type: object
            properties:
                workspace:
                    type: string
                    description: Immutable workspace identifier that this entity belongs to.
                id:
                    description: Unique identifier for this entity.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                typeId:
                    type: integer
                    maximum: 1000
                    format: int32
                    description: Id of custom type or default type when 0
                name:
                    type: string
                    maxLength: 100
                    minLength: 1
                    description: Name of the entity that is displayed to the user.
                description:
                    type: string
                    maxLength: 10000
                    description: Description of the entity that is displayed in relevant contexts. Can contain Markdown.
                createdAt:
                    description: Timestamp when the entity was created.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                updatedAt:
                    description: Timestamp when the entity was last updated.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                deletedAt:
                    description: Timestamp when the entity was deleted. If this is set, the entity is considered deleted.
                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                synqPath:
                    type: string
                    description: Return only value. Synq Path to the entity. This is a unique path that can be used to access the entity in the Synq's UI.
                synqCatalogUrl:
                    type: string
                    description: Return only value. Synq URL to the entity. This is a unique URL that can be used to access the entity in the Synq's UI.
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Annotation'
                    maxItems: 20
                    description: Annotations attached to the entity. Annotations are key-value pairs that can be used to store metadata about the entity.
            title: Entity
            required:
                - id
                - name
            additionalProperties: false
            description: |-
                Entity is the base type for all entities in the system. Its always attached to a given
                 client workspace and can be uniquely identified by its id.
        synq.dataproducts.v1.Dataproduct.Priority:
            type: string
            title: Priority
            enum:
                - PRIORITY_UNSPECIFIED
                - PRIORITY_P3
                - PRIORITY_P2
                - PRIORITY_P1
        synq.entities.impact.v1.GetImpactRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: GetImpactRequest
            additionalProperties: false
        synq.entities.impact.v1.GetImpactResponse:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedEntityGroup'
                downstreamEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedEntityGroup'
                dataproducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedDataproduct'
                downstreamDataproducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedDataproduct'
                owners:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedOwner'
                downstreamOwners:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedOwner'
            title: GetImpactResponse
            additionalProperties: false
        synq.entities.impact.v1.ImpactedDataproduct:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.DataproductIdentifier'
                title:
                    type: string
                description:
                    type: string
                folder:
                    type: string
                priority:
                    $ref: '#/components/schemas/synq.dataproducts.v1.Dataproduct.Priority'
                impactedEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedEntityGroup'
            title: ImpactedDataproduct
            additionalProperties: false
        synq.entities.impact.v1.ImpactedEntityGroup:
            type: object
            properties:
                name:
                    type: string
                    nullable: true
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                synqPaths:
                    type: array
                    items:
                        type: string
            title: ImpactedEntityGroup
            additionalProperties: false
            description: Multiple Entities which form logical group, e.g. dbt Model and it's table
        synq.entities.impact.v1.ImpactedOwner:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/synq.entities.v1.OwnerIdentifier'
                title:
                    type: string
                impactedEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.impact.v1.ImpactedEntityGroup'
            title: ImpactedOwner
            additionalProperties: false
        synq.entities.v1.OwnerIdentifier:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: Owner id that identifies the Owner
            title: OwnerIdentifier
            required:
                - id
            additionalProperties: false
        synq.entities.entities.v1.BatchGetEntitiesRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Identifier'
                    description: Identifiers of the entities to get.
            title: BatchGetEntitiesRequest
            additionalProperties: false
            description: BatchGetEntitiesRequest is the request message for the BatchGetEntities method.
        synq.entities.entities.v1.BatchGetEntitiesResponse:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.Entity'
                    description: The entities that were retrieved.
            title: BatchGetEntitiesResponse
            additionalProperties: false
            description: BatchGetEntitiesResponse is the response message for the BatchGetEntities method.
        synq.entities.entities.v1.GetEntityRequest:
            type: object
            properties:
                id:
                    description: Identifier of the entity to get.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            title: GetEntityRequest
            required:
                - id
            additionalProperties: false
            description: GetEntityRequest is the request message for the GetEntity method.
        synq.entities.entities.v1.GetEntityResponse:
            type: object
            properties:
                entity:
                    description: The entity that was retrieved.
                    $ref: '#/components/schemas/synq.entities.v1.Entity'
            title: GetEntityResponse
            additionalProperties: false
            description: GetEntityResponse is the response message for the GetEntity method.
paths:
    /api/monitors/automated/v1/deployment-rule:
        get:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: GetDeployOverview
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.GetDeployOverview
            parameters:
                - name: deploymentRule.id
                  in: query
                  schema:
                    type: string
                    title: id
                    format: uuid
                - name: deploymentRule.title
                  in: query
                  schema:
                    type: string
                    title: title
                    maxLength: 100
                    minLength: 1
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: deploymentRule.queryConfig.query.parts.identifierList.identifiers.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: deploymentRule.queryConfig.query.parts.withNameSearch.searchQuery
                  in: query
                  schema:
                    type: string
                    title: search_query
                - name: deploymentRule.queryConfig.query.parts.withType.type.default
                  in: query
                  description: Default SYNQ types
                  schema:
                    title: default
                    description: Default SYNQ types
                    $ref: '#/components/schemas/synq.entities.v1.EntityType'
                - name: deploymentRule.queryConfig.query.parts.withType.type.custom
                  in: query
                  description: Custom types as defined through synq.entities.custom.v1.TypesService
                  schema:
                    type: integer
                    title: custom
                    format: int32
                    description: Custom types as defined through synq.entities.custom.v1.TypesService
                - name: deploymentRule.queryConfig.query.parts.withAnnotation.name
                  in: query
                  schema:
                    type: string
                    title: name
                - name: deploymentRule.queryConfig.query.parts.withAnnotation.acceptedValue
                  in: query
                  schema:
                    type: string
                    title: accepted_value
                    deprecated: true
                - name: deploymentRule.queryConfig.query.parts.withAnnotation.acceptedValues
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: accepted_values
                - name: deploymentRule.queryConfig.query.parts.inFolder.path
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: path
                - name: deploymentRule.queryConfig.query.parts.query.operand
                  in: query
                  schema:
                    title: operand
                    $ref: '#/components/schemas/synq.queries.v1.QueryOperand'
                - name: deploymentRule.queryConfig.query.parts.unsupported.queryJson
                  in: query
                  schema:
                    type: string
                    title: query_json
                - name: deploymentRule.queryConfig.severity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: severity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                - name: deploymentRule.queryConfig.sensitivity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: sensitivity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                - name: deploymentRule.queryConfig.metricIds
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    title: metric_ids
                    minItems: 1
                    uniqueItems: true
                - name: deploymentRule.queryConfig.keepDeletedMonitors
                  in: query
                  schema:
                    type: boolean
                    title: keep_deleted_monitors
                - name: deploymentRule.staticConfig.path
                  in: query
                  schema:
                    type: string
                    title: path
                - name: deploymentRule.staticConfig.severity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: severity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                - name: deploymentRule.staticConfig.sensitivity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: sensitivity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                - name: deploymentRule.staticConfig.metricIds
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    title: metric_ids
                    minItems: 1
                    uniqueItems: true
                - name: deploymentRule.exclusiveStaticConfig.path
                  in: query
                  schema:
                    type: string
                    title: path
                - name: deploymentRule.productConfig.productId
                  in: query
                  schema:
                    type: string
                    title: product_id
                - name: deploymentRule.productConfig.severity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: severity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Severity'
                - name: deploymentRule.productConfig.sensitivity
                  in: query
                  schema:
                    not:
                        enum:
                            - 0
                    title: sensitivity
                    $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.Sensitivity'
                - name: deploymentRule.productConfig.metricIds
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.MetricId'
                    title: metric_ids
                    minItems: 1
                    uniqueItems: true
                - name: deploymentRule.productConfig.keepDeletedMonitors
                  in: query
                  schema:
                    type: boolean
                    title: keep_deleted_monitors
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.GetDeployOverviewResponse'
    /api/monitors/automated/v1/deployment-rule/{id}/deleted:
        get:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: GetDeployDeleteOverview
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.GetDeployDeleteOverview
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: id
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.GetDeployDeleteOverviewResponse'
    /api/monitors/automated/v1/deployment-rule/{id}:
        delete:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: DeleteDeploymentRule
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.DeleteDeploymentRule
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: id
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.DeleteDeploymentRuleResponse'
    /api/monitors/automated/v1/deployment-rules:
        get:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: ListDeploymentRules
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.ListDeploymentRules
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ListDeploymentRulesResponse'
        post:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: UpsertDeploymentRule
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.UpsertDeploymentRule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.UpsertDeploymentRuleRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.UpsertDeploymentRuleResponse'
        patch:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: BatchUpdateDeploymentRuleTitle
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.BatchUpdateDeploymentRuleTitle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.BatchUpdateDeploymentRuleTitleRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.BatchUpdateDeploymentRuleTitleResponse'
    /api/monitors/automated/v1/deployment-rules/{asset_path}:
        get:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: ListDeploymentRulesForAsset
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.ListDeploymentRulesForAsset
            parameters:
                - name: asset_path
                  in: path
                  required: true
                  schema:
                    type: string
                    title: asset_path
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.ListDeploymentRulesForAssetResponse'
    /api/monitors/automated/v1/deployment-rules/batch:
        get:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: BatchGetDeploymentRules
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.BatchGetDeploymentRules
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: ids
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.BatchGetDeploymentRulesResponse'
    /api/monitors/automated/v1/deployment-rules/deployed:
        post:
            tags:
                - synq.monitors.automated_monitors.v1.DeploymentRulesService
            summary: DeployDeploymentRule
            operationId: synq.monitors.automated_monitors.v1.DeploymentRulesService.DeployDeploymentRule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.DeployDeploymentRuleRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.automated_monitors.v1.DeployDeploymentRuleResponse'
    /api/monitors/info/v1/{id}:
        get:
            tags:
                - synq.monitors.info.v1.MonitorInfoService
            summary: MonitorInfo
            operationId: synq.monitors.info.v1.MonitorInfoService.MonitorInfo
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    title: id
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.info.v1.MonitorInfoResponse'
    /api/monitors/history/v1/{monitor_path}:
        get:
            tags:
                - synq.monitors.history.v1.HistoryService
            summary: History
            operationId: synq.monitors.history.v1.HistoryService.History
            parameters:
                - name: monitor_path
                  in: path
                  description: 'Experimental: Will be replaced with identifier'
                  required: true
                  schema:
                    type: string
                    title: monitor_path
                    description: 'Experimental: Will be replaced with identifier'
                - name: metricsVersion
                  in: query
                  schema:
                    type: integer
                    title: metrics_version
                    format: int32
                - name: segments
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: segments
                - name: from.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: from.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.monitors.history.v1.HistoryResponse'
    /api/datachecks/sqltests/v1/batch:
        get:
            tags:
                - synq.datachecks.sqltests.v1.SqlTestsService
            summary: BatchGetSqlTests
            description: Get SqlTests by their IDs.
            operationId: synq.datachecks.sqltests.v1.SqlTestsService.BatchGetSqlTests
            parameters:
                - name: ids
                  in: query
                  description: IDs of the SqlTests to fetch.
                  schema:
                    type: array
                    items:
                        type: string
                    title: ids
                    description: IDs of the SqlTests to fetch.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchGetSqlTestsResponse'
        post:
            tags:
                - synq.datachecks.sqltests.v1.SqlTestsService
            summary: BatchUpsertSqlTests
            description: Upsert SqlTests based on a unique ID.
            operationId: synq.datachecks.sqltests.v1.SqlTestsService.BatchUpsertSqlTests
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchUpsertSqlTestsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchUpsertSqlTestsResponse'
        delete:
            tags:
                - synq.datachecks.sqltests.v1.SqlTestsService
            summary: BatchDeleteSqlTests
            description: Delete SqlTests by their IDs.
            operationId: synq.datachecks.sqltests.v1.SqlTestsService.BatchDeleteSqlTests
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchDeleteSqlTestsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.sqltests.v1.BatchDeleteSqlTestsResponse'
    /api/datachecks/sqltests/v1:
        get:
            tags:
                - synq.datachecks.sqltests.v1.SqlTestsService
            summary: ListSqlTests
            description: List SqlTests for given annotations.
            operationId: synq.datachecks.sqltests.v1.SqlTestsService.ListSqlTests
            parameters:
                - name: annotations.name
                  in: query
                  description: String key for the annotation.
                  required: true
                  schema:
                    type: string
                    title: name
                    maxLength: 100
                    minLength: 1
                    description: String key for the annotation.
                - name: annotations.values
                  in: query
                  description: Optional list of values that the annotation can carry.
                  schema:
                    type: array
                    items:
                        type: string
                        maxLength: 100
                        minLength: 1
                        maxItems: 20
                    title: values
                    maxItems: 20
                    description: Optional list of values that the annotation can carry.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.sqltests.v1.ListSqlTestsResponse'
    /api/datachecks/sqltests/v1/audit:
        get:
            tags:
                - synq.datachecks.sqltests.v1.SqlTestsService
            summary: GetSqlTestAudit
            description: Get SqlTest audit from a given execution ID in jwt token.
            operationId: synq.datachecks.sqltests.v1.SqlTestsService.GetSqlTestAudit
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.sqltests.v1.GetSqlTestAuditResponse'
    /api/datachecks/testsuggestions/v1:
        get:
            tags:
                - synq.datachecks.testsuggestions.v1.TestSuggestionsService
            summary: BatchGetTestSuggestionsForEntities
            operationId: synq.datachecks.testsuggestions.v1.TestSuggestionsService.BatchGetTestSuggestionsForEntities
            parameters:
                - name: identifiers.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: identifiers.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: identifiers.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: identifiers.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: identifiers.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: identifiers.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: identifiers.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: identifiers.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: identifiers.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: identifiers.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: identifiers.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: identifiers.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: identifiers.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: identifiers.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: identifiers.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: identifiers.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: identifiers.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: identifiers.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: identifiers.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: identifiers.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: identifiers.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: identifiers.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: identifiers.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: identifiers.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: identifiers.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: identifiers.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: identifiers.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: identifiers.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: identifiers.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: identifiers.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: identifiers.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: identifiers.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: identifiers.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: identifiers.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: identifiers.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: identifiers.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: identifiers.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: identifiers.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: identifiers.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: identifiers.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: identifiers.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: identifiers.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: identifiers.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: identifiers.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: identifiers.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: identifiers.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: identifiers.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: identifiers.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: identifiers.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: identifiers.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchGetTestSuggestionsForEntitiesResponse'
        post:
            tags:
                - synq.datachecks.testsuggestions.v1.TestSuggestionsService
            summary: BatchCreateTestSuggestions
            operationId: synq.datachecks.testsuggestions.v1.TestSuggestionsService.BatchCreateTestSuggestions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchCreateTestSuggestionsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchCreateTestSuggestionsResponse'
    /api/datachecks/testsuggestions/v1/accepted:
        patch:
            tags:
                - synq.datachecks.testsuggestions.v1.TestSuggestionsService
            summary: BatchAcceptTestSuggestions
            operationId: synq.datachecks.testsuggestions.v1.TestSuggestionsService.BatchAcceptTestSuggestions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchAcceptTestSuggestionsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchAcceptTestSuggestionsResponse'
    /api/datachecks/testsuggestions/v1/rejected:
        patch:
            tags:
                - synq.datachecks.testsuggestions.v1.TestSuggestionsService
            summary: BatchRejectTestSuggestions
            operationId: synq.datachecks.testsuggestions.v1.TestSuggestionsService.BatchRejectTestSuggestions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchRejectTestSuggestionsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.datachecks.testsuggestions.v1.BatchRejectTestSuggestionsResponse'
    /api/platforms/v1:
        post:
            tags:
                - synq.platforms.v1.PlatformsService
            summary: SetPlatformAuthentication
            operationId: synq.platforms.v1.PlatformsService.SetPlatformAuthentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.platforms.v1.SetPlatformAuthenticationRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.platforms.v1.SetPlatformAuthenticationResponse'
    /api/datawarehouse/v1/connection/{connection_id}/upload/{upload_id}/object-information:
        post:
            tags:
                - synq.ingest.dwh.v1.DwhService
            summary: IngestObjectInformation
            operationId: synq.ingest.dwh.v1.DwhService.IngestObjectInformation
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: connection_id
                - name: upload_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: upload_id
                    format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                stateAt:
                                    description: Time at which state was collected
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                objects:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.ingest.dwh.v1.ObjectInformation'
                                    title: objects
                            title: IngestObjectInformationRequest
                            required:
                                - stateAt
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.dwh.v1.IngestObjectInformationResponse'
    /api/datawarehouse/v1/connection/{connection_id}/upload/{upload_id}/sql-definitions:
        post:
            tags:
                - synq.ingest.dwh.v1.DwhService
            summary: IngestSqlDefinitions
            operationId: synq.ingest.dwh.v1.DwhService.IngestSqlDefinitions
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: connection_id
                - name: upload_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: upload_id
                    format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                stateAt:
                                    description: Time at which state was collected
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                sqlDefinitions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.ingest.dwh.v1.SqlDefinition'
                                    title: sql_definitions
                            title: IngestSqlDefinitionsRequest
                            required:
                                - stateAt
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.dwh.v1.IngestSqlDefinitionsResponse'
    /api/datawarehouse/v1/connection/{connection_id}/upload/{upload_id}/schemas:
        post:
            tags:
                - synq.ingest.dwh.v1.DwhService
            summary: IngestSchemas
            operationId: synq.ingest.dwh.v1.DwhService.IngestSchemas
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: connection_id
                - name: upload_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: upload_id
                    format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                stateAt:
                                    description: Time at which state was collected
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                schemas:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.ingest.dwh.v1.Schema'
                                    title: schemas
                            title: IngestSchemasRequest
                            required:
                                - stateAt
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.dwh.v1.IngestSchemasResponse'
    /api/datawarehouse/v1/connection/{connection_id}/upload/{upload_id}/object-metrics:
        post:
            tags:
                - synq.ingest.dwh.v1.DwhService
            summary: IngestObjectMetrics
            operationId: synq.ingest.dwh.v1.DwhService.IngestObjectMetrics
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: connection_id
                - name: upload_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: upload_id
                    format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                stateAt:
                                    description: Time at which state was collected
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                metrics:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.ingest.dwh.v1.ObjectMetrics'
                                    title: metrics
                            title: IngestObjectMetricsRequest
                            required:
                                - stateAt
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.dwh.v1.IngestObjectMetricsResponse'
    /api/datawarehouse/v1/connection/{connection_id}/upload/{upload_id}/task-results:
        post:
            tags:
                - synq.ingest.dwh.v1.DwhService
            summary: IngestTaskResults
            operationId: synq.ingest.dwh.v1.DwhService.IngestTaskResults
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: connection_id
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                taskId:
                                    type: string
                                    title: task_id
                                    format: uuid
                                stateAt:
                                    description: Time at which state was collected
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                taskData:
                                    $ref: '#/components/schemas/synq.agent.dwh.v1.AgentTaskData'
                            title: IngestTaskResultsRequest
                            required:
                                - taskId
                                - stateAt
                                - taskData
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.dwh.v1.IngestTaskResultsResponse'
    /api/ingest/cloudwatch/v1/{log_group}/{log_stream}:
        post:
            tags:
                - synq.ingest.cloudwatch.v1.CloudwatchService
            summary: IngestCloudwatchLogsData
            operationId: synq.ingest.cloudwatch.v1.CloudwatchService.IngestCloudwatchLogsData
            parameters:
                - name: log_group
                  in: path
                  required: true
                  schema:
                    type: string
                    title: log_group
                - name: log_stream
                  in: path
                  required: true
                  schema:
                    type: string
                    title: log_stream
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                owner:
                                    type: string
                                    title: owner
                                subscriptionFilters:
                                    type: array
                                    items:
                                        type: string
                                    title: subscription_filters
                                messageType:
                                    type: string
                                    title: message_type
                                logEvents:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.ingest.cloudwatch.v1.CloudwatchLogsLogEvent'
                                    title: log_events
                            title: IngestCloudwatchLogsDataRequest
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.cloudwatch.v1.IngestCloudwatchLogsDataResponse'
    /api/ingest/airflow/v1/{dag_id}/{task_id}/{run_id}/logs:
        post:
            tags:
                - synq.ingest.airflow.v1.AirflowLogsService
            summary: IngestLog
            operationId: synq.ingest.airflow.v1.AirflowLogsService.IngestLog
            parameters:
                - name: dag_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: dag_id
                - name: task_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: task_id
                - name: run_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: run_id
                - name: attempt
                  in: query
                  required: true
                  schema:
                    type: integer
                    title: attempt
                    format: int32
                - name: logTime.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: logTime.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                            title: log
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.airflow.v1.IngestLogResponse'
    /api/ingest/airflow/v1:
        post:
            tags:
                - synq.ingest.airflow.v1.AirflowLogsService
            summary: IngestDatahubAspects
            operationId: synq.ingest.airflow.v1.AirflowLogsService.IngestDatahubAspects
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/google.protobuf.Struct'
                            title: aspects
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.ingest.airflow.v1.IngestDatahubAspectsResponse'
    /api/triage/v1/{session_id}/conclusion:
        post:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: Conclude
            description: |-
                Concludes the triage investigation for one or more issues by providing a structured conclusion
                 and supporting evidence. This method is used by the LLM agent to finalize its investigation.
            operationId: synq.agent.sre.v1.TriageService.Conclude
            parameters:
                - name: session_id
                  in: path
                  description: Unique identifier of the triaging session, used to group related operations.
                  required: true
                  schema:
                    type: string
                    title: session_id
                    description: Unique identifier of the triaging session, used to group related operations.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                conclusion:
                                    description: |-
                                        IssueConclusion represents the final determination made by the LLM agent about an issue.
                                         Each conclusion type must be supported by appropriate evidence collected during investigation.
                                    $ref: '#/components/schemas/synq.agent.sre.v1.IssueConclusion'
                                evidence:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.agent.sre.v1.EvidenceItem'
                                    title: evidence
                                    description: Collection of evidence items supporting the conclusion. Evidences previously recorded should not be added here.
                            title: ConcludeRequest
                            required:
                                - conclusion
                            additionalProperties: false
                            description: Request to conclude the triage investigation for one or more issues.
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.ConcludeResponse'
    /api/triage/v1/{session_id}/evidence:
        post:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: RecordEvidence
            description: |-
                Records evidence collected during the triage investigation. This method allows the LLM agent
                 to incrementally add evidence as it discovers information during the investigation process.
            operationId: synq.agent.sre.v1.TriageService.RecordEvidence
            parameters:
                - name: session_id
                  in: path
                  description: Unique identifier of the triaging session, used to group related operations.
                  required: true
                  schema:
                    type: string
                    title: session_id
                    description: Unique identifier of the triaging session, used to group related operations.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                evidence:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/synq.agent.sre.v1.EvidenceItem'
                                    title: evidence
                                    minItems: 1
                                    description: |-
                                        Collection of structured evidence items collected during the investigation.
                                         Must contain at least one evidence item.
                            title: RecordEvidenceRequest
                            additionalProperties: false
                            description: Request to record evidence collected during the triage investigation.
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.RecordEvidenceResponse'
    /api/triage/v1/conclusions:
        get:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: BatchLatestConclusions
            description: |-
                Retrieves the latest triage state for one or more issues. This method is used by the LLM agent
                 to retrieve the current state of the issues it is working on.
            operationId: synq.agent.sre.v1.TriageService.BatchLatestConclusions
            parameters:
                - name: issueIds
                  in: query
                  description: List of issue IDs for which latest conclusion should be returned.
                  schema:
                    type: array
                    items:
                        type: string
                    title: issue_ids
                    description: List of issue IDs for which latest conclusion should be returned.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.BatchLatestConclusionsResponse'
    /api/triage/v1/states:
        get:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: BatchTriageState
            description: |-
                Retrieves the triage state for one or more issues. This method is used by the LLM agent
                 to retrieve the current state of the issues it is working on.
            operationId: synq.agent.sre.v1.TriageService.BatchTriageState
            parameters:
                - name: issueIds
                  in: query
                  description: List of issue IDs for which triage status should be returned.
                  schema:
                    type: array
                    items:
                        type: string
                    title: issue_ids
                    description: List of issue IDs for which triage status should be returned.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.BatchTriageStateResponse'
    /api/triage/v1/statuses:
        get:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: ListTriageState
            description: |-
                Retrieves the triage state for one or more issues. This method is used by the LLM agent
                 to retrieve the current state of the issues it is working on.
            operationId: synq.agent.sre.v1.TriageService.ListTriageState
            parameters:
                - name: statuses
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.agent.sre.v1.IssueTriageStatus'
                    title: statuses
                    minItems: 1
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.ListTriageStateResponse'
    /api/triage/v1/in-progress:
        patch:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: MarkAsInProgress
            description: Marks an issue as in progress.  This method is used by the LLM agent to indicate that it has started working on an issue.
            operationId: synq.agent.sre.v1.TriageService.MarkAsInProgress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.agent.sre.v1.MarkAsInProgressRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.MarkAsInProgressResponse'
    /api/triage/v1/failed:
        patch:
            tags:
                - synq.agent.sre.v1.TriageService
            summary: MarkFailed
            description: Marks an issue as failed triaging.  This method is used by the LLM agent to indicate that it was unable to triage.
            operationId: synq.agent.sre.v1.TriageService.MarkFailed
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.agent.sre.v1.MarkFailedRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.agent.sre.v1.MarkFailedResponse'
    /api/extensions/atlan/provider/v1/connections:
        get:
            tags:
                - synq.extensions.atlan.provider.v1.AtlanProviderService
            summary: GetAtlanConnections
            operationId: synq.extensions.atlan.provider.v1.AtlanProviderService.GetAtlanConnections
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.GetAtlanConnectionsResponse'
    /api/extensions/atlan/provider/v1/data-products:
        get:
            tags:
                - synq.extensions.atlan.provider.v1.AtlanProviderService
            summary: GetAtlanDataProducts
            operationId: synq.extensions.atlan.provider.v1.AtlanProviderService.GetAtlanDataProducts
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.GetAtlanDataProductsResponse'
    /api/extensions/atlan/provider/v1/domains:
        get:
            tags:
                - synq.extensions.atlan.provider.v1.AtlanProviderService
            summary: GetAtlanDomains
            operationId: synq.extensions.atlan.provider.v1.AtlanProviderService.GetAtlanDomains
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.provider.v1.GetAtlanDomainsResponse'
    /api/extensions/atlan/workflows/v1/connection-mappings:
        get:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: GetConnectionMappings
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.GetConnectionMappings
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.GetConnectionMappingsResponse'
        post:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: SetConnectionMappings
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.SetConnectionMappings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.SetConnectionMappingsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.SetConnectionMappingsResponse'
        delete:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: RemoveConnectionMappings
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.RemoveConnectionMappings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.RemoveConnectionMappingsRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.RemoveConnectionMappingsResponse'
    /api/extensions/atlan/workflows/v1/product-mappings:
        get:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: GetProductMappings
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.GetProductMappings
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.GetProductMappingsResponse'
    /api/extensions/atlan/workflows/v1/domain-mappings:
        get:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: GetDomainMappings
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.GetDomainMappings
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.GetDomainMappingsResponse'
    /api/extensions/atlan/workflows/v1/synchronize:
        post:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: Synchronize
            description: Run a synchronization job for the integration.
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.Synchronize
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.SynchronizeResponse'
    /api/extensions/atlan/workflows/v1/runs:
        get:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: FetchRuns
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.FetchRuns
            parameters:
                - name: from
                  in: query
                  schema:
                    type: integer
                    title: from
                    format: int32
                - name: limit
                  in: query
                  schema:
                    exclusiveMinimum: 0
                    type: integer
                    title: limit
                    maximum: 100
                    format: int32
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.FetchRunsResponse'
    /api/extensions/atlan/workflows/v1/mappings/toggle:
        get:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: GetMappingToggles
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.GetMappingToggles
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.GetMappingTogglesResponse'
        post:
            tags:
                - synq.extensions.atlan.workflows.v1.AtlanWorkflowService
            summary: SetMappingToggles
            operationId: synq.extensions.atlan.workflows.v1.AtlanWorkflowService.SetMappingToggles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.SetMappingTogglesRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.workflows.v1.SetMappingTogglesResponse'
    /api/extensions/atlan/integrations/v1:
        get:
            tags:
                - synq.extensions.atlan.integrations.v1.AtlanIntegrationService
            summary: Get
            operationId: synq.extensions.atlan.integrations.v1.AtlanIntegrationService.Get
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.GetResponse'
        post:
            tags:
                - synq.extensions.atlan.integrations.v1.AtlanIntegrationService
            summary: Upsert
            description: Upserts an integration and validates it by checking if the provided API URL and token are valid.
            operationId: synq.extensions.atlan.integrations.v1.AtlanIntegrationService.Upsert
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.UpsertRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.UpsertResponse'
        delete:
            tags:
                - synq.extensions.atlan.integrations.v1.AtlanIntegrationService
            summary: Remove
            operationId: synq.extensions.atlan.integrations.v1.AtlanIntegrationService.Remove
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.RemoveResponse'
        patch:
            tags:
                - synq.extensions.atlan.integrations.v1.AtlanIntegrationService
            summary: Activate
            description: Activate or deactivate the integration.
            operationId: synq.extensions.atlan.integrations.v1.AtlanIntegrationService.Activate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.ActivateRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.extensions.atlan.integrations.v1.ActivateResponse'
    /api/issues/v2/batch:
        get:
            tags:
                - synq.issues.v2.IssuesService
            summary: BatchGetIssues
            operationId: synq.issues.v2.IssuesService.BatchGetIssues
            parameters:
                - name: issueIds
                  in: query
                  description: IDs of the issues to get.
                  schema:
                    type: array
                    items:
                        type: string
                        format: uuid
                    title: issue_ids
                    description: IDs of the issues to get.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.BatchGetIssuesResponse'
    /api/issues/v2:
        get:
            tags:
                - synq.issues.v2.IssuesService
            summary: ListIssues
            operationId: synq.issues.v2.IssuesService.ListIssues
            parameters:
                - name: entitiesQuery.parts.identifierList.identifiers.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entitiesQuery.parts.identifierList.identifiers.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: entitiesQuery.parts.identifierList.identifiers.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: entitiesQuery.parts.identifierList.identifiers.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: entitiesQuery.parts.identifierList.identifiers.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: entitiesQuery.parts.identifierList.identifiers.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: entitiesQuery.parts.identifierList.identifiers.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: entitiesQuery.parts.identifierList.identifiers.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: entitiesQuery.parts.identifierList.identifiers.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: entitiesQuery.parts.identifierList.identifiers.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: entitiesQuery.parts.identifierList.identifiers.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: entitiesQuery.parts.identifierList.identifiers.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: entitiesQuery.parts.identifierList.identifiers.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: entitiesQuery.parts.identifierList.identifiers.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: entitiesQuery.parts.identifierList.identifiers.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: entitiesQuery.parts.identifierList.identifiers.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: entitiesQuery.parts.identifierList.identifiers.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: entitiesQuery.parts.identifierList.identifiers.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: entitiesQuery.parts.identifierList.identifiers.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: entitiesQuery.parts.identifierList.identifiers.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: entitiesQuery.parts.identifierList.identifiers.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: entitiesQuery.parts.identifierList.identifiers.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: entitiesQuery.parts.identifierList.identifiers.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: entitiesQuery.parts.identifierList.identifiers.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: entitiesQuery.parts.identifierList.identifiers.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: entitiesQuery.parts.identifierList.identifiers.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: entitiesQuery.parts.identifierList.identifiers.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: entitiesQuery.parts.identifierList.identifiers.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: entitiesQuery.parts.identifierList.identifiers.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: entitiesQuery.parts.identifierList.identifiers.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: entitiesQuery.parts.identifierList.identifiers.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: entitiesQuery.parts.identifierList.identifiers.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: entitiesQuery.parts.identifierList.identifiers.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: entitiesQuery.parts.identifierList.identifiers.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: entitiesQuery.parts.identifierList.identifiers.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: entitiesQuery.parts.identifierList.identifiers.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: entitiesQuery.parts.identifierList.identifiers.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: entitiesQuery.parts.identifierList.identifiers.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: entitiesQuery.parts.identifierList.identifiers.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: entitiesQuery.parts.identifierList.identifiers.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: entitiesQuery.parts.identifierList.identifiers.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: entitiesQuery.parts.identifierList.identifiers.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: entitiesQuery.parts.identifierList.identifiers.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entitiesQuery.parts.identifierList.identifiers.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: entitiesQuery.parts.identifierList.identifiers.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entitiesQuery.parts.identifierList.identifiers.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: entitiesQuery.parts.identifierList.identifiers.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: entitiesQuery.parts.identifierList.identifiers.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: entitiesQuery.parts.identifierList.identifiers.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: entitiesQuery.parts.identifierList.identifiers.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: entitiesQuery.parts.withNameSearch.searchQuery
                  in: query
                  schema:
                    type: string
                    title: search_query
                - name: entitiesQuery.parts.withType.type.default
                  in: query
                  description: Default SYNQ types
                  schema:
                    title: default
                    description: Default SYNQ types
                    $ref: '#/components/schemas/synq.entities.v1.EntityType'
                - name: entitiesQuery.parts.withType.type.custom
                  in: query
                  description: Custom types as defined through synq.entities.custom.v1.TypesService
                  schema:
                    type: integer
                    title: custom
                    format: int32
                    description: Custom types as defined through synq.entities.custom.v1.TypesService
                - name: entitiesQuery.parts.withAnnotation.name
                  in: query
                  schema:
                    type: string
                    title: name
                - name: entitiesQuery.parts.withAnnotation.acceptedValue
                  in: query
                  schema:
                    type: string
                    title: accepted_value
                    deprecated: true
                - name: entitiesQuery.parts.withAnnotation.acceptedValues
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: accepted_values
                - name: entitiesQuery.parts.inDataPlatform.identifier.bigquery.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: entitiesQuery.parts.inDataPlatform.identifier.clickhouse.host
                  in: query
                  description: Clickhouse host inclusive of port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse host inclusive of port
                - name: entitiesQuery.parts.inDataPlatform.identifier.clickhouse.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: entitiesQuery.parts.inDataPlatform.identifier.snowflake.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: entitiesQuery.parts.inDataPlatform.identifier.snowflake.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: entitiesQuery.parts.inDataPlatform.identifier.redshift.cluster
                  in: query
                  description: Redshift cluster
                  required: true
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: entitiesQuery.parts.inDataPlatform.identifier.redshift.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: entitiesQuery.parts.inDataPlatform.identifier.postgres.host
                  in: query
                  description: Postgres host inclusive of port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres host inclusive of port
                - name: entitiesQuery.parts.inDataPlatform.identifier.postgres.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: entitiesQuery.parts.inDataPlatform.identifier.mysql.host
                  in: query
                  description: Mysql host inclusive of port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql host inclusive of port
                - name: entitiesQuery.parts.inDataPlatform.identifier.databricks.workspace
                  in: query
                  description: URL of the databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of the databricks workspace
                - name: entitiesQuery.parts.inDataPlatform.identifier.dbtCloud.apiEndpoint
                  in: query
                  description: API endpoint for Dbt Cloud
                  required: true
                  schema:
                    type: string
                    title: api_endpoint
                    description: API endpoint for Dbt Cloud
                - name: entitiesQuery.parts.inDataPlatform.identifier.dbtCloud.accountId
                  in: query
                  description: Account ID
                  required: true
                  schema:
                    type: string
                    title: account_id
                    description: Account ID
                - name: entitiesQuery.parts.inDataPlatform.identifier.dbtCloud.projectId
                  in: query
                  description: Project ID
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Project ID
                - name: entitiesQuery.parts.inDataPlatform.identifier.sqlMesh.defaultDatabaseInstance
                  in: query
                  description: Default database instance for SQL Mesh
                  required: true
                  schema:
                    type: string
                    title: default_database_instance
                    description: Default database instance for SQL Mesh
                - name: entitiesQuery.parts.inDataPlatform.identifier.duckdb.motherduckAccount
                  in: query
                  schema:
                    type: string
                    title: motherduck_account
                - name: entitiesQuery.parts.inDataPlatform.identifier.trino.coordinator
                  in: query
                  schema:
                    type: string
                    title: coordinator
                - name: entitiesQuery.parts.inDataPlatform.identifier.synqIntegrationId
                  in: query
                  description: SYNQ integration ID maps to the created integration on the SYNQ platform.
                  schema:
                    type: string
                    title: synq_integration_id
                    description: SYNQ integration ID maps to the created integration on the SYNQ platform.
                - name: entitiesQuery.parts.withDataPlatformType.types
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.platforms.v1.DataPlatformType'
                    title: types
                - name: entitiesQuery.parts.inFolder.path
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: path
                - name: entitiesQuery.parts.inDomain.domainId
                  in: query
                  schema:
                    type: string
                    title: domain_id
                    format: uuid
                - name: entitiesQuery.parts.query.operand
                  in: query
                  description: Defaults to AND if not specified.
                  schema:
                    title: operand
                    description: Defaults to AND if not specified.
                    $ref: '#/components/schemas/synq.queries.v1.QueryOperand'
                - name: entitiesQuery.parts.unsupported.queryJson
                  in: query
                  schema:
                    type: string
                    title: query_json
                - name: time.field
                  in: query
                  schema:
                    title: field
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Field'
                - name: time.from.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: time.from.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
                - name: sort.sortBy
                  in: query
                  schema:
                    title: sort_by
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Field'
                - name: sort.order
                  in: query
                  schema:
                    title: order
                    $ref: '#/components/schemas/synq.issues.v2.ListIssuesRequest.Sort.Order'
                - name: pagination.cursor
                  in: query
                  description: Cursor for the next page of results. If not provided, returns the first page.
                  schema:
                    type: string
                    title: cursor
                    description: Cursor for the next page of results. If not provided, returns the first page.
                - name: pagination.pageSize
                  in: query
                  description: Maximum number of items to return in a single page. If not provided, defaults vary per API.
                  schema:
                    type: integer
                    title: page_size
                    format: int32
                    description: Maximum number of items to return in a single page. If not provided, defaults vary per API.
                - name: lifecycleState
                  in: query
                  description: Filter by issue lifecycle state
                  schema:
                    title: lifecycle_state
                    description: Filter by issue lifecycle state
                    $ref: '#/components/schemas/synq.issues.issues.v1.LifecycleState'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.ListIssuesResponse'
    /api/issues/v2/{issue_id}/mark-investigating:
        patch:
            tags:
                - synq.issues.v2.IssuesService
            summary: MarkInvestigating
            description: Mark issue as being investigated.
            operationId: synq.issues.v2.IssuesService.MarkInvestigating
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as investigating.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as investigating.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as investigating.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as investigating. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkInvestigatingRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.MarkInvestigatingResponse'
    /api/issues/v2/{issue_id}/mark-fixed:
        patch:
            tags:
                - synq.issues.v2.IssuesService
            summary: MarkFixed
            description: Mark issue as fixed.
            operationId: synq.issues.v2.IssuesService.MarkFixed
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as fixed.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as fixed.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as fixed.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as fixed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkFixedRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.MarkFixedResponse'
    /api/issues/v2/{issue_id}/mark-expected:
        patch:
            tags:
                - synq.issues.v2.IssuesService
            summary: MarkExpected
            description: Mark issue as expected.
            operationId: synq.issues.v2.IssuesService.MarkExpected
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as expected.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as expected.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as expected.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as expected. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkExpectedRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.MarkExpectedResponse'
    /api/issues/v2/{issue_id}/mark-no-action-needed:
        patch:
            tags:
                - synq.issues.v2.IssuesService
            summary: MarkNoActionNeeded
            description: Mark issue as no action needed.
            operationId: synq.issues.v2.IssuesService.MarkNoActionNeeded
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as no action needed.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as no action needed.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as no action needed.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as no action needed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkNoActionNeededRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.MarkNoActionNeededResponse'
    /api/issues/v2/{issue_id}/comment:
        post:
            tags:
                - synq.issues.v2.IssuesService
            summary: PostComment
            description: Post a comment on an issue.
            operationId: synq.issues.v2.IssuesService.PostComment
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to post a comment on.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to post a comment on.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor posting the comment.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                comment:
                                    type: string
                                    title: comment
                                    description: Comment to post.
                                time:
                                    description: Time at which the comment was posted. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                            title: PostCommentRequest
                            required:
                                - actor
                                - comment
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.v2.PostCommentResponse'
    /api/issues/v1/batch:
        get:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: BatchGetIssues
            operationId: synq.issues.issues.v1.IssuesService.BatchGetIssues
            parameters:
                - name: issueIds
                  in: query
                  description: IDs of the issues to get.
                  schema:
                    type: array
                    items:
                        type: string
                        format: uuid
                    title: issue_ids
                    description: IDs of the issues to get.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.BatchGetIssuesResponse'
    /api/issues/v1:
        get:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: ListIssues
            operationId: synq.issues.issues.v1.IssuesService.ListIssues
            parameters:
                - name: from.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: from.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
                - name: limit.max
                  in: query
                  schema:
                    type: integer
                    title: max
                    format: int32
                - name: limit.afterId
                  in: query
                  schema:
                    type: string
                    title: after_id
                - name: entities.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entities.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: entities.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: entities.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: entities.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: entities.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: entities.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: entities.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: entities.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: entities.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: entities.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: entities.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: entities.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: entities.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: entities.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: entities.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: entities.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: entities.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: entities.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: entities.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: entities.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: entities.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: entities.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: entities.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: entities.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: entities.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: entities.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: entities.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: entities.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: entities.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: entities.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: entities.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: entities.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: entities.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: entities.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: entities.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: entities.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: entities.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: entities.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: entities.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: entities.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: entities.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: entities.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entities.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: entities.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: entities.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: entities.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: entities.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: entities.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: entities.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.ListIssuesResponse'
    /api/issues/v1/{issue_id}/mark-investigating:
        patch:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: MarkInvestigating
            description: Mark issue as being investigated.
            operationId: synq.issues.issues.v1.IssuesService.MarkInvestigating
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as investigating.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as investigating.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as investigating.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as investigating. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkInvestigatingRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.MarkInvestigatingResponse'
    /api/issues/v1/{issue_id}/mark-fixed:
        patch:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: MarkFixed
            description: Mark issue as fixed.
            operationId: synq.issues.issues.v1.IssuesService.MarkFixed
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as fixed.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as fixed.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as fixed.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as fixed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkFixedRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.MarkFixedResponse'
    /api/issues/v1/{issue_id}/mark-expected:
        patch:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: MarkExpected
            description: Mark issue as expected.
            operationId: synq.issues.issues.v1.IssuesService.MarkExpected
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as expected.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as expected.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as expected.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as expected. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkExpectedRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.MarkExpectedResponse'
    /api/issues/v1/{issue_id}/mark-no-action-needed:
        patch:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: MarkNoActionNeeded
            description: Mark issue as no action needed.
            operationId: synq.issues.issues.v1.IssuesService.MarkNoActionNeeded
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to mark as no action needed.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to mark as no action needed.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor marking the issue as no action needed.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                time:
                                    description: Time at which the issue was marked as no action needed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                requireNoExistingStatus:
                                    type: boolean
                                    title: require_no_existing_status
                                    description: Ignore status change if the issue already has a status.
                            title: MarkNoActionNeededRequest
                            required:
                                - actor
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.MarkNoActionNeededResponse'
    /api/issues/v1/{issue_id}/comment:
        post:
            tags:
                - synq.issues.issues.v1.IssuesService
            summary: PostComment
            description: Post a comment on an issue.
            operationId: synq.issues.issues.v1.IssuesService.PostComment
            parameters:
                - name: issue_id
                  in: path
                  description: ID of the issue to post a comment on.
                  required: true
                  schema:
                    type: string
                    title: issue_id
                    format: uuid
                    description: ID of the issue to post a comment on.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor posting the comment.
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                comment:
                                    type: string
                                    title: comment
                                    description: Comment to post.
                                time:
                                    description: Time at which the comment was posted. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                            title: PostCommentRequest
                            required:
                                - actor
                                - comment
                                - time
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.issues.issues.v1.PostCommentResponse'
    /api/git/v1/change/{change_id}:
        get:
            tags:
                - synq.git.commits.v1.CommitsService
            summary: GetDiffByChangeId
            operationId: synq.git.commits.v1.CommitsService.GetDiffByChangeId
            parameters:
                - name: change_id
                  in: path
                  required: true
                  schema:
                    type: string
                    title: change_id
                - name: limitToFiles
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: limit_to_files
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.git.commits.v1.GetDiffByChangeIdResponse'
    /api/git/v1/commit/{commit_sha}:
        get:
            tags:
                - synq.git.commits.v1.CommitsService
            summary: GetDiffByCommit
            operationId: synq.git.commits.v1.CommitsService.GetDiffByCommit
            parameters:
                - name: commit_sha
                  in: path
                  required: true
                  schema:
                    type: string
                    title: commit_sha
                    maxLength: 40
                    minLength: 40
                - name: limitToFiles
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: limit_to_files
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.git.commits.v1.GetDiffByCommitResponse'
    /api/incidents/v1:
        get:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: ListIncidents
            operationId: synq.incidents.v1.IncidentsService.ListIncidents
            parameters:
                - name: time.field
                  in: query
                  schema:
                    title: field
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Field'
                - name: time.from.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: time.from.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
                - name: sort.sortBy
                  in: query
                  schema:
                    title: sort_by
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Field'
                - name: sort.order
                  in: query
                  schema:
                    title: order
                    $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsRequest.Sort.Order'
                - name: pagination.cursor
                  in: query
                  description: Cursor for the next page of results. If not provided, returns the first page.
                  schema:
                    type: string
                    title: cursor
                    description: Cursor for the next page of results. If not provided, returns the first page.
                - name: pagination.pageSize
                  in: query
                  description: Maximum number of items to return in a single page. If not provided, defaults vary per API.
                  schema:
                    type: integer
                    title: page_size
                    format: int32
                    description: Maximum number of items to return in a single page. If not provided, defaults vary per API.
                - name: states
                  in: query
                  description: Filter by states
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.incidents.v1.Incident.State'
                    title: states
                    description: Filter by states
                - name: affectedEntities.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: affectedEntities.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: affectedEntities.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: affectedEntities.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: affectedEntities.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: affectedEntities.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: affectedEntities.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: affectedEntities.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: affectedEntities.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: affectedEntities.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: affectedEntities.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: affectedEntities.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: affectedEntities.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: affectedEntities.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: affectedEntities.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: affectedEntities.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: affectedEntities.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: affectedEntities.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: affectedEntities.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: affectedEntities.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: affectedEntities.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: affectedEntities.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: affectedEntities.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: affectedEntities.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: affectedEntities.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: affectedEntities.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: affectedEntities.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: affectedEntities.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: affectedEntities.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: affectedEntities.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: affectedEntities.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: affectedEntities.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: affectedEntities.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: affectedEntities.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: affectedEntities.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: affectedEntities.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: affectedEntities.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: affectedEntities.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: affectedEntities.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: affectedEntities.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: affectedEntities.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: affectedEntities.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: affectedEntities.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: affectedEntities.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: affectedEntities.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: affectedEntities.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: affectedEntities.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: affectedEntities.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: affectedEntities.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: affectedEntities.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.ListIncidentsResponse'
        post:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: CreateIncident
            operationId: synq.incidents.v1.IncidentsService.CreateIncident
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.incidents.v1.CreateIncidentRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.CreateIncidentResponse'
    /api/incidents/v1/{incident_id}/rename:
        patch:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: RenameIncident
            operationId: synq.incidents.v1.IncidentsService.RenameIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to rename
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to rename
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor renaming the incident
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the incident was renamed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                name:
                                    type: string
                                    title: name
                                    description: New name for the incident
                            title: RenameIncidentRequest
                            required:
                                - actor
                                - at
                                - name
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.RenameIncidentResponse'
    /api/incidents/v1/{incident_id}/cancel:
        patch:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: CancelIncident
            description: Cancel an incident
            operationId: synq.incidents.v1.IncidentsService.CancelIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to cancel
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to cancel
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor cancelling the incident
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the incident was cancelled. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                            title: CancelIncidentRequest
                            required:
                                - actor
                                - at
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.CancelIncidentResponse'
    /api/incidents/v1/{incident_id}/close:
        patch:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: CloseIncident
            description: Close an incident
            operationId: synq.incidents.v1.IncidentsService.CloseIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to close
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to close
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor closing the incident
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the incident was closed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                            title: CloseIncidentRequest
                            required:
                                - actor
                                - at
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.CloseIncidentResponse'
    /api/incidents/v1/{incident_id}/merge:
        post:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: MergeIncidents
            operationId: synq.incidents.v1.IncidentsService.MergeIncidents
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the primary incident to merge into
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the primary incident to merge into
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor performing the merge
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the incidents were merged. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                otherIncidentIds:
                                    type: array
                                    items:
                                        type: string
                                        format: uuid
                                        minItems: 1
                                    title: other_incident_ids
                                    minItems: 1
                                    description: IDs of other incidents to merge into the primary incident
                            title: MergeIncidentsRequest
                            required:
                                - actor
                                - at
                                - otherIncidentIds
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.MergeIncidentsResponse'
    /api/incidents/v1/{incident_id}/split:
        post:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: SplitIncident
            operationId: synq.incidents.v1.IncidentsService.SplitIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to split
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to split
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor performing the split
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the incident was split. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                splitIssueIds:
                                    type: array
                                    items:
                                        type: string
                                        format: uuid
                                        minItems: 1
                                    title: split_issue_ids
                                    minItems: 1
                                    description: IDs of issues to move to the new incident
                                splitIncidentName:
                                    type: string
                                    title: split_incident_name
                                    description: Name for the new incident
                            title: SplitIncidentRequest
                            required:
                                - actor
                                - at
                                - splitIssueIds
                                - splitIncidentName
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.SplitIncidentResponse'
    /api/incidents/v1/{incident_id}/issues:
        post:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: AddIssuesToIncident
            operationId: synq.incidents.v1.IncidentsService.AddIssuesToIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to add issues to
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to add issues to
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor adding the issues
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the issues were added. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                issueIds:
                                    type: array
                                    items:
                                        type: string
                                        format: uuid
                                        minItems: 1
                                    title: issue_ids
                                    minItems: 1
                                    description: IDs of issues to add to the incident
                            title: AddIssuesToIncidentRequest
                            required:
                                - actor
                                - at
                                - issueIds
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.AddIssuesToIncidentResponse'
        delete:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: RemoveIssuesFromIncident
            operationId: synq.incidents.v1.IncidentsService.RemoveIssuesFromIncident
            parameters:
                - name: incident_id
                  in: path
                  description: ID of the incident to remove issues from
                  required: true
                  schema:
                    type: string
                    title: incident_id
                    format: uuid
                    description: ID of the incident to remove issues from
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                actor:
                                    description: Actor removing the issues
                                    $ref: '#/components/schemas/synq.issues.actor.v1.Actor'
                                at:
                                    description: Time at which the issues were removed. Defaults to the current time.
                                    $ref: '#/components/schemas/google.protobuf.Timestamp'
                                issueIds:
                                    type: array
                                    items:
                                        type: string
                                        format: uuid
                                        minItems: 1
                                    title: issue_ids
                                    minItems: 1
                                    description: IDs of issues to remove from the incident
                            title: RemoveIssuesFromIncidentRequest
                            required:
                                - actor
                                - at
                                - issueIds
                            additionalProperties: false
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.RemoveIssuesFromIncidentResponse'
    /api/incidents/v1/batch:
        get:
            tags:
                - synq.incidents.v1.IncidentsService
            summary: BatchGetIncidents
            operationId: synq.incidents.v1.IncidentsService.BatchGetIncidents
            parameters:
                - name: incidentIds
                  in: query
                  description: IDs of the incidents to get
                  required: true
                  schema:
                    type: array
                    items:
                        type: string
                        format: uuid
                        minItems: 1
                    title: incident_ids
                    minItems: 1
                    description: IDs of the incidents to get
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.incidents.v1.BatchGetIncidentsResponse'
    /api/coordinates/v1/database:
        get:
            tags:
                - synq.entities.coordinates.v1.DatabaseCoordinatesService
            summary: BatchDatabaseCoordinates
            description: Get multiple DatabaseCoordinates for identifiers.
            operationId: synq.entities.coordinates.v1.DatabaseCoordinatesService.BatchDatabaseCoordinates
            parameters:
                - name: ids.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: ids.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: ids.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: ids.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: ids.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: ids.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: ids.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: ids.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: ids.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: ids.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: ids.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: ids.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: ids.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: ids.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: ids.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: ids.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: ids.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: ids.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: ids.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: ids.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: ids.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: ids.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: ids.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: ids.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: ids.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: ids.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: ids.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: ids.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: ids.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: ids.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: ids.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: ids.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: ids.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: ids.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: ids.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: ids.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: ids.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: ids.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: ids.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.coordinates.v1.BatchDatabaseCoordinatesResponse'
    /api/changes/v1:
        get:
            tags:
                - synq.entities.changes.v1.ChangesService
            summary: List
            description: |-
                List retrieves the history of changes for a specific entity identified by its path.
                 Changes are returned in chronological order (newest first) and include details about the type of change,
                 when it occurred, and who made it.
            operationId: synq.entities.changes.v1.ChangesService.List
            parameters:
                - name: id.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: id.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: id.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: id.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: id.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: id.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: id.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: id.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: id.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: id.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: id.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: id.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: id.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: id.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: id.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: id.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: id.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: id.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: id.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: id.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: id.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: id.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: id.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: id.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: id.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: id.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: id.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: id.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: id.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: id.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: id.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: id.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: id.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: id.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: id.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: id.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: id.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: id.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: id.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: id.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: id.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: id.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: id.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: id.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: id.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: id.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: id.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: id.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: id.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: id.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: changeBefore.seconds
                  in: query
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                     9999-12-31T23:59:59Z inclusive.
                  schema:
                    type:
                        - integer
                        - string
                    title: seconds
                    format: int64
                    description: |-
                        Represents seconds of UTC time since Unix epoch
                         1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                         9999-12-31T23:59:59Z inclusive.
                - name: changeBefore.nanos
                  in: query
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                     second values with fractions must still have non-negative nanos values
                     that count forward in time. Must be from 0 to 999,999,999
                     inclusive.
                  schema:
                    type: integer
                    title: nanos
                    format: int32
                    description: |-
                        Non-negative fractions of a second at nanosecond resolution. Negative
                         second values with fractions must still have non-negative nanos values
                         that count forward in time. Must be from 0 to 999,999,999
                         inclusive.
                - name: limitToChangeTypes
                  in: query
                  description: Return only changes of specific types.
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/synq.entities.v1.EntityChangeType'
                    title: limit_to_change_types
                    description: Return only changes of specific types.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.changes.v1.ListResponse'
    /api/changes/v1/batch:
        get:
            tags:
                - synq.entities.changes.v1.ChangesService
            summary: BatchChange
            description: |-
                BatchChange retrieves multiple entity changes by their IDs in a single request.
                 This is an optimized endpoint for fetching specific changes when you already know their IDs,
                 rather than listing changes for an entity.
            operationId: synq.entities.changes.v1.ChangesService.BatchChange
            parameters:
                - name: changeIds
                  in: query
                  description: List of change IDs to retrieve. Each ID uniquely identifies a specific change in the system.
                  schema:
                    type: array
                    items:
                        type: string
                    title: change_ids
                    description: List of change IDs to retrieve. Each ID uniquely identifies a specific change in the system.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.changes.v1.BatchChangeResponse'
    /api/code/v1/{id}:
        get:
            tags:
                - synq.entities.code.v1.CodeService
            summary: ListCode
            description: |-
                ListCode retrieves all code artifacts associated with a specific entity.
                 This includes SQL queries, Python scripts, dbt models, and other code configurations
                 that define or are part of the entity's functionality.
            operationId: synq.entities.code.v1.CodeService.ListCode
            parameters:
                - name: id
                  in: path
                  description: |-
                    Identifier of the entity to retrieve code for.
                     This can be any entity type that contains code artifacts.
                  required: true
                  schema:
                    title: id
                    description: |-
                        Identifier of the entity to retrieve code for.
                         This can be any entity type that contains code artifacts.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.code.v1.ListCodeResponse'
    /api/status/v1/{id}/incidents:
        get:
            tags:
                - synq.entities.status.v1.EntityIncidentsService
            summary: GetIncidents
            description: Get specific entity status by its identifier.
            operationId: synq.entities.status.v1.EntityIncidentsService.GetIncidents
            parameters:
                - name: id
                  in: path
                  description: Identifier of the entity to get incidents for.
                  required: true
                  schema:
                    title: id
                    description: Identifier of the entity to get incidents for.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                - name: fetchUpstreamIncidents
                  in: query
                  description: Retrieve incidents of upstream entities.
                  schema:
                    type: boolean
                    title: fetch_upstream_incidents
                    description: Retrieve incidents of upstream entities.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.status.v1.GetIncidentsResponse'
    /api/status/v1/incidents:
        get:
            tags:
                - synq.entities.status.v1.EntityIncidentsService
            summary: BatchGetIncidents
            description: Get multiple entity statuses by their identifiers.
            operationId: synq.entities.status.v1.EntityIncidentsService.BatchGetIncidents
            parameters:
                - name: requests.id.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: requests.id.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: requests.id.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: requests.id.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: requests.id.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: requests.id.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: requests.id.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: requests.id.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: requests.id.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: requests.id.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: requests.id.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: requests.id.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: requests.id.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: requests.id.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: requests.id.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: requests.id.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: requests.id.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: requests.id.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: requests.id.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: requests.id.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: requests.id.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: requests.id.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: requests.id.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: requests.id.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: requests.id.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: requests.id.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: requests.id.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: requests.id.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: requests.id.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: requests.id.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: requests.id.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: requests.id.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: requests.id.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: requests.id.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: requests.id.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: requests.id.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: requests.id.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: requests.id.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: requests.id.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: requests.id.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: requests.id.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: requests.id.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: requests.id.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: requests.id.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: requests.id.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: requests.id.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: requests.id.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: requests.fetchUpstreamIncidents
                  in: query
                  description: Retrieve incidents of upstream entities.
                  schema:
                    type: boolean
                    title: fetch_upstream_incidents
                    description: Retrieve incidents of upstream entities.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.status.v1.BatchGetIncidentsResponse'
    /api/status/v1/{id}/issues:
        get:
            tags:
                - synq.entities.status.v1.EntityIssuesService
            summary: GetIssuesStatus
            description: Get specific entity status by its identifier.
            operationId: synq.entities.status.v1.EntityIssuesService.GetIssuesStatus
            parameters:
                - name: id
                  in: path
                  description: Identifier of the entity to get status for.
                  required: true
                  schema:
                    title: id
                    description: Identifier of the entity to get status for.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
                - name: fetchUpstreamStatus
                  in: query
                  description: Retrieve status of upstream entities.
                  schema:
                    type: boolean
                    title: fetch_upstream_status
                    description: Retrieve status of upstream entities.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.status.v1.GetIssuesStatusResponse'
    /api/status/v1/issues:
        get:
            tags:
                - synq.entities.status.v1.EntityIssuesService
            summary: BatchGetIssuesStatus
            description: Get multiple entity statuses by their identifiers.
            operationId: synq.entities.status.v1.EntityIssuesService.BatchGetIssuesStatus
            parameters:
                - name: requests.id.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: requests.id.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: requests.id.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: requests.id.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: requests.id.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: requests.id.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: requests.id.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: requests.id.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: requests.id.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: requests.id.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: requests.id.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: requests.id.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: requests.id.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: requests.id.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: requests.id.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: requests.id.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: requests.id.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: requests.id.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: requests.id.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: requests.id.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: requests.id.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: requests.id.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: requests.id.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: requests.id.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: requests.id.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: requests.id.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: requests.id.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: requests.id.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: requests.id.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: requests.id.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: requests.id.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: requests.id.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: requests.id.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: requests.id.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: requests.id.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: requests.id.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: requests.id.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: requests.id.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: requests.id.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: requests.id.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: requests.id.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: requests.id.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: requests.id.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: requests.id.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: requests.id.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: requests.id.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: requests.id.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: requests.id.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: requests.fetchUpstreamStatus
                  in: query
                  description: Retrieve status of upstream entities.
                  schema:
                    type: boolean
                    title: fetch_upstream_status
                    description: Retrieve status of upstream entities.
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.status.v1.BatchGetIssuesStatusResponse'
    /api/schema/v1/{id}:
        get:
            tags:
                - synq.entities.schemas.v1.SchemasService
            summary: GetSchema
            description: Get schema of the entity its identifier.
            operationId: synq.entities.schemas.v1.SchemasService.GetSchema
            parameters:
                - name: id
                  in: path
                  description: Identifier of the entity to get.
                  required: true
                  schema:
                    title: id
                    description: Identifier of the entity to get.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.schemas.v1.GetSchemaResponse'
    /api/lineage/v1:
        get:
            tags:
                - synq.entities.lineage.v1.LineageService
            summary: GetLineage
            operationId: synq.entities.lineage.v1.LineageService.GetLineage
            parameters:
                - name: lineageDirection
                  in: query
                  schema:
                    title: lineage_direction
                    $ref: '#/components/schemas/synq.entities.lineage.v1.LineageDirection'
                - name: startPoint.entities.entities.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: startPoint.entities.entities.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: startPoint.entities.entities.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: startPoint.entities.entities.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: startPoint.entities.entities.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: startPoint.entities.entities.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: startPoint.entities.entities.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: startPoint.entities.entities.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: startPoint.entities.entities.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: startPoint.entities.entities.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: startPoint.entities.entities.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: startPoint.entities.entities.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: startPoint.entities.entities.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: startPoint.entities.entities.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: startPoint.entities.entities.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: startPoint.entities.entities.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: startPoint.entities.entities.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: startPoint.entities.entities.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: startPoint.entities.entities.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: startPoint.entities.entities.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: startPoint.entities.entities.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: startPoint.entities.entities.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: startPoint.entities.entities.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: startPoint.entities.entities.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: startPoint.entities.entities.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: startPoint.entities.entities.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: startPoint.entities.entities.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: startPoint.entities.entities.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: startPoint.entities.entities.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: startPoint.entities.entities.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: startPoint.entities.entities.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: startPoint.entities.entities.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: startPoint.entities.entities.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: startPoint.entities.entities.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: startPoint.entities.entities.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: startPoint.entities.entities.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: startPoint.entities.entities.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: startPoint.entities.entities.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: startPoint.entities.entities.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: startPoint.entities.entities.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: startPoint.entities.entities.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: startPoint.entities.entities.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: startPoint.entities.entities.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: startPoint.entities.entities.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: startPoint.entities.entities.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: startPoint.entities.entities.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: startPoint.entities.entities.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: startPoint.entities.entities.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: startPoint.entities.entities.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: startPoint.entities.entities.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
                - name: startPoint.entityColumns.columnNames
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                    title: column_names
                - name: maxDepth
                  in: query
                  schema:
                    type: integer
                    title: max_depth
                    format: int32
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.lineage.v1.GetLineageResponse'
    /api/executions/v1:
        post:
            tags:
                - synq.entities.executions.v1.EntityExecutionsService
            summary: UpsertExecution
            description: Execution affects status of the custom entity
            operationId: synq.entities.executions.v1.EntityExecutionsService.UpsertExecution
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.entities.executions.v1.UpsertExecutionRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.executions.v1.UpsertExecutionResponse'
    /api/executions/v1/log-entry:
        post:
            tags:
                - synq.entities.executions.v1.EntityExecutionsService
            summary: UpsertLogEntry
            description: LogEntry is a log message for the custom entity
            operationId: synq.entities.executions.v1.EntityExecutionsService.UpsertLogEntry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.entities.executions.v1.UpsertLogEntryRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.executions.v1.UpsertLogEntryResponse'
    /api/entities/custom/v1:
        get:
            tags:
                - synq.entities.custom.v1.EntitiesService
            summary: ListEntities
            description: List all entities.
            operationId: synq.entities.custom.v1.EntitiesService.ListEntities
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.custom.v1.ListEntitiesResponse'
        post:
            tags:
                - synq.entities.custom.v1.EntitiesService
            summary: UpsertEntity
            description: Create or update an entity. If the entity does not exist, it will be created, otherwise it will be updated. Entities are identified and deduplicated by their Identifier in a scope of a given customer workspace.
            operationId: synq.entities.custom.v1.EntitiesService.UpsertEntity
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/synq.entities.custom.v1.UpsertEntityRequest'
                required: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.custom.v1.UpsertEntityResponse'
    /api/entities/custom/v1/{id}:
        delete:
            tags:
                - synq.entities.custom.v1.EntitiesService
            summary: DeleteEntity
            description: Delete an entity by its identifier. If the entity does not exist, it will be a no-op.
            operationId: synq.entities.custom.v1.EntitiesService.DeleteEntity
            parameters:
                - name: id
                  in: path
                  description: Identifier of the entity to delete.
                  required: true
                  schema:
                    title: id
                    description: Identifier of the entity to delete.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.custom.v1.DeleteEntityResponse'
    /api/impact/v1:
        get:
            tags:
                - synq.entities.impact.v1.ImpactService
            summary: GetImpact
            operationId: synq.entities.impact.v1.ImpactService.GetImpact
            parameters:
                - name: ids.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: ids.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: ids.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: ids.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: ids.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: ids.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: ids.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: ids.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: ids.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: ids.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: ids.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: ids.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: ids.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: ids.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: ids.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: ids.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: ids.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: ids.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: ids.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: ids.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: ids.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: ids.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: ids.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: ids.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: ids.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: ids.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: ids.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: ids.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: ids.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: ids.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: ids.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: ids.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: ids.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: ids.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: ids.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: ids.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: ids.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: ids.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: ids.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.impact.v1.GetImpactResponse'
    /api/entities/v1/{id}:
        get:
            tags:
                - synq.entities.entities.v1.EntitiesService
            summary: GetEntity
            description: Get specific entity by its identifier.
            operationId: synq.entities.entities.v1.EntitiesService.GetEntity
            parameters:
                - name: id
                  in: path
                  description: Identifier of the entity to get.
                  required: true
                  schema:
                    title: id
                    description: Identifier of the entity to get.
                    $ref: '#/components/schemas/synq.entities.v1.Identifier'
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.entities.v1.GetEntityResponse'
    /api/entities/v1:
        get:
            tags:
                - synq.entities.entities.v1.EntitiesService
            summary: BatchGetEntities
            description: Get multiple entities by their identifiers.
            operationId: synq.entities.entities.v1.EntitiesService.BatchGetEntities
            parameters:
                - name: ids.dbtCoreNode.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.dbtCoreNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.dbtCloudNode.projectId
                  in: query
                  description: Your dbt Cloud project id
                  required: true
                  schema:
                    type: string
                    title: project_id
                    description: Your dbt Cloud project id
                - name: ids.dbtCloudNode.accountId
                  in: query
                  description: Your dbt Cloud account id
                  schema:
                    type: string
                    title: account_id
                    description: Your dbt Cloud account id
                - name: ids.dbtCloudNode.nodeId
                  in: query
                  description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                  required: true
                  schema:
                    type: string
                    title: node_id
                    description: Dbt node_id that identifies one of dbt DAG nodes (model, test, etc)
                - name: ids.bigqueryTable.project
                  in: query
                  description: BigQuery project
                  required: true
                  schema:
                    type: string
                    title: project
                    description: BigQuery project
                - name: ids.bigqueryTable.dataset
                  in: query
                  description: BigQuery dataset id
                  required: true
                  schema:
                    type: string
                    title: dataset
                    description: BigQuery dataset id
                - name: ids.bigqueryTable.table
                  in: query
                  description: BigQuery table name
                  required: true
                  schema:
                    type: string
                    title: table
                    description: BigQuery table name
                - name: ids.snowflakeTable.account
                  in: query
                  description: Snowflake account
                  required: true
                  schema:
                    type: string
                    title: account
                    description: Snowflake account
                - name: ids.snowflakeTable.database
                  in: query
                  description: Snowflake database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Snowflake database
                - name: ids.snowflakeTable.schema
                  in: query
                  description: Snowflake schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Snowflake schema
                - name: ids.snowflakeTable.table
                  in: query
                  description: Snowflake table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Snowflake table
                - name: ids.redshiftTable.cluster
                  in: query
                  description: Redshift cluster
                  schema:
                    type: string
                    title: cluster
                    description: Redshift cluster
                - name: ids.redshiftTable.database
                  in: query
                  description: Redshift database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Redshift database
                - name: ids.redshiftTable.schema
                  in: query
                  description: Redshift schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Redshift schema
                - name: ids.redshiftTable.table
                  in: query
                  description: Redshift table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Redshift table
                - name: ids.postgresTable.host
                  in: query
                  description: Postgres hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Postgres hostname without port
                - name: ids.postgresTable.database
                  in: query
                  description: Postgres database
                  required: true
                  schema:
                    type: string
                    title: database
                    description: Postgres database
                - name: ids.postgresTable.schema
                  in: query
                  description: Postgres schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Postgres schema
                - name: ids.postgresTable.table
                  in: query
                  description: Postgres table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Postgres table
                - name: ids.mysqlTable.host
                  in: query
                  description: Mysql hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Mysql hostname without port
                - name: ids.mysqlTable.schema
                  in: query
                  description: Mysql database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Mysql database
                - name: ids.mysqlTable.table
                  in: query
                  description: Mysql table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Mysql table
                - name: ids.clickhouseTable.host
                  in: query
                  description: Clickhouse hostname without port
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Clickhouse hostname without port
                - name: ids.clickhouseTable.schema
                  in: query
                  description: Clickhouse database
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Clickhouse database
                - name: ids.clickhouseTable.table
                  in: query
                  description: Clickhouse table
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Clickhouse table
                - name: ids.airflowDag.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowDag.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the Airflow instance
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id that identifies the Airflow instance
                - name: ids.airflowTask.dagId
                  in: query
                  description: Airflow dag_id that identifies the DAG
                  required: true
                  schema:
                    type: string
                    title: dag_id
                    description: Airflow dag_id that identifies the DAG
                - name: ids.airflowTask.taskId
                  in: query
                  description: Airflow task_id that identifies the task within the DAG
                  required: true
                  schema:
                    type: string
                    title: task_id
                    description: Airflow task_id that identifies the task within the DAG
                - name: ids.custom.id
                  in: query
                  description: |-
                    Id that identifies the custom entity
                     The Id should be unique within the custom entity Identifier.
                  required: true
                  schema:
                    type: string
                    title: id
                    description: |-
                        Id that identifies the custom entity
                         The Id should be unique within the custom entity Identifier.
                - name: ids.dataproduct.id
                  in: query
                  description: Dataproduct id that identifies the Dataproduct
                  required: true
                  schema:
                    type: string
                    title: id
                    format: uuid
                    description: Dataproduct id that identifies the Dataproduct
                - name: ids.synqPath.path
                  in: query
                  description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                  required: true
                  schema:
                    type: string
                    title: path
                    description: SYNQ path that identifies the SYNQ entity, needs to be one of supported paths
                - name: ids.databricksTable.workspace
                  in: query
                  description: URL of Databricks workspace
                  required: true
                  schema:
                    type: string
                    title: workspace
                    description: URL of Databricks workspace
                - name: ids.databricksTable.catalog
                  in: query
                  description: Databricks catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Databricks catalog
                - name: ids.databricksTable.schema
                  in: query
                  description: Databricks schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Databricks schema
                - name: ids.databricksTable.table
                  in: query
                  description: Databricks table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Databricks table or view
                - name: ids.trinoTable.host
                  in: query
                  description: Hostname of the Trino instance
                  required: true
                  schema:
                    type: string
                    title: host
                    description: Hostname of the Trino instance
                - name: ids.trinoTable.catalog
                  in: query
                  description: Trino catalog
                  required: true
                  schema:
                    type: string
                    title: catalog
                    description: Trino catalog
                - name: ids.trinoTable.schema
                  in: query
                  description: Trino schema
                  required: true
                  schema:
                    type: string
                    title: schema
                    description: Trino schema
                - name: ids.trinoTable.table
                  in: query
                  description: Trino table or view
                  required: true
                  schema:
                    type: string
                    title: table
                    description: Trino table or view
                - name: ids.sqlMeshModel.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshModel.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.integrationId
                  in: query
                  description: SYNQ integration_id that identifies the dbt Core project
                  required: true
                  schema:
                    type: string
                    title: integration_id
                    format: uuid
                    description: SYNQ integration_id that identifies the dbt Core project
                - name: ids.sqlMeshAudit.fqn
                  in: query
                  description: SQLMesh model fully qualified name
                  required: true
                  schema:
                    type: string
                    title: fqn
                    description: SQLMesh model fully qualified name
                - name: ids.sqlMeshAudit.auditId
                  in: query
                  description: Identifier of the audit
                  required: true
                  schema:
                    type: string
                    title: audit_id
                    description: Identifier of the audit
                - name: ids.monitor.monitorId
                  in: query
                  description: Identifier of the monitor
                  required: true
                  schema:
                    type: string
                    title: monitor_id
                    description: Identifier of the monitor
                - name: ids.monitor.segment
                  in: query
                  description: Optional monitor segmentation identifier
                  schema:
                    type: string
                    title: segment
                    description: Optional monitor segmentation identifier
                - name: ids.monitor.integrationId
                  in: query
                  description: SYNQ integration_id of the monitored identifier
                  schema:
                    type: string
                    title: integration_id
                    description: SYNQ integration_id of the monitored identifier
                    deprecated: true
            responses:
                default:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/connect.error'
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/synq.entities.entities.v1.BatchGetEntitiesResponse'
tags:
    - name: synq.monitors.automated_monitors.v1.DeploymentRulesService
    - name: synq.monitors.info.v1.MonitorInfoService
    - name: synq.monitors.history.v1.HistoryService
    - name: synq.datachecks.sqltests.v1.SqlTestsService
      description: SqlTestsService is a service for managing SqlTests.
    - name: synq.datachecks.testsuggestions.v1.TestSuggestionsService
    - name: synq.platforms.v1.PlatformsService
      description: PlatformsService is a service for managing Platforms and Integrations.
    - name: synq.ingest.dwh.v1.DwhService
    - name: synq.ingest.cloudwatch.v1.CloudwatchService
    - name: synq.ingest.airflow.v1.AirflowLogsService
    - name: synq.agent.sre.v1.TriageService
      description: |-
        Service for managing issue triage operations, allowing LLM agents to conclude investigations
         and record evidence during the triage process.
    - name: synq.extensions.atlan.provider.v1.AtlanProviderService
    - name: synq.extensions.atlan.workflows.v1.AtlanWorkflowService
    - name: synq.extensions.atlan.integrations.v1.AtlanIntegrationService
    - name: synq.issues.v2.IssuesService
      description: IssuesService is a service for managing Issues.
    - name: synq.issues.issues.v1.IssuesService
      description: IssuesService is a service for managing Issues.
    - name: synq.git.commits.v1.CommitsService
    - name: synq.incidents.v1.IncidentsService
      description: IncidentsService is a service for managing Incidents.
    - name: synq.entities.coordinates.v1.DatabaseCoordinatesService
      description: DatabaseCoordinatesService is a service for getting database coordinates of Entities.
    - name: synq.entities.changes.v1.ChangesService
      description: |-
        ChangesService provides functionality to track and retrieve changes made to entities in the system.
         It supports various types of changes including git commits, schema changes, and SQL definition changes.
         The service is designed to help track the history and evolution of entities over time.

         The service supports multiple types of changes:
         - Git commits: Changes made through version control
         - Schema changes: Modifications to database schemas
         - SQL definition changes: Updates to SQL queries and definitions
    - name: synq.entities.code.v1.CodeService
      description: |-
        CodeService is a service for retrieving code associated with entities in the system.
         It provides functionality to access and manage code artifacts such as SQL queries,
         Python scripts, dbt models, and other code configurations that are part of SYNQ entities.
    - name: synq.entities.status.v1.EntityIncidentsService
      description: EntityIncidentsService is the service which retrieves entity status.
    - name: synq.entities.status.v1.EntityIssuesService
      description: EntityIssuesService is the service which retrieves entity issues status.
    - name: synq.entities.schemas.v1.SchemasService
      description: EntitiesService is a service for retriving any entity.
    - name: synq.entities.lineage.v1.LineageService
      description: |-
        LineageService allows you to fetch:
         * Entity level lineage from a starting point of one or more entities.
         * Column Level lineage from a starting point of multiple columns of a single entity.
    - name: synq.entities.executions.v1.EntityExecutionsService
    - name: synq.entities.custom.v1.EntitiesService
      description: |-
        custom.EntitiesService is a service for managing custom entities. Entities can represent
         various data platform concepts such as services, consumers, applications or data pipelines
         that are not natively available in Synq.

         Entities are identified by a unique identifier and can be created, updated, read and deleted.
    - name: synq.entities.impact.v1.ImpactService
    - name: synq.entities.entities.v1.EntitiesService
      description: EntitiesService is a service for retriving any entity.
